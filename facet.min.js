/*
 * Facet: An EDSL for WebGL graphics
 * By Carlos Scheidegger, cscheid@research.att.com
 * 
 * Copyright (c) 2011 AT&T Intellectual Property
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors: See github logs.
 *
 */// Facet depends on the following software libraries:
////////////////////////////////////////////////////////////////////////////////
// BEGIN UNDERSCORE.JS NOTICE
// 
// Underscore.js 1.1.7
// (c) 2011 Jeremy Ashkenas, DocumentCloud Inc.
// Underscore is freely distributable under the MIT license.
// Portions of Underscore are inspired or borrowed from Prototype,
// Oliver Steele's Functional, and John Resig's Micro-Templating.
// For all details and documentation:
// http://documentcloud.github.com/underscore
//
// END UNDERSCORE.JS NOTICE
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
// BEGIN WEBGL-DEBUG.JS NOTICE
// https://cvs.khronos.org/svn/repos/registry/trunk/public/webgl/sdk/debug/webgl-debug.js
//
// Copyright (c) 2009 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// END WEBGL-DEBUG.JS NOTICE
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
// BEGIN WEBGL-UTILS.JS NOTICE
// https://cvs.khronos.org/svn/repos/registry/trunk/public/webgl/sdk/demos/common/webgl-utils.js
/*
 * Copyright 2010, Google Inc.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are
 * met:
 *
 *     * Redistributions of source code must retain the above copyright
 * notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above
 * copyright notice, this list of conditions and the following disclaimer
 * in the documentation and/or other materials provided with the
 * distribution.
 *     * Neither the name of Google Inc. nor the names of its
 * contributors may be used to endorse or promote products derived from
 * this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */// END WEBGL-UTILS.JS NOTICE
////////////////////////////////////////////////////////////////////////////////
/*

  Facet is a library for making WebGL marginally
  less painful to program, featuring things like nicer support for
  fragment and vertex programs, webgl buffers, textures, etc.

 */function latlong_to_mercator(a,b){a=a/(180/Math.PI),b=b/(180/Math.PI);return[b,Math.log(1/Math.cos(a)+Math.tan(a))]}function spherical_mercator_patch(a){var b=[],c=[],d,e;for(d=0;d<=a;++d)for(e=0;e<=a;++e)b.push(d/a,e/a);for(d=0;d<a;++d)for(e=0;e<a;++e){var f=(a+1)*d+e;c.push(f,f+1,f+a+2,f,f+a+2,f+a+1)}return Facet.model({type:"triangles",uv:[b,2],elements:c,vertex:function(a,b){var c=this.uv.mul(b.sub(a)).add(a);return Facet.Scale.Geo.mercator_to_spherical(c.at(0),c.at(1))},transformed_uv:function(a,b){return Shade.mix(a,b,this.uv).div(Math.PI*2).add(Shade.vec(0,.5))}})}function facet_typeOf(a){var b=typeof a;b==="object"&&(a?typeof a.length=="number"&&!a.propertyIsEnumerable("length")&&typeof a.splice=="function"&&(b="array"):b="null");return b}function facet_constant_type(a){var b=typeof a;if(b==="boolean")return"boolean";if(b==="number")return"number";if(a){b=a._type;if(!b)return"other"}return b}Facet={},Facet._globals={ctx:undefined,display_callback:undefined,batch_render_mode:0},function(){var a=this,b=a._,c={},d=Array.prototype,e=Object.prototype,f=d.slice,g=d.unshift,h=e.toString,i=e.hasOwnProperty,j=d.forEach,k=d.map,l=d.reduce,m=d.reduceRight,n=d.filter,o=d.every,p=d.some,q=d.indexOf,r=d.lastIndexOf;e=Array.isArray;var s=Object.keys,t=Function.prototype.bind,u=function(a){return new z(a)};typeof module!="undefined"&&module.exports?(module.exports=u,u._=u):a._=u,u.VERSION="1.1.7";var v=u.each=u.forEach=function(a,b,d){if(a!=null)if(j&&a.forEach===j)a.forEach(b,d);else if(a.length===+a.length){for(var e=0,f=a.length;e<f;e++)if(e in a&&b.call(d,a[e],e,a)===c)break}else for(e in a)if(i.call(a,e)&&b.call(d,a[e],e,a)===c)break};u.map=function(a,b,c){var d=[];if(a==null)return d;if(k&&a.map===k)return a.map(b,c);v(a,function(a,e,f){d[d.length]=b.call(c,a,e,f)});return d},u.reduce=u.foldl=u.inject=function(a,b,c,d){var e=c!==void 0;a==null&&(a=[]);if(l&&a.reduce===l)return d&&(b=u.bind(b,d)),e?a.reduce(b,c):a.reduce(b);v(a,function(a,f,g){e?c=b.call(d,c,a,f,g):(c=a,e=!0)});if(!e)throw new TypeError("Reduce of empty array with no initial value");return c},u.reduceRight=u.foldr=function(a,b,c,d){a==null&&(a=[]);if(m&&a.reduceRight===m)return d&&(b=u.bind(b,d)),c!==void 0?a.reduceRight(b,c):a.reduceRight(b);a=(u.isArray(a)?a.slice():u.toArray(a)).reverse();return u.reduce(a,b,c,d)},u.find=u.detect=function(a,b,c){var d;w(a,function(a,e,f){if(b.call(c,a,e,f))return d=a,!0});return d},u.filter=u.select=function(a,b,c){var d=[];if(a==null)return d;if(n&&a.filter===n)return a.filter(b,c);v(a,function(a,e,f){b.call(c,a,e,f)&&(d[d.length]=a)});return d},u.reject=function(a,b,c){var d=[];if(a==null)return d;v(a,function(a,e,f){b.call(c,a,e,f)||(d[d.length]=a)});return d},u.every=u.all=function(a,b,d){var e=!0;if(a==null)return e;if(o&&a.every===o)return a.every(b,d);v(a,function(a,f,g){if(!(e=e&&b.call(d,a,f,g)))return c});return e};var w=u.some=u.any=function(a,b,d){b=b||u.identity;var e=!1;if(a==null)return e;if(p&&a.some===p)return a.some(b,d);v(a,function(a,f,g){if(e|=b.call(d,a,f,g))return c});return!!e};u.include=u.contains=function(a,b){var c=!1;if(a==null)return c;if(q&&a.indexOf===q)return a.indexOf(b)!=-1;w(a,function(a){if(c=a===b)return!0});return c},u.invoke=function(a,b){var c=f.call(arguments,2);return u.map(a,function(a){return(b.call?b||a:a[b]).apply(a,c)})},u.pluck=function(a,b){return u.map(a,function(a){return a[b]})},u.max=function(a,b,c){if(!b&&u.isArray(a))return Math.max.apply(Math,a);var d={computed:-Infinity};v(a,function(a,e,f){e=b?b.call(c,a,e,f):a,e>=d.computed&&(d={value:a,computed:e})});return d.value},u.min=function(a,b,c){if(!b&&u.isArray(a))return Math.min.apply(Math,a);var d={computed:Infinity};v(a,function(a,e,f){e=b?b.call(c,a,e,f):a,e<d.computed&&(d={value:a,computed:e})});return d.value},u.sortBy=function(a,b,c){return u.pluck(u.map(a,function(a,d,e){return{value:a,criteria:b.call(c,a,d,e)}}).sort(function(a,b){var c=a.criteria,d=b.criteria;return c<d?-1:c>d?1:0}),"value")},u.groupBy=function(a,b){var c={};v(a,function(a,d){var e=b(a,d);(c[e]||(c[e]=[])).push(a)});return c},u.sortedIndex=function(a,b,c){c||(c=u.identity);for(var d=0,e=a.length;d<e;){var f=d+e>>1;c(a[f])<c(b)?d=f+1:e=f}return d},u.toArray=function(a){return a?a.toArray?a.toArray():u.isArray(a)?f.call(a):u.isArguments(a)?f.call(a):u.values(a):[]},u.size=function(a){return u.toArray(a).length},u.first=u.head=function(a,b,c){return b!=null&&!c?f.call(a,0,b):a[0]},u.rest=u.tail=function(a,b,c){return f.call(a,b==null||c?1:b)},u.last=function(a){return a[a.length-1]},u.compact=function(a){return u.filter(a,function(a){return!!a})},u.flatten=function(a){return u.reduce(a,function(a,b){if(u.isArray(b))return a.concat(u.flatten(b));a[a.length]=b;return a},[])},u.without=function(a){return u.difference(a,f.call(arguments,1))},u.uniq=u.unique=function(a,b){return u.reduce(a,function(a,c,d){if(0==d||(b===!0?u.last(a)!=c:!u.include(a,c)))a[a.length]=c;return a},[])},u.union=function(){return u.uniq(u.flatten(arguments))},u.intersection=u.intersect=function(a){var b=f.call(arguments,1);return u.filter(u.uniq(a),function(a){return u.every(b,function(b){return u.indexOf(b,a)>=0})})},u.difference=function(a,b){return u.filter(a,function(a){return!u.include(b,a)})},u.zip=function(){for(var a=f.call(arguments),b=u.max(u.pluck(a,"length")),c=Array(b),d=0;d<b;d++)c[d]=u.pluck(a,""+d);return c},u.indexOf=function(a,b,c){if(a==null)return-1;var d;if(c)return c=u.sortedIndex(a,b),a[c]===b?c:-1;if(q&&a.indexOf===q)return a.indexOf(b);c=0;for(d=a.length;c<d;c++)if(a[c]===b)return c;return-1},u.lastIndexOf=function(a,b){if(a==null)return-1;if(r&&a.lastIndexOf===r)return a.lastIndexOf(b);for(var c=a.length;c--;)if(a[c]===b)return c;return-1},u.range=function(a,b,c){arguments.length<=1&&(b=a||0,a=0),c=arguments[2]||1;for(var d=Math.max(Math.ceil((b-a)/c),0),e=0,f=Array(d);e<d;)f[e++]=a,a+=c;return f},u.bind=function(a,b){if(a.bind===t&&t)return t.apply(a,f.call(arguments,1));var c=f.call(arguments,2);return function(){return a.apply(b,c.concat(f.call(arguments)))}},u.bindAll=function(a){var b=f.call(arguments,1);b.length==0&&(b=u.functions(a)),v(b,function(b){a[b]=u.bind(a[b],a)});return a},u.memoize=function(a,b){var c={};b||(b=u.identity);return function(){var d=b.apply(this,arguments);return i.call(c,d)?c[d]:c[d]=a.apply(this,arguments)}},u.delay=function(a,b){var c=f.call(arguments,2);return setTimeout(function(){return a.apply(a,c)},b)},u.defer=function(a){return u.delay.apply(u,[a,1].concat(f.call(arguments,1)))};var x=function(a,b,c){var d;return function(){var e=this,f=arguments,g=function(){d=null,a.apply(e,f)};c&&clearTimeout(d);if(c||!d)d=setTimeout(g,b)}};u.throttle=function(a,b){return x(a,b,!1)},u.debounce=function(a,b){return x(a,b,!0)},u.once=function(a){var b=!1,c;return function(){if(b)return c;b=!0;return c=a.apply(this,arguments)}},u.wrap=function(a,b){return function(){var c=[a].concat(f.call(arguments));return b.apply(this,c)}},u.compose=function(){var a=f.call(arguments);return function(){for(var b=f.call(arguments),c=a.length-1;c>=0;c--)b=[a[c].apply(this,b)];return b[0]}},u.after=function(a,b){return function(){if(--a<1)return b.apply(this,arguments)}},u.keys=s||function(a){if(a!==Object(a))throw new TypeError("Invalid object");var b=[],c;for(c in a)i.call(a,c)&&(b[b.length]=c);return b},u.values=function(a){return u.map(a,u.identity)},u.functions=u.methods=function(a){var b=[],c;for(c in a)u.isFunction(a[c])&&b.push(c);return b.sort()},u.extend=function(a){v(f.call(arguments,1),function(b){for(var c in b)b[c]!==void 0&&(a[c]=b[c])});return a},u.defaults=function(a){v(f.call(arguments,1),function(b){for(var c in b)a[c]==null&&(a[c]=b[c])});return a},u.clone=function(a){return u.isArray(a)?a.slice():u.extend({},a)},u.tap=function(a,b){b(a);return a},u.isEqual=function(a,b){if(a===b)return!0;var c=typeof a;if(c!=typeof b)return!1;if(a==b)return!0;if(!a&&b||a&&!b)return!1;a._chain&&(a=a._wrapped),b._chain&&(b=b._wrapped);if(a.isEqual)return a.isEqual(b);if(b.isEqual)return b.isEqual(a);if(u.isDate(a)&&u.isDate(b))return a.getTime()===b.getTime();if(u.isNaN(a)&&u.isNaN(b))return!1;if(u.isRegExp(a)&&u.isRegExp(b))return a.source===b.source&&a.global===b.global&&a.ignoreCase===b.ignoreCase&&a.multiline===b.multiline;if(c!=="object")return!1;if(a.length&&a.length!==b.length)return!1;c=u.keys(a);var d=u.keys(b);if(c.length!=d.length)return!1;for(var e in a)if(!(e in b)||!u.isEqual(a[e],b[e]))return!1;return!0},u.isEmpty=function(a){if(u.isArray(a)||u.isString(a))return a.length===0;for(var b in a)if(i.call(a,b))return!1;return!0},u.isElement=function(a){return!!a&&a.nodeType==1},u.isArray=e||function(a){return h.call(a)==="[object Array]"},u.isObject=function(a){return a===Object(a)},u.isArguments=function(a){return!!a&&!!i.call(a,"callee")},u.isFunction=function(a){return!(!a||!a.constructor||!a.call||!a.apply)},u.isString=function(a){return!!(a===""||a&&a.charCodeAt&&a.substr)},u.isNumber=function(a){return!!(a===0||a&&a.toExponential&&a.toFixed)},u.isNaN=function(a){return a!==a},u.isBoolean=function(a){return a===!0||a===!1},u.isDate=function(a){return!(!a||!a.getTimezoneOffset||!a.setUTCFullYear)},u.isRegExp=function(a){return!(!a||!a.test||!a.exec||!a.ignoreCase&&a.ignoreCase!==!1)},u.isNull=function(a){return a===null},u.isUndefined=function(a){return a===void 0},u.noConflict=function(){a._=b;return this},u.identity=function(a){return a},u.times=function(a,b,c){for(var d=0;d<a;d++)b.call(c,d)},u.mixin=function(a){v(u.functions(a),function(b){B(b,u[b]=a[b])})};var y=0;u.uniqueId=function(a){var b=y++;return a?a+b:b},u.templateSettings={evaluate:/<%([\s\S]+?)%>/g,interpolate:/<%=([\s\S]+?)%>/g},u.template=function(a,b){var c=u.templateSettings;c="var __p=[],print=function(){__p.push.apply(__p,arguments);};with(obj||{}){__p.push('"+a.replace(/\\/g,"\\\\").replace(/'/g,"\\'").replace(c.interpolate,function(a,b){return"',"+b.replace(/\\'/g,"'")+",'"}).replace(c.evaluate||null,function(a,b){return"');"+b.replace(/\\'/g,"'").replace(/[\r\n\t]/g," ")+"__p.push('"}).replace(/\r/g,"\\r").replace(/\n/g,"\\n").replace(/\t/g,"\\t")+"');}return __p.join('');",c=new Function("obj",c);return b?c(b):c};var z=function(a){this._wrapped=a};u.prototype=z.prototype;var A=function(a,b){return b?u(a).chain():a},B=function(a,b){z.prototype[a]=function(){var a=f.call(arguments);g.call(a,this._wrapped);return A(b.apply(u,a),this._chain)}};u.mixin(u),v(["pop","push","reverse","shift","sort","splice","unshift"],function(a){var b=d[a];z.prototype[a]=function(){b.apply(this._wrapped,arguments);return A(this._wrapped,this._chain)}}),v(["concat","join","slice"],function(a){var b=d[a];z.prototype[a]=function(){return A(b.apply(this._wrapped,arguments),this._chain)}}),z.prototype.chain=function(){this._chain=!0;return this},z.prototype.value=function(){return this._wrapped}}(),WebGLDebugUtils=function(){function k(a){function x(a){return typeof a=="function"?a:function(b){a.handleEvent(b)}}function r(){for(var b=0;b<f.length;++b){var c=f[b];c instanceof WebGLBuffer?a.deleteBuffer(c):c instanceof WebctxFramebuffer?a.deleteFramebuffer(c):c instanceof WebctxProgram?a.deleteProgram(c):c instanceof WebctxRenderbuffer?a.deleteRenderbuffer(c):c instanceof WebctxShader?a.deleteShader(c):c instanceof WebctxTexture&&a.deleteTexture(c)}}function q(a){return{statusMessage:a}}function o(a,b){var c=a[b];return function(){if(!d){if(!m(arguments)){k[a.INVALID_OPERATION]=!0;return}var b=c.apply(a,arguments);return b}}}function n(){var a=Object.keys(k);for(var b=0;b<a.length;++b)delete glErrorShdow_[a]}function m(a){for(var b=0;b<a.length;++b){var d=a[b];if(l(d))return d.__webglDebugContextLostId__==c}return!0}function l(a){return a instanceof WebGLBuffer||a instanceof WebGLFramebuffer||a instanceof WebGLProgram||a instanceof WebGLRenderbuffer||a instanceof WebGLShader||a instanceof WebGLTexture}var b={},c=1,d=!1,e=0,f=[],g=undefined,h=undefined,i=undefined,k={};for(var p in a)typeof a[p]=="function"?b[p]=o(a,p):b[p]=a[p];b.loseContext=function(){if(!d){d=!0,++c;while(a.getError());n(),k[a.CONTEXT_LOST_WEBGL]=!0,setTimeout(function(){g&&g(q("context lost"))},0)}},b.restoreContext=function(){if(d)if(h)setTimeout(function(){r(),j(a),d=!1;if(h){var b=h;h=i,i=undefined,b(q("context restored"))}},0);else throw"You can not restore the context without a listener"},b.getError=function(){if(!d){var b;while(b=a.getError())k[b]=!0}for(var b in k)if(k[b]){delete k[b];return b}return a.NO_ERROR};var s=["createBuffer","createFramebuffer","createProgram","createRenderbuffer","createShader","createTexture"];for(var t=0;t<s.length;++t){var u=s[t];b[u]=function(b){return function(){if(d)return null;var e=b.apply(a,arguments);e.__webglDebugContextLostId__=c,f.push(e);return e}}(a[u])}var v=["getActiveAttrib","getActiveUniform","getBufferParameter","getContextAttributes","getAttachedShaders","getFramebufferAttachmentParameter","getParameter","getProgramParameter","getProgramInfoLog","getRenderbufferParameter","getShaderParameter","getShaderInfoLog","getShaderSource","getTexParameter","getUniform","getUniformLocation","getVertexAttrib"];for(var t=0;t<v.length;++t){var u=v[t];b[u]=function(b){return function(){return d?null:b.apply(a,arguments)}}(b[u])}var w=["isBuffer","isEnabled","isFramebuffer","isProgram","isRenderbuffer","isShader","isTexture"];for(var t=0;t<w.length;++t){var u=w[t];b[u]=function(b){return function(){return d?!1:b.apply(a,arguments)}}(b[u])}b.checkFramebufferStatus=function(b){return function(){return d?a.FRAMEBUFFER_UNSUPPORTED:b.apply(a,arguments)}}(b.checkFramebufferStatus),b.getAttribLocation=function(b){return function(){return d?-1:b.apply(a,arguments)}}(b.getAttribLocation),b.getVertexAttribOffset=function(b){return function(){return d?0:b.apply(a,arguments)}}(b.getVertexAttribOffset),b.isContextLost=function(){return d},b.registerOnContextLostListener=function(a){g=x(a)},b.registerOnContextRestoredListener=function(a){d?i=x(a):h=x(a)};return b}function j(a){var b=a.getParameter(a.MAX_VERTEX_ATTRIBS),c=a.createBuffer();a.bindBuffer(a.ARRAY_BUFFER,c);for(var d=0;d<b;++d)a.disableVertexAttribArray(d),a.vertexAttribPointer(d,4,a.FLOAT,!1,0,0),a.vertexAttrib1f(d,0);a.deleteBuffer(c);var e=a.getParameter(a.MAX_TEXTURE_IMAGE_UNITS);for(var d=0;d<e;++d)a.activeTexture(a.TEXTURE0+d),a.bindTexture(a.TEXTURE_CUBE_MAP,null),a.bindTexture(a.TEXTURE_2D,null);a.activeTexture(a.TEXTURE0),a.useProgram(null),a.bindBuffer(a.ARRAY_BUFFER,null),a.bindBuffer(a.ELEMENT_ARRAY_BUFFER,null),a.bindFramebuffer(a.FRAMEBUFFER,null),a.bindRenderbuffer(a.RENDERBUFFER,null),a.disable(a.BLEND),a.disable(a.CULL_FACE),a.disable(a.DEPTH_TEST),a.disable(a.DITHER),a.disable(a.SCISSOR_TEST),a.blendColor(0,0,0,0),a.blendEquation(a.FUNC_ADD),a.blendFunc(a.ONE,a.ZERO),a.clearColor(0,0,0,0),a.clearDepth(1),a.clearStencil(-1),a.colorMask(!0,!0,!0,!0),a.cullFace(a.BACK),a.depthFunc(a.LESS),a.depthMask(!0),a.depthRange(0,1),a.frontFace(a.CCW),a.hint(a.GENERATE_MIPMAP_HINT,a.DONT_CARE),a.lineWidth(1),a.pixelStorei(a.PACK_ALIGNMENT,4),a.pixelStorei(a.UNPACK_ALIGNMENT,4),a.pixelStorei(a.UNPACK_FLIP_Y_WEBGL,!1),a.pixelStorei(a.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!1),a.UNPACK_COLORSPACE_CONVERSION_WEBGL&&a.pixelStorei(a.UNPACK_COLORSPACE_CONVERSION_WEBGL,a.BROWSER_DEFAULT_WEBGL),a.polygonOffset(0,0),a.sampleCoverage(1,!1),a.scissor(0,0,a.canvas.width,a.canvas.height),a.stencilFunc(a.ALWAYS,0,4294967295),a.stencilMask(4294967295),a.stencilOp(a.KEEP,a.KEEP,a.KEEP),a.viewport(0,0,a.canvas.clientWidth,a.canvas.clientHeight),a.clear(a.COLOR_BUFFER_BIT|a.DEPTH_BUFFER_BIT|a.STENCIL_BUFFER_BIT);while(a.getError());}function i(b,c){function f(a,b){return function(){var d=a[b].apply(a,arguments),f=a.getError();f!=0&&(e[f]=!0,c(f,b,arguments));return d}}d(b),c=c||function(b,c,d){var e="";for(var f=0;f<d.length;++f)e+=(f==0?"":", ")+h(c,f,d[f]);a("WebGL error "+g(b)+" in "+c+"("+e+")")};var e={},i={};for(var j in b)typeof b[j]=="function"?i[j]=f(b,j):i[j]=b[j];i.getError=function(){for(var a in e)if(e[a]){e[a]=!1;return a}return b.NO_ERROR};return i}function h(a,c,d){var e=b[a];if(e!==undefined&&e[c])return g(d);return d.toString()}function g(a){e();var b=c[a];return b!==undefined?b:"*UNKNOWN WebGL ENUM (0x"+a.toString(16)+")"}function f(a){e();return c[a]!==undefined}function e(){if(c==null)throw"WebGLDebugUtils.init(ctx) not called"}function d(a){if(c==null){c={};for(var b in a)typeof a[b]=="number"&&(c[a[b]]=b)}}var a=function(a){window.console&&window.console.log&&window.console.log(a)},b={enable:{0:!0},disable:{0:!0},getParameter:{0:!0},drawArrays:{0:!0},drawElements:{0:!0,2:!0},createShader:{0:!0},getShaderParameter:{1:!0},getProgramParameter:{1:!0},getVertexAttrib:{1:!0},vertexAttribPointer:{2:!0},bindTexture:{0:!0},activeTexture:{0:!0},getTexParameter:{0:!0,1:!0},texParameterf:{0:!0,1:!0},texParameteri:{0:!0,1:!0,2:!0},texImage2D:{0:!0,2:!0,6:!0,7:!0},texSubImage2D:{0:!0,6:!0,7:!0},copyTexImage2D:{0:!0,2:!0},copyTexSubImage2D:{0:!0},generateMipmap:{0:!0},bindBuffer:{0:!0},bufferData:{0:!0,2:!0},bufferSubData:{0:!0},getBufferParameter:{0:!0,1:!0},pixelStorei:{0:!0,1:!0},readPixels:{4:!0,5:!0},bindRenderbuffer:{0:!0},bindFramebuffer:{0:!0},checkFramebufferStatus:{0:!0},framebufferRenderbuffer:{0:!0,1:!0,2:!0},framebufferTexture2D:{0:!0,1:!0,2:!0},getFramebufferAttachmentParameter:{0:!0,1:!0,2:!0},getRenderbufferParameter:{0:!0,1:!0},renderbufferStorage:{0:!0,1:!0},clear:{0:!0},depthFunc:{0:!0},blendFunc:{0:!0,1:!0},blendFuncSeparate:{0:!0,1:!0,2:!0,3:!0},blendEquation:{0:!0},blendEquationSeparate:{0:!0,1:!0},stencilFunc:{0:!0},stencilFuncSeparate:{0:!0,1:!0},stencilMaskSeparate:{0:!0},stencilOp:{0:!0,1:!0,2:!0},stencilOpSeparate:{0:!0,1:!0,2:!0,3:!0},cullFace:{0:!0},frontFace:{0:!0}},c=null;return{init:d,mightBeEnum:f,glEnumToString:g,glFunctionArgToString:h,makeDebugContext:i,makeLostContextSimulatingContext:k,resetToInitialState:j}}(),WebGLUtils=function(){var a=function(a){return'<table style="background-color: #8CE; width: 100%; height: 100%;"><tr><td align="center"><div style="display: table-cell; vertical-align: middle;"><div style="">'+a+"</div>"+"</div>"+"</td></tr></table>"},b='This page requires a browser that supports WebGL.<br/><a href="http://get.webgl.org">Click here to upgrade your browser.</a>',c='It doesn\'t appear your computer can support WebGL.<br/><a href="http://get.webgl.org/troubleshooting/">Click here for more information.</a>',d=function(d,f){function g(b){var c=d.parentNode;c&&(c.innerHTML=a(b))}if(!window.WebGLRenderingContext){g(b);return null}var h=e(d,f);h||g(c);return h},e=function(a,b){var c=["webgl","experimental-webgl","webkit-3d","moz-webgl"],d=null;for(var e=0;e<c.length;++e){try{d=a.getContext(c[e],b)}catch(f){}if(d)break}return d};return{create3DContext:e,setupWebGL:d}}(),window.requestAnimFrame=function(){return window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(a,b){window.setTimeout(a,1e3/60)}}(),_.mixin({build:function(a){var b={};_.each(a,function(a){b[a[0]]=a[1]});return b}});var vec={},mat={};vec.eps=1e-6,mat.eps=1e-6;var vec2={};vec2.create=function(){var a=new Float32Array(2);a._type="vector";return a},vec2.copy=function(a){var b=new Float32Array(2);b._type="vector",b[0]=a[0],b[1]=a[1];return b},vec2.make=vec2.copy,vec2.equal=function(a,b){return Math.abs(a[0]-b[0])<vec.eps&&Math.abs(a[1]-b[1])<vec.eps},vec2.random=function(){var a=vec2.make([Math.random(),Math.random()]);return a},vec2.set=function(a,b){a[0]=b[0],a[1]=b[1];return a},vec2.plus=function(a,b){var c=new Float32Array(2);c._type="vector",c[0]=a[0]+b[0],c[1]=a[1]+b[1];return c},vec2.add=function(a,b){a[0]+=b[0],a[1]+=b[1];return a},vec2.minus=function(a,b){var c=new Float32Array(2);c._type="vector",c[0]=a[0]-b[0],c[1]=a[1]-b[1];return c},vec2.subtract=function(a,b){a[0]-=b[0],a[1]-=b[1];return a},vec2.negative=function(a){var b=new Float32Array(2);b._type="vector",b[0]=-a[0],b[1]=-a[1];return b},vec2.negate=function(a){a[0]=-a[0],a[1]=-a[1];return a},vec2.scaling=function(a,b){var c=new Float32Array(2);c._type="vector",c[0]=a[0]*b,c[1]=a[1]*b;return c},vec2.scale=function(a,b){a[0]*=b,a[1]*=b;return a},vec2.schur_product=function(a,b){var c=new Float32Array(2);c._type="vector",c[0]=a[0]*b[0],c[1]=a[1]*b[1];return c},vec2.schur_multiply=function(a,b){a[0]*=b[0],a[1]*=b[1];return a},vec2.normalized=function(a){var b=new Float32Array(2);b._type="vector";var c=a[0],d=a[1],e=Math.sqrt(c*c+d*d);if(!e)return b;if(e==1){b[0]=c,b[1]=d;return b}b[0]=c/e,b[1]=d/e;return b},vec2.normalize=function(a){var b=a[0],c=a[1],d=Math.sqrt(b*b+c*c);if(!d){a[0]=a[1]=0;return a}a[0]/=d,a[1]/=d;return a},vec2.length=function(a){var b=a[0],c=a[1];return Math.sqrt(b*b+c*c)},vec2.dot=function(a,b){return a[0]*b[0]+a[1]*b[1]},vec2.map=function(a,b){return vec2.make(_.map(a,b))},vec2.str=function(a){return"["+a[0]+", "+a[1]+"]"};var vec3={};vec3.create=function(){var a=new Float32Array(3);a._type="vector";return a},vec3.copy=function(a){var b=new Float32Array(3);b._type="vector",b[0]=a[0],b[1]=a[1],b[2]=a[2];return b},vec3.make=vec3.copy,vec3.equal=function(a,b){return Math.abs(a[0]-b[0])<vec.eps&&Math.abs(a[1]-b[1])<vec.eps&&Math.abs(a[2]-b[2])<vec.eps},vec3.random=function(){var a=vec3.make([Math.random(),Math.random(),Math.random()]);return a},vec3.set=function(a,b){a[0]=b[0],a[1]=b[1],a[2]=b[2];return a},vec3.plus=function(a,b){var c=new Float32Array(3);c._type="vector",c[0]=a[0]+b[0],c[1]=a[1]+b[1],c[2]=a[2]+b[2];return c},vec3.add=function(a,b){a[0]+=b[0],a[1]+=b[1],a[2]+=b[2];return a},vec3.minus=function(a,b){var c=new Float32Array(3);c._type="vector",c[0]=a[0]-b[0],c[1]=a[1]-b[1],c[2]=a[2]-b[2];return c},vec3.subtract=function(a,b){a[0]-=b[0],a[1]-=b[1],a[2]-=b[2];return a},vec3.negative=function(a){var b=new Float32Array(3);b._type="vector",b[0]=-a[0],b[1]=-a[1],b[2]=-a[2];return b},vec3.negate=function(a){a[0]=-a[0],a[1]=-a[1],a[2]=-a[2];return a},vec3.scaling=function(a,b){var c=new Float32Array(3);c._type="vector",c[0]=a[0]*b,c[1]=a[1]*b,c[2]=a[2]*b;return c},vec3.scale=function(a,b){a[0]*=b,a[1]*=b,a[2]*=b;return a},vec3.schur_product=function(a,b){var c=new Float32Array(3);c._type="vector",c[0]=a[0]*b[0],c[1]=a[1]*b[1],c[2]=a[2]*b[2];return c},vec3.schur_multiply=function(a,b){a[0]*=b[0],a[1]*=b[1],a[2]*=b[2];return a},vec3.normalized=function(a){var b=new Float32Array(3);b._type="vector";var c=a[0],d=a[1],e=a[2],f=Math.sqrt(c*c+d*d+e*e);if(!f)return b;if(f==1){b[0]=c,b[1]=d,b[2]=e;return b}b[0]=c/f,b[1]=d/f,b[2]=e/f;return b},vec3.normalize=function(a){var b=a[0],c=a[1],d=a[2],e=Math.sqrt(b*b+c*c+d*d);if(!e){a[0]=a[1]=a[2]=0;return a}a[0]/=e,a[1]/=e,a[2]/=e;return a},vec3.cross=function(a,b){var c=a[0],d=a[1],e=a[2],f=b[0],g=b[1],h=b[2],i=new Float32Array(3);i._type="vector",i[0]=d*h-e*g,i[1]=e*f-c*h,i[2]=c*g-d*f;return i},vec3.length=function(a){var b=a[0],c=a[1],d=a[2];return Math.sqrt(b*b+c*c+d*d)},vec3.dot=function(a,b){return a[0]*b[0]+a[1]*b[1]+a[2]*b[2]},vec3.map=function(a,b){return vec3.make(_.map(a,b))},vec3.str=function(a){return"["+a[0]+", "+a[1]+", "+a[2]+"]"};var vec4={};vec4.create=function(){var a=new Float32Array(4);a._type="vector";return a},vec4.copy=function(a){var b=new Float32Array(4);b._type="vector",b[0]=a[0],b[1]=a[1],b[2]=a[2],b[3]=a[3];return b},vec4.make=vec4.copy,vec4.random=function(){var a=[Math.random(),Math.random(),Math.random(),Math.random()];return vec4.make(a)},vec4.equal=function(a,b){return Math.abs(a[0]-b[0])<vec.eps&&Math.abs(a[1]-b[1])<vec.eps&&Math.abs(a[2]-b[2])<vec.eps&&Math.abs(a[3]-b[3])<vec.eps},vec4.set=function(a,b){a[0]=b[0],a[1]=b[1],a[2]=b[2],a[3]=b[3];return a},vec4.plus=function(a,b){var c=new Float32Array(4);c._type="vector",c[0]=a[0]+b[0],c[1]=a[1]+b[1],c[2]=a[2]+b[2],c[3]=a[3]+b[3];return c},vec4.add=function(a,b){a[0]+=b[0],a[1]+=b[1],a[2]+=b[2],a[3]+=b[3];return a},vec4.minus=function(a,b){var c=new Float32Array(4);c._type="vector",c[0]=a[0]-b[0],c[1]=a[1]-b[1],c[2]=a[2]-b[2],c[3]=a[3]-b[3];return c},vec4.subtract=function(a,b){a[0]-=b[0],a[1]-=b[1],a[2]-=b[2],a[3]-=b[3];return a},vec4.negative=function(a){var b=new Float32Array(4);b._type="vector",b[0]=-a[0],b[1]=-a[1],b[2]=-a[2],b[3]=-a[3];return b},vec4.negate=function(a){a[0]=-a[0],a[1]=-a[1],a[2]=-a[2],a[3]=-a[3];return a},vec4.scaling=function(a,b){var c=new Float32Array(4);c._type="vector",c[0]=a[0]*b,c[1]=a[1]*b,c[2]=a[2]*b,c[3]=a[3]*b;return c},vec4.scale=function(a,b){a[0]*=b,a[1]*=b,a[2]*=b,a[3]*=b;return a},vec4.schur_product=function(a,b){var c=new Float32Array(4);c._type="vector",c[0]=a[0]*b[0],c[1]=a[1]*b[1],c[2]=a[2]*b[2],c[3]=a[3]*b[3];return c},vec4.schur_multiply=function(a,b){a[0]*=b[0],a[1]*=b[1],a[2]*=b[2],a[3]*=b[3];return a},vec4.normalized=function(a){var b=new Float32Array(4);b._type="vector";var c=a[0],d=a[1],e=a[2],f=a[3],g=Math.sqrt(c*c+d*d+e*e+f*f);if(!g)return b;if(g==1){b[0]=c,b[1]=d,b[2]=e,b[3]=f;return b}b[0]=c/g,b[1]=d/g,b[2]=e/g,b[3]=f/g;return b},vec4.normalize=function(a){var b=a[0],c=a[1],d=a[2],e=a[3],f=Math.sqrt(b*b+c*c+d*d+e*e);if(!f){a[0]=a[1]=a[2]=a[3]=0;return a}a[0]/=f,a[1]/=f,a[2]/=f,a[3]/=f;return a},vec4.length=function(a){var b=a[0],c=a[1],d=a[2],e=a[3];return Math.sqrt(b*b+c*c+d*d+e*e)},vec4.dot=function(a,b){return a[0]*b[0]+a[1]*b[1]+a[2]*b[2]+a[3]*b[3]},vec4.map=function(a,b){return vec4.make(_.map(a,b))},vec4.str=function(a){return"["+a[0]+", "+a[1]+", "+a[2]+", "+a[3]+"]"};var mat2={};mat2.create=function(){var a=new Float32Array(4);a._type="matrix";return a},mat2.copy=function(a){var b=new Float32Array(4);b._type="matrix",b[0]=a[0],b[1]=a[1],b[2]=a[2],b[3]=a[3];return b},mat2.make=mat2.copy,mat2.equal=function(a,b){return Math.abs(a[0]-b[0])<mat.eps&&Math.abs(a[1]-b[1])<mat.eps&&Math.abs(a[2]-b[2])<mat.eps&&Math.abs(a[3]-b[3])<mat.eps},mat2.random=function(){var a=new Float32Array(4);a._type="matrix",a[0]=Math.random(),a[1]=Math.random(),a[2]=Math.random(),a[3]=Math.random();return a},mat2.set=function(a,b){a[0]=b[0],a[1]=b[1],a[2]=b[2],a[3]=b[3];return a},function(){var a=new Float32Array([1,0,0,1]);mat2.identity=function(){var b=new Float32Array(a);b._type="matrix";return b},mat2.set_identity=function(b){mat2.set(b,a);return b}}(),mat2.transpose=function(a){var b=new Float32Array(4);b._type="matrix",b[0]=a[0],b[1]=a[2],b[2]=a[1],b[3]=a[3];return b},mat2.set_transpose=function(a,b){if(b==a){var c=b[1];a[1]=b[2],a[2]=c;return a}a[0]=b[0],a[1]=b[2],a[2]=b[1],a[3]=b[3];return a},mat2.determinant=function(a){return a[0]*a[3]-a[1]*a[2]},mat2.inverse=function(a){var b=new Float32Array(4);b._type="matrix";var c=a[0],d=a[1],e=a[2],f=a[3],g=c*f-d*e;if(g===0)throw"Singular matrix";b[0]=f/g,b[1]=-d/g,b[2]=-e/g,b[3]=c/g;return b},mat2.invert=function(a){var b=a[0],c=a[1],d=a[2],e=a[3],f=b*e-c*d;if(f===0)throw"Singular matrix";a[0]=e/f,a[1]=-c/f,a[2]=-d/f,a[3]=b/f;return a},mat2.as_mat4=function(a){var b=new Float32Array(16);b._type="matrix",b[0]=a[0],b[1]=a[1],b[4]=a[2],b[5]=a[3];return b},mat2.as_mat3=function(a){var b=new Float32Array(9);b._type="matrix",b[0]=a[0],b[1]=a[1],b[3]=a[2],b[4]=a[3];return b},mat2.product=function(a,b){var c=new Float32Array(4);c._type="matrix";var d=a[0],e=a[1],f=a[2],g=a[3],h=b[0],i=b[1],j=b[2],k=b[3];c[0]=h*d+i*f,c[1]=h*e+i*g,c[2]=j*d+k*f,c[3]=j*e+k*g;return c},mat2.multiply=function(a,b){var c=a[0],d=a[1],e=a[2],f=a[3],g=b[0],h=b[1],i=b[2],j=b[3];a[0]=g*c+h*e,a[1]=g*d+h*f,a[2]=i*c+j*e,a[3]=i*d+j*f;return a},mat2.product_vec=function(a,b){var c=new Float32Array(2);c._type="vector";var d=b[0],e=b[1];c[0]=a[0]*d+a[2]*e,c[1]=a[1]*d+a[3]*e;return c},mat2.multiply_vec=function(a,b){var c=b[0],d=b[1];b[0]=a[0]*c+a[2]*d,b[1]=a[1]*c+a[3]*d;return b},mat2.frobenius_norm=function(a){return Math.sqrt(a[0]*a[0]+a[1]*a[1]+a[2]*a[2]+a[3]*a[3])},mat2.map=function(a,b){return mat2.make(_.map(a,b))},mat2.str=function(a){return"[ ["+a[0]+"] ["+a[2]+"] ]\n"+"[ ["+a[1]+"] ["+a[3]+"] ]"};var mat3={};mat3.create=function(){var a=new Float32Array(9);a._type="matrix";return a},mat3.copy=function(a){var b=new Float32Array(9);b._type="matrix",b[0]=a[0],b[1]=a[1],b[2]=a[2],b[3]=a[3],b[4]=a[4],b[5]=a[5],b[6]=a[6],b[7]=a[7],b[8]=a[8];return b},mat3.make=mat3.copy,mat3.equal=function(a,b){return Math.abs(a[0]-b[0])<mat.eps&&Math.abs(a[1]-b[1])<mat.eps&&Math.abs(a[2]-b[2])<mat.eps&&Math.abs(a[3]-b[3])<mat.eps&&Math.abs(a[4]-b[4])<mat.eps&&Math.abs(a[5]-b[5])<mat.eps&&Math.abs(a[6]-b[6])<mat.eps&&Math.abs(a[7]-b[7])<mat.eps&&Math.abs(a[8]-b[8])<mat.eps},mat3.random=function(){var a=new Float32Array(9);a._type="matrix",a[0]=Math.random(),a[1]=Math.random(),a[2]=Math.random(),a[3]=Math.random(),a[4]=Math.random(),a[5]=Math.random(),a[6]=Math.random(),a[7]=Math.random(),a[8]=Math.random();return a},mat3.set=function(a,b){a[0]=b[0],a[1]=b[1],a[2]=b[2],a[3]=b[3],a[4]=b[4],a[5]=b[5],a[6]=b[6],a[7]=b[7],a[8]=b[8];return a},function(){var a=new Float32Array([1,0,0,0,1,0,0,0,1]);mat3.identity=function(){var b=new Float32Array(a);b._type="matrix";return b},mat3.set_identity=function(b){mat3.set(b,a);return b}}(),mat3.transpose=function(a){var b=new Float32Array(9);b._type="matrix",b[0]=a[0],b[1]=a[3],b[2]=a[6],b[3]=a[1],b[4]=a[4],b[5]=a[7
],b[6]=a[2],b[7]=a[5],b[8]=a[8];return b},mat3.set_transpose=function(a,b){if(b==a){var c=b[1],d=b[2],e=b[5];a[1]=b[3],a[2]=b[6],a[3]=c,a[5]=b[7],a[6]=d,a[7]=e;return a}a[0]=b[0],a[1]=b[3],a[2]=b[6],a[3]=b[1],a[4]=b[4],a[5]=b[7],a[6]=b[2],a[7]=b[5],a[8]=b[8];return a},mat3.determinant=function(a){var b=a[0],c=a[1],d=a[2],e=a[3],f=a[4],g=a[5],h=a[6],i=a[7],j=a[8];return b*f*j+c*g*h+d*e*i-d*f*h-c*e*j-b*g*i},mat3.inverse=function(a){var b=new Float32Array(9);b._type="matrix";var c=a[0],d=a[3],e=a[6],f=a[1],g=a[4],h=a[7],i=a[2],j=a[5],k=a[8],l=c*g*k+d*h*i+e*f*j-e*g*i-d*f*k-c*h*j;if(l===0)throw"Singular matrix";b[0]=(g*k-h*j)/l,b[1]=(-f*k+h*i)/l,b[2]=(f*j-g*i)/l,b[3]=(-d*k+e*j)/l,b[4]=(c*k-e*i)/l,b[5]=(-c*j+d*i)/l,b[6]=(d*h-e*g)/l,b[7]=(-c*h+e*f)/l,b[8]=(c*g-d*f)/l;return b},mat3.invert=function(a){var b=a[0],c=a[3],d=a[6],e=a[1],f=a[4],g=a[7],h=a[2],i=a[5],j=a[8],k=b*f*j+c*g*h+d*e*i-d*f*h-c*e*j-b*g*i;if(k===0)throw"Singular matrix";a[0]=(f*j-g*i)/k,a[1]=(-e*j+g*h)/k,a[2]=(e*i-f*h)/k,a[3]=(-c*j+d*i)/k,a[4]=(b*j-d*h)/k,a[5]=(-b*i+c*h)/k,a[6]=(c*g-d*f)/k,a[7]=(-b*g+d*e)/k,a[8]=(b*f-c*e)/k;return a},mat3.as_mat4=function(a){var b=new Float32Array(9);b._type="matrix",b[0]=a[0],b[1]=a[1],b[2]=a[2],b[4]=a[3],b[5]=a[4],b[6]=a[5],b[8]=a[6],b[9]=a[7],b[10]=a[8];return b},mat3.as_mat2=function(a){var b=new Float32Array(4);b._type="matrix",b[0]=a[0],b[1]=a[1],b[2]=a[3],b[3]=a[4];return b},mat3.product=function(a,b){var c=new Float32Array(9);c._type="matrix";var d=a[0],e=a[1],f=a[2],g=a[3],h=a[4],i=a[5],j=a[6],k=a[7],l=a[8],m=b[0],n=b[1],o=b[2],p=b[3],q=b[4],r=b[5],s=b[6],t=b[7],u=b[8];c[0]=m*d+n*g+o*j,c[1]=m*e+n*h+o*k,c[2]=m*f+n*i+o*l,c[3]=p*d+q*g+r*j,c[4]=p*e+q*h+r*k,c[5]=p*f+q*i+r*l,c[6]=s*d+t*g+u*j,c[7]=s*e+t*h+u*k,c[8]=s*f+t*i+u*l;return c},mat3.multiply=function(a,b){var c=a[0],d=a[1],e=a[2],f=a[3],g=a[4],h=a[5],i=a[6],j=a[7],k=a[8],l=b[0],m=b[1],n=b[2],o=b[3],p=b[4],q=b[5],r=b[6],s=b[7],t=b[8];a[0]=l*c+m*f+n*i,a[1]=l*d+m*g+n*j,a[2]=l*e+m*h+n*k,a[3]=o*c+p*f+q*i,a[4]=o*d+p*g+q*j,a[5]=o*e+p*h+q*k,a[6]=r*c+s*f+t*i,a[7]=r*d+s*g+t*j,a[8]=r*e+s*h+t*k;return a},mat3.product_vec=function(a,b){var c=new Float32Array(3);c._type="vector";var d=b[0],e=b[1],f=b[2];c[0]=a[0]*d+a[3]*e+a[6]*f,c[1]=a[1]*d+a[4]*e+a[7]*f,c[2]=a[2]*d+a[5]*e+a[8]*f;return c},mat3.multiply_vec=function(a,b){var c=b[0],d=b[1],e=b[2];b[0]=a[0]*c+a[3]*d+a[6]*e,b[1]=a[1]*c+a[4]*d+a[7]*e,b[2]=a[2]*c+a[5]*d+a[8]*e;return b},mat3.frobenius_norm=function(a){return Math.sqrt(a[0]*a[0]+a[1]*a[1]+a[2]*a[2]+a[3]*a[3]+a[4]*a[4]+a[5]*a[5]+a[6]*a[6]+a[7]*a[7]+a[8]*a[8])},mat3.map=function(a,b){return mat3.make(_.map(a,b))},mat3.str=function(a){return"[ ["+a[0]+"] ["+a[3]+"] ["+a[6]+"] ]\n"+"[ ["+a[1]+"] ["+a[4]+"] ["+a[7]+"] ]\n"+"[ ["+a[2]+"] ["+a[5]+"] ["+a[8]+"] ]"};var mat4={};mat4.create=function(a){var b=new Float32Array(16);b._type="matrix";return b},mat4.copy=function(a){var b=new Float32Array(16);b._type="matrix",b[0]=a[0],b[1]=a[1],b[2]=a[2],b[3]=a[3],b[4]=a[4],b[5]=a[5],b[6]=a[6],b[7]=a[7],b[8]=a[8],b[9]=a[9],b[10]=a[10],b[11]=a[11],b[12]=a[12],b[13]=a[13],b[14]=a[14],b[15]=a[15];return b},mat4.make=mat4.copy,mat4.equal=function(a,b){return Math.abs(a[0]-b[0])<mat.eps&&Math.abs(a[1]-b[1])<mat.eps&&Math.abs(a[2]-b[2])<mat.eps&&Math.abs(a[3]-b[3])<mat.eps&&Math.abs(a[4]-b[4])<mat.eps&&Math.abs(a[5]-b[5])<mat.eps&&Math.abs(a[6]-b[6])<mat.eps&&Math.abs(a[7]-b[7])<mat.eps&&Math.abs(a[8]-b[8])<mat.eps&&Math.abs(a[9]-b[9])<mat.eps&&Math.abs(a[10]-b[10])<mat.eps&&Math.abs(a[11]-b[11])<mat.eps&&Math.abs(a[12]-b[12])<mat.eps&&Math.abs(a[13]-b[13])<mat.eps&&Math.abs(a[14]-b[14])<mat.eps&&Math.abs(a[15]-b[15])<mat.eps},mat4.random=function(){var a=mat4.create();for(var b=0;b<16;++b)a[b]=Math.random();return a},mat4.set=function(a,b){a[0]=b[0],a[1]=b[1],a[2]=b[2],a[3]=b[3],a[4]=b[4],a[5]=b[5],a[6]=b[6],a[7]=b[7],a[8]=b[8],a[9]=b[9],a[10]=b[10],a[11]=b[11],a[12]=b[12],a[13]=b[13],a[14]=b[14],a[15]=b[15];return a},function(){var a=new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]);mat4.identity=function(){var b=new Float32Array(a);b._type="matrix";return b},mat4.set_identity=function(b){mat4.set(b,a);return b}}(),mat4.transpose=function(a){var b=new Float32Array(16);b._type="matrix",b[0]=a[0],b[1]=a[4],b[2]=a[8],b[3]=a[12],b[4]=a[1],b[5]=a[5],b[6]=a[9],b[7]=a[13],b[8]=a[2],b[9]=a[6],b[10]=a[10],b[11]=a[14],b[12]=a[3],b[13]=a[7],b[14]=a[11],b[15]=a[15];return b},mat4.set_transpose=function(a,b){if(b==a){var c=b[1],d=b[2],e=b[3],f=b[6],g=b[7],h=b[11];a[1]=b[4],a[2]=b[8],a[3]=b[12],a[4]=c,a[6]=b[9],a[7]=b[13],a[8]=d,a[9]=e,a[11]=b[14],a[12]=e,a[13]=g,a[14]=h;return a}a[0]=b[0],a[1]=b[4],a[2]=b[8],a[3]=b[12],a[4]=b[1],a[5]=b[5],a[6]=b[9],a[7]=b[13],a[8]=b[2],a[9]=b[6],a[10]=b[10],a[11]=b[14],a[12]=b[3],a[13]=b[7],a[14]=b[11],a[15]=b[15];return a},mat4.determinant=function(a){var b=a[0],c=a[1],d=a[2],e=a[3],f=a[4],g=a[5],h=a[6],i=a[7],j=a[8],k=a[9],l=a[10],m=a[11],n=a[12],o=a[13],p=a[14],q=a[15];return n*k*h*e-j*o*h*e-n*g*l*e+f*o*l*e+j*g*p*e-f*k*p*e-n*k*d*i+j*o*d*i+n*c*l*i-b*o*l*i-j*c*p*i+b*k*p*i+n*g*d*m-f*o*d*m-n*c*h*m+b*o*h*m+f*c*p*m-b*g*p*m-j*g*d*q+f*k*d*q+j*c*h*q-b*k*h*q-f*c*l*q+b*g*l*q},mat4.inverse=function(a){var b=new Float32Array(16);b._type="matrix";var c=a[0],d=a[1],e=a[2],f=a[3],g=a[4],h=a[5],i=a[6],j=a[7],k=a[8],l=a[9],m=a[10],n=a[11],o=a[12],p=a[13],q=a[14],r=a[15],s=c*h-d*g,t=c*i-e*g,u=c*j-f*g,v=d*i-e*h,w=d*j-f*h,x=e*j-f*i,y=k*p-l*o,z=k*q-m*o,A=k*r-n*o,B=l*q-m*p,C=l*r-n*p,D=m*r-n*q,E=s*D-t*C+u*B+v*A-w*z+x*y;b[0]=(h*D-i*C+j*B)/E,b[1]=(-d*D+e*C-f*B)/E,b[2]=(p*x-q*w+r*v)/E,b[3]=(-l*x+m*w-n*v)/E,b[4]=(-g*D+i*A-j*z)/E,b[5]=(c*D-e*A+f*z)/E,b[6]=(-o*x+q*u-r*t)/E,b[7]=(k*x-m*u+n*t)/E,b[8]=(g*C-h*A+j*y)/E,b[9]=(-c*C+d*A-f*y)/E,b[10]=(o*w-p*u+r*s)/E,b[11]=(-k*w+l*u-n*s)/E,b[12]=(-g*B+h*z-i*y)/E,b[13]=(c*B-d*z+e*y)/E,b[14]=(-o*v+p*t-q*s)/E,b[15]=(k*v-l*t+m*s)/E;return b},mat4.invert=function(a){var b=a[0],c=a[1],d=a[2],e=a[3],f=a[4],g=a[5],h=a[6],i=a[7],j=a[8],k=a[9],l=a[10],m=a[11],n=a[12],o=a[13],p=a[14],q=a[15],r=b*g-c*f,s=b*h-d*f,t=b*i-e*f,u=c*h-d*g,v=c*i-e*g,w=d*i-e*h,x=j*o-k*n,y=j*p-l*n,z=j*q-m*n,A=k*p-l*o,B=k*q-m*o,C=l*q-m*p,D=r*C-s*B+t*A+u*z-v*y+w*x;a[0]=(g*C-h*B+i*A)/D,a[1]=(-c*C+d*B-e*A)/D,a[2]=(o*w-p*v+q*u)/D,a[3]=(-k*w+l*v-m*u)/D,a[4]=(-f*C+h*z-i*y)/D,a[5]=(b*C-d*z+e*y)/D,a[6]=(-n*w+p*t-q*s)/D,a[7]=(j*w-l*t+m*s)/D,a[8]=(f*B-g*z+i*x)/D,a[9]=(-b*B+c*z-e*x)/D,a[10]=(n*v-o*t+q*r)/D,a[11]=(-j*v+k*t-m*r)/D,a[12]=(-f*A+g*y-h*x)/D,a[13]=(b*A-c*y+d*x)/D,a[14]=(-n*u+o*s-p*r)/D,a[15]=(j*u-k*s+l*r)/D;return a},mat4.as_mat3=function(a){var b=new Float32Array(9);b._type="matrix",b[0]=a[0],b[1]=a[1],b[2]=a[2],b[3]=a[4],b[4]=a[5],b[5]=a[6],b[6]=a[8],b[7]=a[9],b[8]=a[10];return b},mat4.as_mat2=function(a){var b=new Float32Array(4);b._type="matrix",b[0]=a[0],b[1]=a[1],b[2]=a[4],b[3]=a[5];return b},mat4.as_inverse_transpose_mat3=function(a){var b=a[0],c=a[4],d=a[8],e=a[1],f=a[5],g=a[9],h=a[2],i=a[6],j=a[10],k=j*f-g*i,l=-j*e+g*h,m=i*e-f*h,n=b*k+c*l+d*m;if(!n)throw"singular matrix";var o=new Float32Array(9);o._type="matrix",o[0]=k/n,o[1]=(-j*c+d*i)/n,o[2]=(g*c-d*f)/n,o[3]=l/n,o[4]=(j*b-d*h)/n,o[5]=(-g*b+d*e)/n,o[6]=m/n,o[7]=(-i*b+c*h)/n,o[8]=(f*b-c*e)/n;return o},mat4.product=function(a,b){var c=new Float32Array(16);c._type="matrix";var d=a[0],e=a[1],f=a[2],g=a[3],h=a[4],i=a[5],j=a[6],k=a[7],l=a[8],m=a[9],n=a[10],o=a[11],p=a[12],q=a[13],r=a[14],s=a[15],t=b[0],u=b[1],v=b[2],w=b[3],x=b[4],y=b[5],z=b[6],A=b[7],B=b[8],C=b[9],D=b[10],E=b[11],F=b[12],G=b[13],H=b[14],I=b[15];c[0]=t*d+u*h+v*l+w*p,c[1]=t*e+u*i+v*m+w*q,c[2]=t*f+u*j+v*n+w*r,c[3]=t*g+u*k+v*o+w*s,c[4]=x*d+y*h+z*l+A*p,c[5]=x*e+y*i+z*m+A*q,c[6]=x*f+y*j+z*n+A*r,c[7]=x*g+y*k+z*o+A*s,c[8]=B*d+C*h+D*l+E*p,c[9]=B*e+C*i+D*m+E*q,c[10]=B*f+C*j+D*n+E*r,c[11]=B*g+C*k+D*o+E*s,c[12]=F*d+G*h+H*l+I*p,c[13]=F*e+G*i+H*m+I*q,c[14]=F*f+G*j+H*n+I*r,c[15]=F*g+G*k+H*o+I*s;return c},mat4.multiply=function(a,b){var c=a[0],d=a[1],e=a[2],f=a[3],g=a[4],h=a[5],i=a[6],j=a[7],k=a[8],l=a[9],m=a[10],n=a[11],o=a[12],p=a[13],q=a[14],r=a[15],s=b[0],t=b[1],u=b[2],v=b[3],w=b[4],x=b[5],y=b[6],z=b[7],A=b[8],B=b[9],C=b[10],D=b[11],E=b[12],F=b[13],G=b[14],H=b[15];a[0]=s*c+t*g+u*k+v*o,a[1]=s*d+t*h+u*l+v*p,a[2]=s*e+t*i+u*m+v*q,a[3]=s*f+t*j+u*n+v*r,a[4]=w*c+x*g+y*k+z*o,a[5]=w*d+x*h+y*l+z*p,a[6]=w*e+x*i+y*m+z*q,a[7]=w*f+x*j+y*n+z*r,a[8]=A*c+B*g+C*k+D*o,a[9]=A*d+B*h+C*l+D*p,a[10]=A*e+B*i+C*m+D*q,a[11]=A*f+B*j+C*n+D*r,a[12]=E*c+F*g+G*k+H*o,a[13]=E*d+F*h+G*l+H*p,a[14]=E*e+F*i+G*m+H*q,a[15]=E*f+F*j+G*n+H*r;return a},mat4.product_vec=function(a,b){var c=new Float32Array(4);c._type="vector";var d=b[0],e=b[1],f=b[2],g=b[3];c[0]=a[0]*d+a[4]*e+a[8]*f+a[12]*g,c[1]=a[1]*d+a[5]*e+a[9]*f+a[13]*g,c[2]=a[2]*d+a[6]*e+a[10]*f+a[14]*g,c[3]=a[3]*d+a[7]*e+a[11]*f+a[15]*g;return c},mat4.multiply_vec=function(a,b){var c=b[0],d=b[1],e=b[2],f=b[3];b[0]=a[0]*c+a[4]*d+a[8]*e+a[12]*f,b[1]=a[1]*c+a[5]*d+a[9]*e+a[13]*f,b[2]=a[2]*c+a[6]*d+a[10]*e+a[14]*f,b[3]=a[3]*c+a[7]*d+a[11]*e+a[15]*f;return b},mat4.multiply_vec3=function(a,b){var c=b[0],d=b[1],e=b[2];b[0]=a[0]*c+a[4]*d+a[8]*e,b[1]=a[1]*c+a[5]*d+a[9]*e,b[2]=a[2]*c+a[6]*d+a[10]*e;return b},mat4.translation_of=function(a,b){var c=new Float32Array(16);c._type="matrix";var d=b[0],e=b[1],f=b[2],g=a[0],h=a[1],i=a[2],j=a[3],k=a[4],l=a[5],m=a[6],n=a[7],o=a[8],p=a[9],q=a[10],r=a[11];c[0]=g,c[1]=h,c[2]=i,c[3]=j,c[4]=k,c[5]=l,c[6]=m,c[7]=n,c[8]=o,c[9]=p,c[10]=q,c[11]=r,c[12]=g*d+k*e+o*f+a[12],c[13]=h*d+l*e+p*f+a[13],c[14]=i*d+m*e+q*f+a[14],c[15]=j*d+n*e+r*f+a[15];return c},mat4.translation=function(a){var b=new Float32Array(16);b._type="matrix",b[0]=b[5]=b[10]=b[15]=1,b[12]=a[0],b[13]=a[1],b[14]=a[2];return b},mat4.translate=function(a,b){var c=b[0],d=b[1],e=b[2];a[12]=a[0]*c+a[4]*d+a[8]*e+a[12],a[13]=a[1]*c+a[5]*d+a[9]*e+a[13],a[14]=a[2]*c+a[6]*d+a[10]*e+a[14],a[15]=a[3]*c+a[7]*d+a[11]*e+a[15];return a},mat4.scaling_of=function(a,b){var c=new Float32Array(16);c._type="matrix";var d=b[0],e=b[1],f=b[2];c[0]=a[0]*d,c[1]=a[1]*d,c[2]=a[2]*d,c[3]=a[3]*d,c[4]=a[4]*e,c[5]=a[5]*e,c[6]=a[6]*e,c[7]=a[7]*e,c[8]=a[8]*f,c[9]=a[9]*f,c[10]=a[10]*f,c[11]=a[11]*f,c[12]=a[12],c[13]=a[13],c[14]=a[14],c[15]=a[15];return c},mat4.scaling=function(a,b){var c=new Float32Array(16);c[0]=b[0],c[5]=b[1],c[10]=b[2],c[15]=1;return c},mat4.scale=function(a,b){var c=new Float32Array(16);c._type="matrix";var d=b[0],e=b[1],f=b[2];a[0]*=d,a[1]*=d,a[2]*=d,a[3]*=d,a[4]*=e,a[5]*=e,a[6]*=e,a[7]*=e,a[8]*=f,a[9]*=f,a[10]*=f,a[11]*=f;return c},mat4.rotation_of=function(a,b,c){var d=c[0],e=c[1],f=c[2],g=Math.sqrt(d*d+e*e+f*f);if(!g)throw"zero-length axis";g!=1&&(d/=g,e/=g,f/=g);var h=Math.sin(b),i=Math.cos(b),j=1-i,k=a[0],l=a[1],m=a[2],n=a[3],o=a[4],p=a[5],q=a[6],r=a[7],s=a[8],t=a[9],u=a[10],v=a[11],w=d*d*j+i,x=e*d*j+f*h,y=f*d*j-e*h,z=d*e*j-f*h,A=e*e*j+i,B=f*e*j+d*h,C=d*f*j+e*h,D=e*f*j-d*h,E=f*f*j+i,F=new Float32Array(16);F._type="matrix",F[0]=k*w+o*x+s*y,F[1]=l*w+p*x+t*y,F[2]=m*w+q*x+u*y,F[3]=n*w+r*x+v*y,F[4]=k*z+o*A+s*B,F[5]=l*z+p*A+t*B,F[6]=m*z+q*A+u*B,F[7]=n*z+r*A+v*B,F[8]=k*C+o*D+s*E,F[9]=l*C+p*D+t*E,F[10]=m*C+q*D+u*E,F[11]=n*C+r*D+v*E,F[12]=a[12],F[13]=a[13],F[14]=a[14],F[15]=a[15];return F},mat4.rotation=function(a,b){var c=b[0],d=b[1],e=b[2],f=Math.sqrt(c*c+d*d+e*e);if(!f)throw"zero-length axis";f!=1&&(c/=f,d/=f,e/=f);var g=Math.sin(a),h=Math.cos(a),i=1-h,j=1,k=0,l=0,m=0,n=0,o=1,p=0,q=0,r=0,s=0,t=1,u=0,v=c*c*i+h,w=d*c*i+e*g,x=e*c*i-d*g,y=c*d*i-e*g,z=d*d*i+h,A=e*d*i+c*g,B=c*e*i+d*g,C=d*e*i-c*g,D=e*e*i+h,E=new Float32Array(16);E._type="matrix",E[0]=c*c*i+h,E[1]=d*c*i+e*g,E[2]=e*c*i-d*g,E[4]=c*d*i-e*g,E[5]=d*d*i+h,E[6]=e*d*i+c*g,E[8]=c*e*i+d*g,E[9]=d*e*i-c*g,E[10]=e*e*i+h,E[15]=1;return E},mat4.rotate=function(a,b,c){var d=c[0],e=c[1],f=c[2],g=Math.sqrt(d*d+e*e+f*f);if(!g)throw"zero-length axis";g!=1&&(d/=g,e/=g,f/=g);var h=Math.sin(b),i=Math.cos(b),j=1-i,k=a[0],l=a[1],m=a[2],n=a[3],o=a[4],p=a[5],q=a[6],r=a[7],s=a[8],t=a[9],u=a[10],v=a[11],w=d*d*j+i,x=e*d*j+f*h,y=f*d*j-e*h,z=d*e*j-f*h,A=e*e*j+i,B=f*e*j+d*h,C=d*f*j+e*h,D=e*f*j-d*h,E=f*f*j+i;a[0]=k*w+o*x+s*y,a[1]=l*w+p*x+t*y,a[2]=m*w+q*x+u*y,a[3]=n*w+r*x+v*y,a[4]=k*z+o*A+s*B,a[5]=l*z+p*A+t*B,a[6]=m*z+q*A+u*B,a[7]=n*z+r*A+v*B,a[8]=k*C+o*D+s*E,a[9]=l*C+p*D+t*E,a[10]=m*C+q*D+u*E,a[11]=n*C+r*D+v*E,a[12]=a[12],a[13]=a[13],a[14]=a[14],a[15]=a[15];return a},mat4.frustum=function(a,b,c,d,e,f){var g=new Float32Array(16);g._type="matrix";var h=b-a,i=d-c,j=f-e;g[0]=e*2/h,g[5]=e*2/i,g[8]=(b+a)/h,g[9]=(d+c)/i,g[10]=-(f+e)/j,g[11]=-1,g[14]=-(f*e*2)/j;return g},mat4.perspective=function(a,b,c,d){var e=c*Math.tan(a*Math.PI/360),f=e*b;return mat4.frustum(-f,f,-e,e,c,d)},mat4.ortho=function(a,b,c,d,e,f){var g=new Float32Array(16);g._type="matrix";var h=b-a,i=d-c,j=f-e;g[0]=2/h,g[5]=2/i,g[10]=-2/j,g[12]=-(a+b)/h,g[13]=-(d+c)/i,g[14]=-(f+e)/j,g[15]=1;return g},mat4.lookAt=function(a,b,c){var d=new Float32Array(16);d._type="matrix";var e=a[0],f=a[1],g=a[2],h=c[0],i=c[1],j=c[2],k=b[0],l=b[1],m=b[2];if(e==k&&f==l&&g==m)return mat4.identity();var n,o,p,q,r,s,t,u,v,w;n=e-b[0],o=f-b[1],p=g-b[2],w=Math.sqrt(n*n+o*o+p*p),n/=w,o/=w,p/=w,q=i*p-j*o,r=j*n-h*p,s=h*o-i*n;if(w=Math.sqrt(q*q+r*r+s*s))q/=w,r/=w,s/=w;t=o*s-p*r,u=p*q-n*s,v=n*r-o*q;if(w=Math.sqrt(t*t+u*u+v*v))t/=w,u/=w,v/=w;d[0]=q,d[1]=t,d[2]=n,d[4]=r,d[5]=u,d[6]=o,d[8]=s,d[9]=v,d[10]=p,d[12]=-(q*e+r*f+s*g),d[13]=-(t*e+u*f+v*g),d[14]=-(n*e+o*f+p*g),d[15]=1;return d},mat4.frobenius_norm=function(a){return Math.sqrt(a[0]*a[0]+a[1]*a[1]+a[2]*a[2]+a[3]*a[3]+a[4]*a[4]+a[5]*a[5]+a[6]*a[6]+a[7]*a[7]+a[8]*a[8]+a[9]*a[9]+a[10]*a[10]+a[11]*a[11]+a[12]*a[12]+a[13]*a[13]+a[14]*a[14]+a[15]*a[15])},mat4.map=function(a,b){return mat4.make(_.map(a,b))},mat4.str=function(a){return"[ ["+a[0]+"] ["+a[4]+"]"+"[ ["+a[8]+"] ["+a[12]+"]\n"+"[ ["+a[1]+"] ["+a[5]+"]"+"[ ["+a[9]+"] ["+a[13]+"]\n"+"[ ["+a[2]+"] ["+a[6]+"]"+"[ ["+a[10]+"] ["+a[14]+"]\n"+"[ ["+a[3]+"] ["+a[7]+"]"+"[ ["+a[11]+"] ["+a[15]+"] ]"},vec[2]=vec2,vec[3]=vec3,vec[4]=vec4,vec2.mat=mat2,vec3.mat=mat3,vec4.mat=mat4,vec.eps=1e-6,vec.make=function(a){return vec[a.length].make(a)},vec.equal=function(a,b){if(a.length!=b.length)throw"mismatched lengths";return vec[a.length].equal(a,b)},vec.plus=function(a,b){if(a.length!=b.length)throw"mismatched lengths";return vec[a.length].plus(a,b)},vec.minus=function(a,b){if(a.length!=b.length)throw"mismatched lengths";return vec[a.length].minus(a,b)},vec.negative=function(a){return vec[a.length].negative(a)},vec.scaling=function(a,b){return vec[a.length].scaling(a,b)},vec.schur_product=function(a,b){if(a.length!=b.length)throw"mismatched lengths";return vec[a.length].schur_product(a,b)},vec.normalized=function(a){return vec[a.length].schur_product(a)},vec.length=function(a){return vec[a.length].length(a)},vec.dot=function(a,b){if(a.length!=b.length)throw"mismatched lengths";return vec[a.length].dot(a,b)},vec.map=function(a,b){return vec[a.length].map(a,b)},vec.str=function(a){return a[a.length].str(a)},function(){function a(a){switch(a){case 4:return 2;case 9:return 3;case 16:return 4}throw"bad length"}mat[2]=mat2,mat[3]=mat3,mat[4]=mat4,mat2.vec=vec2,mat3.vec=vec3,mat4.vec=vec4,mat.eps=1e-6,mat.make=function(b){return mat[a(b.length)].make(b)},mat.map=function(b,c){return mat[a(b.length)].map(b,c)},mat.equal=function(b,c){if(b.length!=c.length)throw"mismatched lengths: "+b.length+", "+c.length;return mat[a(b.length)].equal(b,c)},mat.str=function(b){return mat[a(b.length)].str(b)}}(),Facet.attribute_buffer=function(a,b,c,d){var e=Facet._globals.ctx;d===undefined&&(d=!1);var f={"float":[e.FLOAT,Float32Array],"short":[e.SHORT,Int16Array],ushort:[e.UNSIGNED_SHORT,Uint16Array],"byte":[e.BYTE,Int8Array],ubyte:[e.UNSIGNED_BYTE,Uint8Array]};b=b||3,c=f[c||"float"];var g=new c[1](a),h=e.createBuffer();e.bindBuffer(e.ARRAY_BUFFER,h),e.bufferData(e.ARRAY_BUFFER,g,e.STATIC_DRAW),h._shade_type="attribute_buffer",h.array=g,h.itemSize=b,h.numItems=a.length/b,h.bind=function(a){return function(b){e.bindBuffer(e.ARRAY_BUFFER,this),e.vertexAttribPointer(b,this.itemSize,a,d,0,0)}}(c[0]),h.draw=function(a){e.drawArrays(a,0,this.numItems)},h.bind_and_draw=function(a,b){this.bind(a),this.draw(b)};return h},function(){function b(b){var c=Facet._globals.ctx;if(b.batch_id!==a.batch_id){var d=b.attributes||{},e=b.uniforms||{},f=b.program,g=b.primitives,h;Facet.unload_batch(),a=b,b.set_caps(),c.useProgram(f);for(h in d){var i=f[h];_.isUndefined(i)||(c.enableVertexAttribArray(i),d[h].bind(i))}var j=0;_.each(f.uniforms,function(a){var b=a.uniform_name,d=a.uniform_call,e=a.get();if(_.isUndefined(e))throw"uniform "+b+" has not been set.";var g=facet_constant_type(e);g==="other"?(a._facet_active_uniform=function(a,b){return function(d){c.activeTexture(c.TEXTURE0+b),c.bindTexture(c.TEXTURE_2D,d),c.uniform1i(a,b)}}(f[b],j),j++):g==="number"||g=="vector"?a._facet_active_uniform=function(a,b){return function(d){a.call(c,b,d)}}(c[d],f[b]):g==="matrix"&&(a._facet_active_uniform=function(a,b){return function(d){c[a](b,!1,d)}}(d,f[b])),a._facet_active_uniform(e)})}b.draw_chunk()}var a={};Facet.unload_batch=function(){var b=Facet._globals.ctx;if(a.attributes){for(var c in a.attributes)b.disableVertexAttribArray(a.program[c]);_.each(a.program.uniforms,function(a){delete a._facet_active_uniform})}a={},b.disable(b.DEPTH_TEST),b.disable(b.BLEND),b.depthMask(!0)};var c=1;Facet.bake=function(a,d){function q(a,b){return{program:a,attributes:g(a),set_caps:d.mode&&d.mode[b]||Facet.DrawingMode.standard[b],draw_chunk:o,batch_id:c++}}function k(){return h(function(a,b){if(b==="gl_FragColor"){var c=d.gl_Position.swizzle("z"),e=d.gl_Position.swizzle("w"),f=c.div(e).add(1).div(2),g=Shade.vec(f,f.mul(256),f.mul(65536),f.mul(1<<24));return g}return a})}function j(){var a;d.pick_id?a=Shade.make(d.pick_id):a=Shade.make(Shade.id(f));return h(function(b,c){if(c==="gl_FragColor"){var e=d.pick_if||Shade.make(b).swizzle("a").gt(0);return a.discard_if(Shade.not(e))}return b})}function i(){return h(function(a,b){return a})}function h(a){var b={};_.each(d,function(c,d){Shade.is_program_parameter(d)&&(b[d]=a(c,d))});return Shade.program(b)}function g(a){return _.build(_.map(a.attribute_buffers,function(a){return[a._shade_name,a]}))}d=Shade.canonicalize_program_object(d);var e=Facet._globals.ctx,f=Facet.fresh_pick_id(),l={points:e.POINTS,line_strip:e.LINE_STRIP,line_loop:e.LINE_LOOP,lines:e.LINES,triangle_strip:e.TRIANGLE_STRIP,triangle_fan:e.TRIANGLE_FAN,triangles:e.TRIANGLES},m=l[a.type],n=a.elements,o;facet_typeOf(n)==="number"?o=function(){e.drawArrays(m,0,n)}:o=function(){n.bind_and_draw(n,m)};var p=[l[a.type],a.elements],r=q(i(),"set_draw_caps"),s=q(j(),"set_pick_caps"),t=q(k(),"set_unproject_caps"),u=[r,s,t],v={batch_id:f,draw:function(){b(u[Facet._globals.batch_render_mode])},_draw:function(){b(r)},_pick:function(){b(s)}};return v}}(),Facet.Camera={},Facet.Camera.perspective=function(a){function j(){f=mat4.perspective(b,c,d,e),h.set(Shade.mul(mat4.product(f,g)))}a=a||{},a=_.defaults(a,{look_at:[[0,0,0],[0,0,-1],[0,1,0]],field_of_view_y:45,aspect_ratio:1,near_distance:.1,far_distance:100});var b=a.field_of_view_y,c=a.aspect_ratio,d=a.near_distance,e=a.far_distance,f,g=mat4.lookAt(a.look_at[0],a.look_at[1],a.look_at[2]),h=Shade.uniform("mat4"),i=Shade.uniform("mat4",g);j();return{look_at:function(a,b,c){g=mat4.lookAt(a,b,c),i.set(g)},set_aspect_ratio:function(a){c=a,j(),h.set(Shade.mul(mat4.product(f,g)))},set_near_distance:function(a){d=a,j(),h.set(Shade.mul(mat4.product(f,g)))},set_far_distance:function(a){e=a,j(),h.set(Shade.mul(mat4.product(f,g)))},set_field_of_view_y:function(a){b=a,j(),h.set(Shade.mul(mat4.product(f,g)))},project:function(a){var b=a.type;if(b.equals(Shade.Types.vec2))return h.mul(Shade.vec(a,0,1));if(b.equals(Shade.Types.vec3))return h.mul(Shade.vec(a,1));if(b.equals(Shade.Types.vec4))return h.mul(a);throw"expected vec, got "+b.repr()},eye_vertex:function(a){var b=a.type;if(b.equals(Shade.Types.vec2))return i.mul(Shade.vec(a,0,1));if(b.equals(Shade.Types.vec3))return i.mul(Shade.vec(a,1));if(b.equals(Shade.Types.vec4))return i.mul(a);throw"expected vec, got "+b.repr()}}},Facet.Camera.ortho=function(a){function j(){var a=(c-b)/(e-d),j,k,l,m,n,o;if(a>f){var p=(e+d)/2;n=(c-b)/2,o=n/f,j=b,k=c,l=p+o,m=p-o}else{var q=(c+b)/2;o=(e-d)/2,n=o*f,j=q-n,k=q+n,l=e,m=d}i.set(mat4.ortho(j,k,m,l,g,h))}a=_.defaults(a||{},{aspect_ratio:1,left:-1,right:-1,bottom:-1,top:1,near:-1,far:1});var b=a.left,c=a.right,d=a.bottom,e=a.top,f=a.aspect_ratio,g=a.near,h=a.far,i=Shade.uniform("mat4");j();return{set_aspect_ratio:function(a){f=a,j()},set_bounds:function(a){a=_.defaults(a,{left:-1,right:1,bottom:-1,top:1,near:-1,far:1}),b=a.left,c=a.right,d=a.bottom,e=a.top,g=a.near,h=a.far,j()},project:function(a){var b=a.type;if(b.equals(Shade.Types.vec2))return i.mul(Shade.vec(a,0,1));if(b.equals(Shade.Types.vec3))return i.mul(Shade.vec(a,1));if(b.equals(Shade.Types.vec4))return i.mul(a);throw"expected vec, got "+b.repr()}}},function(){}(),Facet.element_buffer=function(a){var b=Facet._globals.ctx,c=b.createBuffer();b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,c);var d=new Uint16Array(a);b.bufferData(b.ELEMENT_ARRAY_BUFFER,d,b.STATIC_DRAW),c._shade_type="element_buffer",c.array=d,c.itemSize=1,c.numItems=a.length,c.bind=function(){b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,this)},c.draw=function(a){b.drawElements(a,this.numItems,b.UNSIGNED_SHORT,0)},c.bind_and_draw=function(a,b){this.bind(a),this.draw(b)};return c},function(){var a=1;Facet.fresh_pick_id=function(b){b=b||1;var c=a;a+=b;return c}}(),Facet.id_buffer=function(a){if(facet_typeOf(a)!=="array")throw"id_buffer expects array of integers";var b=new Int32Array(a),c=new Uint8Array(b.buffer);return Facet.attribute_buffer(c,4,"ubyte",!0)},Facet.init=function(a,b){a.unselectable=!0,a.onselectstart=function(){return!1};var c,d,e;b=_.defaults(b||{},{clearColor:[1,1,1,0],clearDepth:1,attributes:{alpha:!0,depth:!0}});if(b.clearColor.expression_type){if(!b.clearColor.is_constant())throw"clearColor must be constant expression";if(!b.clearColor.type.equals(Shade.Types.vec4))throw"clearColor must be vec4";d=_.toArray(b.clearColor.constant_value())}else d=b.clearColor;if(b.clearDepth.expression_type){if(!b.clearDepth.is_constant())throw"clearDepth must be constant expression";if(!b.clearDepth.type.equals(Shade.Types.float_t))throw"clearDepth must be float";e=b.clearDepth.constant_value()}else e=b.clearDepth;Facet._globals.display_callback=b.display||function(){};try{"attributes"in b?c=WebGLUtils.setupWebGL(a,b.attributes):c=WebGLUtils.setupWebGL(a);if(!c)throw"failed context creation";if(b.debugging){var f=function(a,b,c){throw WebGLDebugUtils.glEnumToString(a)+" was caused by call to "+b};c=WebGLDebugUtils.makeDebugContext(c,f,b.tracing)}c.viewportWidth=a.width,c.viewportHeight=a.height;var g=["mouseover","mousemove","mousedown","mouseout","mouseup"];for(var h=0;h<g.length;++h){var i=g[h],j=b[i];_.isUndefined(j)||a.addEventListener(i,j,!1)}var k,l=_.map(c.getSupportedExtensions(),function(a){return a.toLowerCase()});if(l.indexOf("oes_texture_float")==-1){alert("OES_texture_float is not available on your browser/computer! Facet will not work, sorry.");throw"insufficient GPU support"}c.getExtension("oes_texture_float")}catch(m){alert(m)}if(!c){alert("Could not initialise WebGL, sorry :-(");throw"failed initalization"}c.display=function(){this.viewport(0,0,this.viewportWidth,this.viewportHeight),this.clearDepth(e),this.clearColor.apply(c,d),this.clear(c.COLOR_BUFFER_BIT|c.DEPTH_BUFFER_BIT),Facet._globals.display_callback()},Facet.set_context(c);return c},Facet.load_image_into_texture=function(a){function h(){f.bindTexture(f.TEXTURE_2D,b),f.pixelStorei(f.UNPACK_FLIP_Y_WEBGL,!0),f.texSubImage2D(f.TEXTURE_2D,0,d,e,a.width,a.height,f.RGBA,f.UNSIGNED_BYTE,a.buffer),c()}function g(a){f.bindTexture(f.TEXTURE_2D,b),f.pixelStorei(f.UNPACK_FLIP_Y_WEBGL,!0),f.texSubImage2D(f.TEXTURE_2D,0,d,e,f.RGBA,f.UNSIGNED_BYTE,a),c(a)}a=_.defaults(a,{onload:function(){},x_offset:0,y_offset:0});var b=a.texture,c=a.onload,d=a.x_offset,e=a.y_offset,f=Facet._globals.ctx;if(a.src){var i=new Image;i.onload=function(){g(i)},a.crossOrigin&&(i.crossOrigin=a.crossOrigin),i.src=a.src}else if(a.img)if(a.img.isComplete)g(a.img);else{var j=b.image.onload||function(){};a.img.onload=function(){g(a.img),j()}}else h()},Facet.identity=function(){return mat4.identity()},Facet.translation=function(a){function c(a){return mat4.translation(a)}function b(a){var b=mat3.create();b[6]=a[0],b[7]=a[1];return b}if(a.length===3)return c(a);if(arguments.length===3)return c(arguments);if(a.length===2)return b(a);if(arguments.length===2)return b(arguments);throw"invalid vector size for translation"},Facet.scaling=function(a){function d(a){return mat4.scaling(a)}function c(a){var b=mat3.create();b[0]=a[0],b[4]=a[1];return b}var b;if(a.length===3)return d(a);if(arguments.length===3)return d(arguments);if(a.length===2)return c(a);if(arguments.length===2)return c(arguments);throw"invalid size for scale"},Facet.rotation=function(a,b){return mat4.rotation(a,b)},Facet.look_at=function(a,b,c,d,e,f,g,h,i){return mat4.lookAt([a,b,c],[d,e,f],[g,h,i])},Facet.perspective=mat4.perspective,Facet.frustum=mat4.frustum,Facet.ortho=mat4.ortho,Facet.shear=function(a,b){return mat4.create([1,0,a,0,0,1,b,0,0,0,1,0,0,0,0,1])},Facet.model=function(a){function d(a,b){return function(c){var d=c.constant_value();for(var e=0;e<b;++e)a.push(d[e])}}var b={},c;for(var e in a){var f=a[e];if(e==="type")b.type=f;else if(e==="elements")f._shade_type==="element_buffer"?b.elements=Shade.make(f):facet_typeOf(f)==="array"?b.elements=Shade.make(Facet.element_buffer(f)):b.elements=f;else if(f._shade_type==="attribute_buffer")b[e]=Shade.make(f),c=f.numItems;else if(facet_typeOf(f)==="array"){var g;if(facet_typeOf(f[0])!=="array"){var h=f[0].type.vec_dimension(),i=[];_.each(f,d(i,h)),g=Facet.attribute_buffer(i,h),b[e]=Shade.make(g),c=g.numItems}else g=Facet.attribute_buffer(f[0],f[1]),b[e]=Shade.make(g),c=g.numItems}else b[e]=f}if(!("elements"in b)){if(_.isUndefined(c))throw"could not figure out how many elements are in this model; consider passing an 'elements' field";b.elements=c}return b},function(){var a;Facet.Picker={draw_pick_scene:function(b){var c=Facet._globals,d=c.ctx;a||(a=Facet.render_buffer({width:d.viewportWidth,height:d.viewportHeight,TEXTURE_MAG_FILTER:d.NEAREST,TEXTURE_MIN_FILTER:d.NEAREST})),b=b||c.display_callback;var e=c.batch_render_mode;c.batch_render_mode=1;try{a.render_to_buffer(function(){d.clearColor(0,0,0,0),d.clear(d.COLOR_BUFFER_BIT|d.DEPTH_BUFFER_BIT),b()})}finally{c.batch_render_mode=e}},pick:function(b,c){var d=Facet._globals.ctx,e=new ArrayBuffer(4),f=new Uint8Array(4);d.readPixels(b,c,1,1,d.RGBA,d.UNSIGNED_BYTE,f),a.render_to_buffer(function(){d.readPixels(b,c,1,1,d.RGBA,d.UNSIGNED_BYTE,f)});var g=new Uint32Array(f.buffer);return g[0]}}}(),Facet.profile=function(a,b,c,d){c&&c(),console.profile(a),setTimeout(function(){console.profileEnd(),d&&d()},b*1e3)},Facet.program=function(a,b){function d(a,b){var d=c.createShader(a);c.shaderSource(d,b),c.compileShader(d);if(!c.getShaderParameter(d,c.COMPILE_STATUS)){alert(c.getShaderInfoLog(d)),console.log("Error message: "),console.log(c.getShaderInfoLog(d)),console.log("Failing shader: "),console.log(b);return null}return d}var c=Facet._globals.ctx,e=d(c.VERTEX_SHADER,a),f=d(c.FRAGMENT_SHADER,b),g=c.createProgram();c.attachShader(g,e),c.attachShader(g,f),c.linkProgram(g);if(!c.getProgramParameter(g,c.LINK_STATUS)){alert("Could not initialise shaders");return null}var h=c.getProgramParameter(g,c.ACTIVE_UNIFORMS),i=/.*\[0\]/,j;for(var k=0;k<h;++k){j=c.getActiveUniform(g,k);if(i.test(j.name)){var l=j.name.substr(0,j.name.length-3);g[l]=c.getUniformLocation(g,l)}else g[j.name]=c.getUniformLocation(g,j.name)}var m=c.getProgramParameter(g,c.ACTIVE_ATTRIBUTES);for(k=0;k<m;++k)j=c.getActiveAttrib(g,k),g[j.name]=c.getAttribLocation(g,j.name);return g},Facet.render_buffer=function(a){var b=Facet._globals.ctx,c=b.createFramebuffer();b.bindFramebuffer(b.FRAMEBUFFER,c),a=_.defaults(a||{},{width:512,height:512}),c.width=a.width,c.height=a.height;var d=Facet.texture(a),e=b.createRenderbuffer();b.bindRenderbuffer(b.RENDERBUFFER,e),b.renderbufferStorage(b.RENDERBUFFER,b.DEPTH_COMPONENT16,c.width,c.height),b.framebufferTexture2D(b.FRAMEBUFFER,b.COLOR_ATTACHMENT0,b.TEXTURE_2D,d,0),b.framebufferRenderbuffer(b.FRAMEBUFFER,b.DEPTH_ATTACHMENT,b.RENDERBUFFER,e);var f=b.checkFramebufferStatus(b.FRAMEBUFFER);switch(f){case b.FRAMEBUFFER_COMPLETE:break;case b.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:throw"incomplete framebuffer: FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case b.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:throw"incomplete framebuffer: FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case b.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:throw"incomplete framebuffer: FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case b.FRAMEBUFFER_UNSUPPORTED:throw"incomplete framebuffer: FRAMEBUFFER_UNSUPPORTED";default:throw"incomplete framebuffer: "+f}b.bindTexture(b.TEXTURE_2D,null),b.bindRenderbuffer(b.RENDERBUFFER,null),b.bindFramebuffer(b.FRAMEBUFFER,null);return{_shade_type:"render_buffer",texture:d,width:c.width,height:c.height,frame_buffer:c,render_to_buffer:function(a){try{b.bindFramebuffer(b.FRAMEBUFFER,c),b.viewport(0,0,c.width,c.height),a()}finally{b.bindFramebuffer(b.FRAMEBUFFER,null)}},make_screen_batch:function(a){var b=Facet.Models.square();return Facet.bake(b,{position:Shade.vec(b.vertex.mul(2).sub(Shade.vec(1,1)),0,1),color:a(Shade.texture2D(d,b.tex_coord),b.tex_coord)})}}},Facet.set_context=function(a){Facet._globals.ctx=a},Facet.texture=function(a){function c(c){b.bindTexture(b.TEXTURE_2D,c),b.pixelStorei(b.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!1),c.image?(b.pixelStorei(b.UNPACK_FLIP_Y_WEBGL,!0),b.pixelStorei(b.UNPACK_COLORSPACE_CONVERSION_WEBGL,b.BROWSER_DEFAULT_WEBGL),b.texImage2D(b.TEXTURE_2D,0,a.format,a.format,a.type,c.image)):(b.pixelStorei(b.UNPACK_FLIP_Y_WEBGL,!1),b.pixelStorei(b.UNPACK_COLORSPACE_CONVERSION_WEBGL,b.NONE),b.texImage2D(b.TEXTURE_2D,0,a.format,c.width,c.height,0,a.format,a.type,c.buffer)),b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,a.mag_filter),b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,a.min_filter),b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_S,a.wrap_s),b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,a.wrap_t),a.mipmaps&&b.generateMipmap(b.TEXTURE_2D),b.bindTexture(b.TEXTURE_2D,null),a.onload(c),Facet.unload_batch()}var b=Facet._globals.ctx;a=_.defaults(a,{onload:function(){},mipmaps:!1,mag_filter:b.LINEAR,min_filter:b.LINEAR,wrap_s:b.CLAMP_TO_EDGE,wrap_t:b.CLAMP_TO_EDGE,format:b.RGBA,type:b.UNSIGNED_BYTE});var d=b.createTexture();d._shade_type="texture",d.width=a.width,d.height=a.height;if(a.src){var e=new Image;e.onload=function(){d.width=e.width,d.height=e.height,c(d)},d.image=e,a.crossOrigin&&(e.crossOrigin=a.crossOrigin),e.src=a.src}else a.img?(d.image=a.img,d.image.isComplete?(d.width=d.image.width,d.height=d.image.height,c(d)):d.image.onload=function(){d.width=d.image.width,d.height=d.image.height,c(d)}):(d.buffer=a.buffer||null,c(d));return d},function(){var a,b,c;Facet.Unprojector={draw_unproject_scene:function(d){var e=Facet._globals,f=e.ctx;a||(a=Facet.render_buffer({width:f.viewportWidth,height:f.viewportHeight,TEXTURE_MAG_FILTER:f.NEAREST,TEXTURE_MIN_FILTER:f.NEAREST}));if(!c){var g=Shade.make(Facet.attribute_buffer([-1,-1,1,-1,-1,1,1,1],2)),h=Facet.model({type:"triangle_strip",elements:4,vertex:g});b=Shade.uniform("float"),c=Facet.bake(h,{position:Shade.vec(g,b,1),color:Shade.vec(1,1,1,1)})}d=d||e.display_callback;var i=e.batch_render_mode;e.batch_render_mode=2,a.render_to_buffer(function(){var a=f.getParameter(f.COLOR_CLEAR_VALUE),b=f.getParameter(f.DEPTH_CLEAR_VALUE);f.clearColor(b,b/256,b/65536,b/(1<<24)),f.clear(f.DEPTH_BUFFER_BIT|f.COLOR_BUFFER_BIT);try{d()}finally{f.clearColor(a[0],a[1],a[2],a[3]),e.batch_render_mode=i}})},unproject:function(b,c){var d=Facet._globals.ctx,e=new ArrayBuffer(4),f=new Uint8Array(4);d.readPixels(b,c,1,1,d.RGBA,d.UNSIGNED_BYTE,f),a.render_to_buffer(function(){d.readPixels(b,c,1,1,d.RGBA,d.UNSIGNED_BYTE,f)});return f[0]/256+f[1]/65536+f[2]/(1<<24)}}}(),Facet.Net={},Facet.Net.buffer_ajax=function(a,b){var c=new window.XMLHttpRequest,d=!1;c.onreadystatechange=function(){if(c.readyState===4&&c.status===200&&d!==!0){if(c.responseType==="arraybuffer")b(c.response,a);else if(c.mozResponseArrayBuffer!==null)b(c.mozResponseArrayBuffer,a);else if(c.responseText!==null){var e=String(c.responseText),f=Array(e.length);for(var g=0;g<e.length;g++)f[g]=e.charCodeAt(g)&255;var h=new Uint8Array(f);b(h.buffer,a)}d=!0}},c.open("GET",a,!0),c.hasOwnProperty("responseType")?c.responseType="arraybuffer":c.overrideMimeType("text/plain; charset=x-user-defined"),c.send()},Facet.Scale={},Facet.Scale.Geo={},Facet.Scale.Geo.mercator_to_spherical=function(a,b){var c=b.sinh().atan(),d=a;return Facet.Scale.Geo.latlong_to_spherical(c,d)},Facet.Scale.Geo.latlong_to_spherical=function(a,b){a=Shade.make(a),b=Shade.make(b);var c=a.cos();return Shade.vec(b.sin()
.mul(c),a.sin(),b.cos().mul(c),1)},Facet.DrawingMode={},Facet.DrawingMode.additive={set_draw_caps:function(){var a=Facet._globals.ctx;a.enable(a.BLEND),a.blendFunc(a.SRC_ALPHA,a.ONE),a.enable(a.DEPTH_TEST),a.depthFunc(a.LESS),a.depthMask(!1)},set_pick_caps:function(){var a=Facet._globals.ctx;a.enable(a.DEPTH_TEST),a.depthFunc(a.LESS),a.depthMask(!1)},set_unproject_caps:function(){var a=Facet._globals.ctx;a.enable(a.DEPTH_TEST),a.depthFunc(a.LESS),a.depthMask(!1)}},Facet.DrawingMode.over={set_draw_caps:function(){var a=Facet._globals.ctx;a.enable(a.BLEND),a.blendFuncSeparate(a.SRC_ALPHA,a.ONE_MINUS_SRC_ALPHA,a.ONE,a.ONE_MINUS_SRC_ALPHA),a.enable(a.DEPTH_TEST),a.depthFunc(a.LESS),a.depthMask(!1)},set_pick_caps:function(){var a=Facet._globals.ctx;a.enable(a.DEPTH_TEST),a.depthFunc(a.LESS),a.depthMask(!1)},set_unproject_caps:function(){var a=Facet._globals.ctx;a.enable(a.DEPTH_TEST),a.depthFunc(a.LESS),a.depthMask(!1)}},Facet.DrawingMode.over_with_depth={set_draw_caps:function(){var a=Facet._globals.ctx;a.enable(a.BLEND),a.blendFuncSeparate(a.SRC_ALPHA,a.ONE_MINUS_SRC_ALPHA,a.ONE,a.ONE_MINUS_SRC_ALPHA),a.enable(a.DEPTH_TEST),a.depthFunc(a.LEQUAL)},set_pick_caps:function(){var a=Facet._globals.ctx;a.enable(a.DEPTH_TEST),a.depthFunc(a.LEQUAL)},set_unproject_caps:function(){var a=Facet._globals.ctx;a.enable(a.DEPTH_TEST),a.depthFunc(a.LEQUAL)}},Facet.DrawingMode.standard={set_draw_caps:function(){var a=Facet._globals.ctx;a.enable(a.DEPTH_TEST),a.depthFunc(a.LESS)},set_pick_caps:function(){var a=Facet._globals.ctx;a.enable(a.DEPTH_TEST),a.depthFunc(a.LESS)},set_unproject_caps:function(){var a=Facet._globals.ctx;a.enable(a.DEPTH_TEST),a.depthFunc(a.LESS)}};var Shade={};(function(){Shade.debug=!1,function(){var a={aliceblue:"#F0F8FF",antiquewhite:"#FAEBD7",aqua:"#00FFFF",aquamarine:"#7FFFD4",azure:"#F0FFFF",beige:"#F5F5DC",bisque:"#FFE4C4",black:"#000000",blanchedalmond:"#FFEBCD",blue:"#0000FF",blueviolet:"#8A2BE2",brown:"#A52A2A",burlywood:"#DEB887",cadetblue:"#5F9EA0",chartreuse:"#7FFF00",chocolate:"#D2691E",coral:"#FF7F50",cornflowerblue:"#6495ED",cornsilk:"#FFF8DC",crimson:"#DC143C",cyan:"#00FFFF",darkblue:"#00008B",darkcyan:"#008B8B",darkgoldenrod:"#B8860B",darkgray:"#A9A9A9",darkgrey:"#A9A9A9",darkgreen:"#006400",darkkhaki:"#BDB76B",darkmagenta:"#8B008B",darkolivegreen:"#556B2F",darkorange:"#FF8C00",darkorchid:"#9932CC",darkred:"#8B0000",darksalmon:"#E9967A",darkseagreen:"#8FBC8F",darkslateblue:"#483D8B",darkslategray:"#2F4F4F",darkslategrey:"#2F4F4F",darkturquoise:"#00CED1",darkviolet:"#9400D3",deeppink:"#FF1493",deepskyblue:"#00BFFF",dimgray:"#696969",dimgrey:"#696969",dodgerblue:"#1E90FF",firebrick:"#B22222",floralwhite:"#FFFAF0",forestgreen:"#228B22",fuchsia:"#FF00FF",gainsboro:"#DCDCDC",ghostwhite:"#F8F8FF",gold:"#FFD700",goldenrod:"#DAA520",gray:"#808080",grey:"#808080",green:"#008000",greenyellow:"#ADFF2F",honeydew:"#F0FFF0",hotpink:"#FF69B4",indianred:"#CD5C5C",indigo:"#4B0082",ivory:"#FFFFF0",khaki:"#F0E68C",lavender:"#E6E6FA",lavenderblush:"#FFF0F5",lawngreen:"#7CFC00",lemonchiffon:"#FFFACD",lightblue:"#ADD8E6",lightcoral:"#F08080",lightcyan:"#E0FFFF",lightgoldenrodyellow:"#FAFAD2",lightgray:"#D3D3D3",lightgrey:"#D3D3D3",lightgreen:"#90EE90",lightpink:"#FFB6C1",lightsalmon:"#FFA07A",lightseagreen:"#20B2AA",lightskyblue:"#87CEFA",lightslategray:"#778899",lightslategrey:"#778899",lightsteelblue:"#B0C4DE",lightyellow:"#FFFFE0",lime:"#00FF00",limegreen:"#32CD32",linen:"#FAF0E6",magenta:"#FF00FF",maroon:"#800000",mediumaquamarine:"#66CDAA",mediumblue:"#0000CD",mediumorchid:"#BA55D3",mediumpurple:"#9370D8",mediumseagreen:"#3CB371",mediumslateblue:"#7B68EE",mediumspringgreen:"#00FA9A",mediumturquoise:"#48D1CC",mediumvioletred:"#C71585",midnightblue:"#191970",mintcream:"#F5FFFA",mistyrose:"#FFE4E1",moccasin:"#FFE4B5",navajowhite:"#FFDEAD",navy:"#000080",oldlace:"#FDF5E6",olive:"#808000",olivedrab:"#6B8E23",orange:"#FFA500",orangered:"#FF4500",orchid:"#DA70D6",palegoldenrod:"#EEE8AA",palegreen:"#98FB98",paleturquoise:"#AFEEEE",palevioletred:"#D87093",papayawhip:"#FFEFD5",peachpuff:"#FFDAB9",peru:"#CD853F",pink:"#FFC0CB",plum:"#DDA0DD",powderblue:"#B0E0E6",purple:"#800080",red:"#FF0000",rosybrown:"#BC8F8F",royalblue:"#4169E1",saddlebrown:"#8B4513",salmon:"#FA8072",sandybrown:"#F4A460",seagreen:"#2E8B57",seashell:"#FFF5EE",sienna:"#A0522D",silver:"#C0C0C0",skyblue:"#87CEEB",slateblue:"#6A5ACD",slategray:"#708090",slategrey:"#708090",snow:"#FFFAFA",springgreen:"#00FF7F",steelblue:"#4682B4",tan:"#D2B48C",teal:"#008080",thistle:"#D8BFD8",tomato:"#FF6347",turquoise:"#40E0D0",violet:"#EE82EE",wheat:"#F5DEB3",white:"#FFFFFF",whitesmoke:"#F5F5F5",yellow:"#FFFF00",yellowgreen:"#9ACD32"},b=/ *rgb *\( *(\d+) *, *(\d+) *, *(\d+) *\) */;Shade.color=function(c,d){_.isUndefined(d)&&(d=1);if(c[0]==="#"){if(c.length===4)return Shade.vec(parseInt(c[1],16)/15,parseInt(c[2],16)/15,parseInt(c[3],16)/15,d);if(c.length==7)return Shade.vec(parseInt(c.substr(1,2),16)/255,parseInt(c.substr(3,2),16)/255,parseInt(c.substr(5,2),16)/255,d);throw"hex specifier must be either #rgb or #rrggbb"}var e=b.exec(c);if(e)return Shade.vec(parseInt(e[1],10)/255,parseInt(e[2],10)/255,parseInt(e[3],10)/255,d);if(c in a)return Shade.color(a[c],d);throw"unrecognized color specifier "+c}}(),Shade.variable=function(a){return Shade._create_concrete_exp({parents:[],type:a,evaluate:function(){return this.glsl_name},compile:function(){}})},Shade.range=function(a,b){var c=Shade.make(a).as_int(),d=Shade.make(b).as_int();console.log(c,c.type.repr()),console.log(d,d.type.repr());return{begin:c,end:d,value:function(a){return a},average:function(){var a=Shade.variable(Shade.Types.int_t),b=this.value(a),c=b.type,d,e=Shade.variable(c);if(b.type.equals(Shade.Types.int_t))d=Shade.Types.float_t;else if(_.any([Shade.Types.float_t,Shade.Types.vec2,Shade.Types.vec3,Shade.Types.vec4,Shade.Types.mat2,Shade.Types.mat3,Shade.Types.mat4],function(a){return a.equals(c)}))d=c;else throw"Type error, average can't support range of type "+c.repr();return Shade._create_concrete_exp({parents:[this.begin,this.end,a,e,b],type:d,evaluate:function(){return this.glsl_name+"()"},element:Shade.memoize_on_field("_element",function(a){if(this.type.is_pod()){if(a===0)return this;throw this.type.repr()+" is an atomic type"}return this.at(a)}),compile:function(a){var b=this.parents[0],c=this.parents[1],d=this.parents[2],e=this.parents[3],f=this.parents[4];a.strings.push(this.type.repr(),this.glsl_name,"() {\n"),a.strings.push("    ",e.type.declare(e.glsl_name),"=",e.type.zero,";\n"),a.strings.push("    for (int",d.evaluate(),"=",b.evaluate(),";",d.evaluate(),"<",c.evaluate(),";","++",d.evaluate(),") {\n"),a.strings.push("        ",e.evaluate(),"=",e.evaluate(),"+",f.evaluate(),";\n"),a.strings.push("    }\n"),a.strings.push("    return",this.type.repr(),"(",e.evaluate(),")/float(",c.evaluate(),"-",b.evaluate(),");\n"),a.strings.push("}\n")}})}}},Shade.unique_name=function(){var a=0;return function(){a=a+1;return"_unique_name_"+a}}(),Shade._create=function(){var a=0;return function(b,c){function d(){for(var b in c)this[b]=c[b];this.guid="GUID_"+a,this._caches={},a+=1}d.prototype=b;return new d}}(),Shade._create_concrete=function(a,b){function c(c){for(var d=0;d<b.length;++d){var e=b[d];if(!(e in c))throw"new expression missing "+b[d];if(_.isUndefined(c[e]))throw"field '"+e+"' cannot be undefined"}return Shade._create(a,c)}return c},Shade.memoize_on_field=function(a,b){return function(){_.isUndefined(this._caches[a])&&(this._caches[a]={}),_.isUndefined(this._caches[a][arguments[0]])&&(this._caches[a][arguments[0]]=b.apply(this,arguments));return this._caches[a][arguments[0]]}},Shade.Types={},Shade.Types.base_t={is_floating:function(){return!1},is_integral:function(){return!1},is_array:function(){return!1},is_pod:function(){return!1},is_vec:function(){return!1},is_mat:function(){return!1},vec_dimension:function(){throw"is_vec() === false, cannot call vec_dimension"},is_function:function(){return!1},is_sampler:function(){return!1},equals:function(a){if(_.isUndefined(a))throw"type cannot be compared to undefined";return this.repr()==a.repr()},swizzle:function(a){throw"type '"+this.repr()+"' does not support swizzling"},element_type:function(a){throw"invalid call: atomic expression"},declare:function(a){return this.repr()+" "+a}},Shade.basic=function(a){function b(a){return a==="float"?!0:a==="int"?!0:a==="bool"?!0:a==="void"?!0:a==="sampler2D"?!0:a.substring(0,3)==="mat"&&Number(a[3])>1&&Number(a[3])<5?!0:a.substring(0,3)==="vec"&&Number(a[3])>1&&Number(a[3])<5?!0:a.substring(0,4)==="bvec"&&Number(a[4])>1&&Number(a[4])<5?!0:a.substring(0,4)==="ivec"&&Number(a[4])>1&&Number(a[4])<5?!0:!1}if(!b(a))throw"invalid basic type '"+a+"'";return Shade._create(Shade.Types.base_t,{declare:function(b){return a+" "+b},repr:function(){return a},swizzle:function(a){if(!this.is_vec())throw"swizzle requires a vec";var b=this.repr(),c=Number(b[b.length-1]),d,e;switch(c){case 2:d=/[rgxyst]+/,e=[/[rg]/,/[xy]/,/[st]/];break;case 3:d=/[rgbxyzstp]+/,e=[/[rgb]/,/[xyz]/,/[stp]/];break;case 4:d=/[rgbazxyzwstpq]+/,e=[/[rgba]/,/[xyzw]/,/[stpq]/];break;default:throw"internal error on swizzle"}if(!a.match(d))throw"invalid swizzle pattern '"+a+"'";var f=0;for(var g=0;g<e.length;++g)a.match(e[g])&&(f+=1);if(f!=1)throw"swizzle pattern '"+a+"' belongs to more than one group";return a.length===1?this.array_base():Shade.basic(b.substring(0,b.length-1)+a.length)},is_pod:function(){var a=this.repr();return["float","bool","int"].indexOf(a)!==-1},is_vec:function(){var a=this.repr();return a.substring(0,3)==="vec"?!0:a.substring(0,4)==="ivec"?!0:a.substring(0,4)==="bvec"?!0:!1},is_mat:function(){var a=this.repr();return a.substring(0,3)==="mat"?!0:!1},vec_dimension:function(){var a=this.repr();if(a.substring(0,3)==="vec")return parseInt(a[3],10);if(a.substring(0,4)==="ivec"||a.substring(0,4)==="bvec")return parseInt(a[4],10);if(this.repr()==="float"||this.repr()==="int"||this.repr()==="bool")return 1;throw this.is_vec()?"internal error":"is_vec() === false, cannot call vec_dimension"},is_array:function(){var a=this.repr();return a.substring(0,3)==="mat"?!0:this.is_vec()?!0:!1},array_base:function(){var a=this.repr();if(a.substring(0,3)==="mat")return Shade.basic("vec"+a[3]);if(a.substring(0,3)==="vec")return Shade.basic("float");if(a.substring(0,4)==="bvec")return Shade.basic("bool");if(a.substring(0,4)==="ivec")return Shade.basic("int");if(a=="float")return Shade.basic("float");throw"datatype not array"},size_for_vec_constructor:function(){var a=this.repr();if(this.is_array())return this.array_size();if(a==="float"||a==="bool"||a==="int")return 1;throw"not usable inside vec constructor"},array_size:function(){if(this.is_vec())return this.vec_dimension();var a=this.repr();if(a.substring(0,3)==="mat")return parseInt(a[3],10);throw"datatype not array"},is_floating:function(){var a=this.repr();return a==="float"?!0:a.substring(0,3)==="vec"?!0:a.substring(0,3)==="mat"?!0:!1},is_integral:function(){var a=this.repr();return a==="int"?!0:a.substring(0,4)==="ivec"?!0:!1},is_sampler:function(){var a=this.repr();return a==="sampler2D"?!0:!1},element_type:function(a){if(this.is_pod()){if(a===0)return this;throw"invalid call: "+this.repr()+" is atomic"}if(this.is_vec()){var b=this.repr()[0],c=this.array_size();if(a<0||a>=c)throw"invalid call: "+this.repr()+" has no element "+a;if(b==="v")return Shade.Types.float_t;if(b==="b")return Shade.Types.bool_t;if(b==="i")return Shade.Types.int_t;throw"internal error"}throw"unimplemented for mats"},constant_equal:function(a,b){if(this.is_pod())return a===b;if(this.is_vec()||this.is_mat())return _.all(_.range(a.length),function(c){return a[c]===b[c]});throw"bad type for equality comparison: "+this.repr()}})},Shade.Types.array=function(a,b){return Shade._create(Shade.Types.base_t,{is_array:function(){return!0},declare:function(c){return a.declare(c)+"["+b+"]"},repr:function(){return a.repr()+"["+b+"]"},array_size:function(){return b},array_base:function(){return a}})},Shade.Types.function_t=function(a,b){return Shade._create(Shade.Types.base_t,{repr:function(){return"("+a.repr()+")("+", ".join(b.map(function(a){return a.repr()}))},is_function:function(){return!0},function_return_type:function(){return a},function_parameter:function(a){return b[a]},function_parameter_count:function(){return b.length}})},function(){var a=["mat2","mat3","mat4","vec2","vec3","vec4","ivec2","ivec3","ivec4","bvec2","bvec3","bvec4"];for(var b=0;b<a.length;++b)Shade.Types[a[b]]=Shade.basic(a[b]);Shade.Types.float_t=Shade.basic("float"),Shade.Types.bool_t=Shade.basic("bool"),Shade.Types.int_t=Shade.basic("int"),Shade.Types.sampler2D=Shade.basic("sampler2D"),Shade.Types.int_t.zero="0",Shade.Types.float_t.zero="0.0",Shade.Types.vec2.zero="vec2(0,0)",Shade.Types.vec3.zero="vec3(0,0,0)",Shade.Types.vec4.zero="vec4(0,0,0,0)",Shade.Types.mat2.zero="mat2(0,0,0,0)",Shade.Types.mat3.zero="mat3(0,0,0,0,0,0,0,0,0)",Shade.Types.mat4.zero="mat4(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)"}(),Shade.make=function(a){if(_.isUndefined(a))throw"expected a value, got undefined instead";var b=facet_typeOf(a);if(b==="boolean"||b==="number")return Shade.constant(a);if(b==="array")return Shade.seq(a);b=facet_constant_type(a);if(b==="vector"||b==="matrix")return Shade.constant(a);if(a._shade_type==="attribute_buffer")return Shade.attribute_from_buffer(a);if(a._shade_type==="render_buffer")return Shade.sampler2D_from_texture(a.texture);if(a._shade_type==="texture")return Shade.sampler2D_from_texture(a);return a},Shade.VERTEX_PROGRAM_COMPILE=1,Shade.FRAGMENT_PROGRAM_COMPILE=2,Shade.UNSET_PROGRAM_COMPILE=3,Shade.CompilationContext=function(a){return{freshest_glsl_name:0,compile_type:a||Shade.UNSET_PROGRAM_COMPILE,float_precision:"highp",strings:[],initialization_exprs:[],declarations:{uniform:{},attribute:{},varying:{}},source:function(){return this.strings.join(" ")},request_fresh_glsl_name:function(){var a=this.freshest_glsl_name++;return"glsl_name_"+a},declare:function(a,b,c,d){if(_.isUndefined(c))throw"must define type";if(b in d){var e=d[b];if(!e.equals(c))throw"compile error: different expressions use conflicting types for '"+a+" "+b+"': '"+e.repr()+"', '"+c.repr()+"'"}else d[b]=c,this.strings.push(a+" "+c.declare(b)+";\n")},declare_uniform:function(a,b){this.declare("uniform",a,b,this.declarations.uniform)},declare_varying:function(a,b){this.declare("varying",a,b,this.declarations.varying)},declare_attribute:function(a,b){this.declare("attribute",a,b,this.declarations.attribute)},compile:function(a){var b=a.sorted_sub_expressions(),c,d=this;_.each(b,function(a){a.children_count=0,a.is_unconditional=!1,a.glsl_name=d.request_fresh_glsl_name(),a.set_requirements(this);for(var b=0;b<a.parents.length;++b)a.parents[b].children_count++}),b[b.length-1].is_unconditional=!0,c=b.length;while(c--){var e=b[c];e.propagate_conditions()}this.strings.push("precision",this.float_precision,"float;\n");for(c=0;c<b.length;++c)b[c].compile(this);this.strings.push("void main() {\n");for(c=0;c<this.initialization_exprs.length;++c)this.strings.push("    ",this.initialization_exprs[c],";\n");this.strings.push("    ",a.evaluate(),";\n","}\n")},add_initialization:function(a){this.initialization_exprs.push(a)},value_function:function(){this.strings.push(arguments[0].type.repr(),arguments[0].glsl_name,"(void) {\n","    return ");for(var a=1;a<arguments.length;++a)this.strings.push(arguments[a]);this.strings.push(";\n}\n")},void_function:function(){this.strings.push("void",arguments[0].glsl_name,"(void) {\n","    ");for(var a=1;a<arguments.length;++a)this.strings.push(arguments[a]);this.strings.push(";\n}\n")}}},Shade.Exp={debug_print:function(a){function d(a,e){var f,g=Array(e+2).join(" ");if(a.parents.length===0)b.push(g+"["+a.expression_type+":"+a.guid+"]"+" ()");else{b.push(g+"["+a.expression_type+":"+a.guid+"]"+" (");for(f=0;f<a.parents.length;++f)c[a.parents[f].guid]?b.push(g+"  {{"+a.parents[f].guid+"}}"):(d(a.parents[f],e+2),c[a.parents[f].guid]=1);b.push(g+")")}}var b=[],c={};d(this,0),a=a||function(a){var b=a.join("\n");console.log(b)},a(b)},evaluate:function(){return this.glsl_name+"()"},parent_is_unconditional:function(a){return!0},propagate_conditions:function(){for(var a=0;a<this.parents.length;++a)this.parents[a].is_unconditional=this.parents[a].is_unconditional||this.is_unconditional&&this.parent_is_unconditional(a)},set_requirements:function(){},stage:null,sorted_sub_expressions:function(){var a=[],b=function(c){if(a.indexOf(c)==-1){var d=c.parents;if(_.isUndefined(d))throw"Internal error: expression "+c.evaluate()+" has undefined parents.";for(var e=0;e<d.length;++e)b(d[e]);a.push(c)}};b(this);return a},is_constant:function(){return!1},constant_value:function(){throw"invalid call: this.is_constant() == false"},element_is_constant:function(a){return!1},element_constant_value:function(a){throw"invalid call: no constant elements"},element:function(a){throw"invalid call: atomic expression"},add:function(a){return Shade.add(this,a)},mul:function(a){return Shade.mul(this,a)},div:function(a){return Shade.div(this,a)},sub:function(a){return Shade.sub(this,a)},length:function(){return Shade.length(this)},distance:function(a){return Shade.distance(this,a)},dot:function(a){return Shade.dot(this,a)},cross:function(a){return Shade.cross(this,a)},normalize:function(){return Shade.normalize(this)},reflect:function(a){return Shade.reflect(this,a)},refract:function(a,b){return Shade.refract(this,a,b)},texture2D:function(a){return Shade.texture2D(this,a)},clamp:function(a,b){return Shade.clamp(this,a,b)},min:function(a){return Shade.min(this,a)},max:function(a){return Shade.max(this,a)},per_vertex:function(){return Shade.per_vertex(this)},discard_if:function(a){return Shade.discard_if(this,a)},as_int:function(){if(this.type.equals(Shade.Types.int_t))return this;var a=this;return Shade._create_concrete_value_exp({parents:[a],type:Shade.Types.int_t,value:function(){return"int("+this.parents[0].evaluate()+")"},is_constant:function(){return a.is_constant()},constant_value:function(){var b=a.constant_value();return Math.floor(b)},expression_type:"cast(int)"})},as_bool:function(){if(this.type.equals(Shade.Types.bool_t))return this;var a=this;return Shade._create_concrete_value_exp({parents:[a],type:Shade.Types.bool_t,value:function(){return"bool("+this.parents[0].evaluate()+")"},is_constant:function(){return a.is_constant()},constant_value:function(){var b=a.constant_value();return~~b},expression_type:"cast(bool)"})},as_float:function(){if(this.type.equals(Shade.Types.float_t))return this;var a=this;return Shade._create_concrete_value_exp({parents:[a],type:Shade.Types.float_t,value:function(){return"float("+this.parents[0].evaluate()+")"},is_constant:function(){return a.is_constant()},constant_value:function(){var b=a.constant_value();return Number(b)},expression_type:"cast(float)"})},swizzle:function(a){function b(a){function b(a){switch(a.toLowerCase()){case"r":return 0;case"g":return 1;case"b":return 2;case"a":return 3;case"x":return 0;case"y":return 1;case"z":return 2;case"w":return 3;case"s":return 0;case"t":return 1;case"p":return 2;case"q":return 3;default:throw"invalid swizzle pattern"}}var c=[];for(var d=0;d<a.length;++d)c.push(b(a[d]));return c}var c=this,d=b(a);return Shade._create_concrete_exp({parents:[c],type:c.type.swizzle(a),expression_type:"swizzle{"+a+"}",evaluate:function(){return this.parents[0].evaluate()+"."+a},is_constant:Shade.memoize_on_field("_is_constant",function(){var a=this;return _.all(d,function(b){return a.parents[0].element_is_constant(b)})}),constant_value:Shade.memoize_on_field("_constant_value",function(){if(this.type.is_pod())return this.parents[0].element_constant_value(d[0]);var a=this,b=_.map(d,function(b){return a.parents[0].element_constant_value(b)}),c=this.type.vec_dimension();switch(c){case 2:return vec2.make(b);case 3:return vec3.make(b);case 4:return vec4.make(b);default:throw"bad vec dimension "+c}}),element:function(a){return this.parents[0].element(d[a])},element_is_constant:Shade.memoize_on_field("_element_is_constant",function(a){return this.parents[0].element_is_constant(d[a])}),element_constant_value:Shade.memoize_on_field("_element_constant_value",function(a){return this.parents[0].element_constant_value(d[a])}),compile:function(){}})},at:function(a){var b=this;a=Shade.make(a),a._must_be_function_call=!0;if(!a.type.equals(Shade.Types.float_t)&&!a.type.equals(Shade.Types.int_t))throw"at expects int or float, got '"+a.type.repr()+"' instead";return Shade._create_concrete_exp({parents:[b,a],type:b.type.array_base(),expression_type:"index",evaluate:function(){return this.parents[1].type.is_integral()?this.parents[0].evaluate()+"["+this.parents[1].evaluate()+"]":this.parents[0].evaluate()+"[int("+this.parents[1].evaluate()+")]"},is_constant:function(){if(!this.parents[1].is_constant())return!1;var a=Math.floor(this.parents[1].constant_value());return this.parents[1].is_constant()&&this.parents[0].element_is_constant(a)},constant_value:Shade.memoize_on_field("_constant_value",function(){var a=Math.floor(this.parents[1].constant_value());return this.parents[0].element_constant_value(a)}),element:Shade.memoize_on_field("_element",function(a){if(!this.parents[1].is_constant())throw"at().element cannot be called with non-constant index";var b=this.parents[1].constant_value(),c=this.parents[0].element(b);return c===this?c.at(a):c.element(a)}),element_is_constant:Shade.memoize_on_field("_element_is_constant",function(a){if(!this.parents[1].is_constant())return!1;var b=this.parents[1].constant_value(),c=this.parents[0].element(b);return c===this?!1:c.element_is_constant(a)}),element_constant_value:Shade.memoize_on_field("_element_constant_value",function(a){var b=this.parents[1].constant_value(),c=this.parents[0].element(b);if(c===this)throw"internal error: would have gone into an infinite loop here.";return c.element_constant_value(a)}),compile:function(){}})},expression_type:"other",_type:"shade_expression",_attribute_buffers:[],_uniforms:[],attribute_buffers:function(){return _.flatten(this.sorted_sub_expressions().map(function(a){return a._attribute_buffers}))},uniforms:function(){return _.flatten(this.sorted_sub_expressions().map(function(a){return a._uniforms}))},find_if:function(a){return _.select(this.sorted_sub_expressions(),a)},replace_if:function(a,b){function f(a){var b=_.select(d,function(b){return a.guid===b[0].guid&&b[0].guid!==b[1].guid});return b.length===0?a:b[0][1]}function e(a){return _.some(d,function(b){return a.guid===b[0].guid&&b[0].guid!==b[1].guid})}var c=this.sorted_sub_expressions(),d=[];for(var g=0;g<c.length;++g){var h=c[g];if(a(h))d.push([h,b(h)]);else if(_.some(h.parents,e)){var i=[h,Shade._create(h,{parents:_.map(h.parents,f)})];d.push(i)}else d.push([h,h])}var j=d[d.length-1][1];return j}},Shade._create_concrete_exp=Shade._create_concrete(Shade.Exp,["parents","compile","type"]),Shade.ValueExp=Shade._create(Shade.Exp,{is_constant:Shade.memoize_on_field("_is_constant",function(){return _.all(this.parents,function(a){return a.is_constant()})}),element_is_constant:Shade.memoize_on_field("_element_is_constant",function(a){return this.is_constant()}),element_constant_value:Shade.memoize_on_field("_element_constant_value",function(a){return this.element(a).constant_value()}),_must_be_function_call:!1,evaluate:function(){return this._must_be_function_call?this.glsl_name+"()":this.children_count<=1?this.value():this.is_unconditional?this.precomputed_value_glsl_name:this.glsl_name+"()"},element:function(a){if(this.type.is_pod()){if(a===0)return this;throw this.type.repr()+" is an atomic type, got this: "+a}return this.at(a)},compile:function(a){this._must_be_function_call?this.is_unconditional?this.children_count>1?(this.precomputed_value_glsl_name=a.request_fresh_glsl_name(),a.strings.push(this.type.declare(this.precomputed_value_glsl_name),";\n"),a.add_initialization(this.precomputed_value_glsl_name+" = "+this.value()),a.value_function(this,this.precomputed_value_glsl_name)):a.value_function(this,this.value()):this.children_count>1?(this.precomputed_value_glsl_name=a.request_fresh_glsl_name(),a.strings.push(this.type.declare(this.precomputed_value_glsl_name),";\n"),this.has_precomputed_value_glsl_name=a.request_fresh_glsl_name(),a.strings.push(Shade.Types.bool_t.declare(this.has_precomputed_value_glsl_name),";\n"),a.add_initialization(this.has_precomputed_value_glsl_name+" = false"),a.value_function(this,"("+this.has_precomputed_value_glsl_name+"?"+this.precomputed_value_glsl_name+": (("+this.has_precomputed_value_glsl_name+"=true),("+this.precomputed_value_glsl_name+"="+this.value()+")))")):a.value_function(this,this.value()):this.is_unconditional?this.children_count>1&&(this.precomputed_value_glsl_name=a.request_fresh_glsl_name(),a.strings.push(this.type.declare(this.precomputed_value_glsl_name),";\n"),a.add_initialization(this.precomputed_value_glsl_name+" = "+this.value())):this.children_count>1&&(this.precomputed_value_glsl_name=a.request_fresh_glsl_name(),a.strings.push(this.type.declare(this.precomputed_value_glsl_name),";\n"),this.has_precomputed_value_glsl_name=a.request_fresh_glsl_name(),a.strings.push(Shade.Types.bool_t.declare(this.has_precomputed_value_glsl_name),";\n"),a.add_initialization(this.has_precomputed_value_glsl_name+" = false"),a.value_function(this,"("+this.has_precomputed_value_glsl_name+"?"+this.precomputed_value_glsl_name+": (("+this.has_precomputed_value_glsl_name+"=true),("+this.precomputed_value_glsl_name+"="+this.value()+")))"))}}),Shade._create_concrete_value_exp=Shade._create_concrete(Shade.ValueExp,["parents","type","value"]),Shade.swizzle=function(a,b){return Shade.make(a).swizzle(b)},Shade.constant=function(a,b){var c={16:4,9:3,4:2,1:1},d=function(a,b){function e(c){var d=a.array_size(),e=[];for(var f=0;f<d;++f)e.push(b[c+f*d]);return e}function d(a,b){var c=_.map(b,function(a){var b=String(a);return facet_typeOf(a)==="number"&&b.indexOf(".")===-1?b+".0":b});return a+"("+_.toArray(c).join(", ")+")"}return Shade._create_concrete_exp({evaluate:function(a){return d(this.type.repr(),b)},expression_type:"constant{"+b+"}",is_constant:function(){return!0},element:Shade.memoize_on_field("_element",function(a){if(this.type.is_pod()){if(a===0)return this;throw this.type.repr()+" is an atomic type, got this: "+a}return this.type.is_vec()?Shade.constant(b[a]):Shade.vec.apply(e(a))}),element_is_constant:function(a){return!0},element_constant_value:Shade.memoize_on_field("_element_constant_value",function(a){if(this.type.equals(Shade.Types.float_t)){if(a===0)return b[0];throw"float is an atomic type"}return this.type.is_vec()?b[a]:vec[this.type.array_size()].make(e(a))}),constant_value:Shade.memoize_on_field("_constant_value",function(){if(this.type.is_pod())return b[0];if(this.type.equals(Shade.Types.vec2)||this.type.equals(Shade.Types.vec3)||this.type.equals(Shade.Types.vec4))return vec[b.length].make(b);if(this.type.equals(Shade.Types.mat2)||this.type.equals(Shade.Types.mat3)||this.type.equals(Shade.Types.mat4))return mat[c[b.length]].make(b);throw"internal error: constant of unknown type"}),compile:function(a){},parents:[],type:a})},e=facet_constant_type(a),f,g;if(e==="number"){if(b&&!b.equals(Shade.Types.float_t)&&!b.equals(Shade.Types.int_t))throw"expected specified type for numbers to be float or int, got "+b.repr()+" instead.";return d(b||Shade.Types.float_t,[a])}if(e==="boolean"){if(b&&!b.equals(Shade.Types.bool_t))throw"boolean constants cannot be interpreted as "+b.repr();return d(Shade.Types.bool_t,[a])}if(e==="vector"){f=a.length;if(f<2&&f>4)throw"invalid length for constant vector: "+a;var h=_.map(a,function(a){return facet_typeOf(a)});if(!_.all(h,function(a){return a===h[0]}))throw"not all constant params have the same types";if(h[0]==="number"){g=Shade.basic("vec"+f);if(b&&!g.equals(b))throw"passed constant must have type "+g.repr()+", but was request to have incompatible type "+b.repr();return d(g,a)}throw"bad datatype for constant: "+h[0]}if(e==="matrix"){f=c[a.length],g=Shade.basic("mat"+f);if(b&&!g.equals(b))throw"passed constant must have type "+g.repr()+", but was request to have incompatible type "+b.repr();return d(g,a)}throw"type error: constant should be bool, number, vector, matrix or array. got "+e+" instead"},Shade.as_int=function(a){return Shade.make(a).as_int()},Shade.as_bool=function(a){return Shade.make(a).as_bool()},Shade.as_float=function(a){return Shade.make(a).as_float()},Shade.array=function(a){var b=facet_typeOf(a);if(b==="array"){var c=a.map(Shade.make),d=c.length;if(d===0)throw"array constant must be non-empty";var e=c.map(function(a){return a.type}),f=Shade.Types.array(e[0],d);if(_.any(e,function(a){return!a.equals(e[0])}))throw"array elements must have identical types";return Shade._create_concrete_exp({parents:c,type:f,expression_type:"constant",evaluate:function(){return this.glsl_name},compile:function(a){this.array_initializer_glsl_name=a.request_fresh_glsl_name(),a.strings.push(this.type.declare(this.glsl_name),";\n"),a.strings.push("void",this.array_initializer_glsl_name,"(void) {\n");for(var b=0;b<this.parents.length;++b)a.strings.push("    ",this.glsl_name,"[",b,"] =",this.parents[b].evaluate(),";\n");a.strings.push("}\n"),a.add_initialization(this.array_initializer_glsl_name+"()")},is_constant:function(){return!1},element:function(a){return this.parents[a]},element_is_constant:function(a){return this.parents[a].is_constant()},element_constant_value:function(a){return this.parents[a].constant_value()}})}throw"type error: need array"},Shade.set=function(a,b){a=Shade.make(a);var c=a.type;return Shade._create_concrete_exp({expression_type:"set",compile:function(a){if((b==="gl_FragColor"||b.substring(0,11)==="gl_FragData")&&a.compile_type!==Shade.FRAGMENT_PROGRAM_COMPILE)throw"gl_FragColor and gl_FragData assignment only allowed on fragment shaders";if((b==="gl_Position"||b==="gl_PointSize")&&a.compile_type!==Shade.VERTEX_PROGRAM_COMPILE)throw"gl_Position and gl_PointSize assignment only allowed on vertex shaders";if(a.compile_type!==Shade.VERTEX_PROGRAM_COMPILE&&b!=="gl_FragColor"&&b.substring(0,11)!=="gl_FragData")throw"the only allowed output variables on a fragment shader are gl_FragColor and gl_FragData[]";b!=="gl_FragColor"&&b!=="gl_Position"&&b!=="gl_PointSize"&&b.substring(0,11)!=="gl_FragData"&&a.declare_varying(b,c),a.void_function(this,"(",b,"=",this.parents[0].evaluate(),")")},type:Shade.basic("void"),parents:[a]})},Shade.uniform=function(a,b){var c=[[Shade.Types.float_t,"uniform1f"],[Shade.Types.int_t,"uniform1i"],[Shade.Types.bool_t,"uniform1i"],[Shade.Types.sampler2D,"uniform1i"],[Shade.Types.vec2,"uniform2fv"],[Shade.Types.vec3,"uniform3fv"],[Shade.Types.vec4,"uniform4fv"],[Shade.Types.mat2,"uniformMatrix2fv"],[Shade.Types.mat3,"uniformMatrix3fv"],[Shade.Types.mat4,"uniformMatrix4fv"]],d=Shade.unique_name();if(_.isUndefined(a))throw"uniform requires type";typeof a=="string"&&(a=Shade.basic(a));var e,f=_.detect(c,function(b){return a.equals(b[0])});if(!_.isUndefined(f))f=f[1];else throw"Unsupported type "+a.repr()+" for uniform.";var g=Shade._create_concrete_exp({parents:[],type:a,expression_type:"uniform",evaluate:function(){return this._must_be_function_call?this.glsl_name+"()":d},element:Shade.memoize_on_field("_element",function(a){if(this.type.is_pod()){if(a===0)return this;throw this.type.repr()+" is an atomic type"}return this.at(a)}),compile:function(a){a.declare_uniform(d,this.type),this._must_be_function_call&&(this.precomputed_value_glsl_name=a.request_fresh_glsl_name(),a.strings.push(this.type.declare(this.precomputed_value_glsl_name),";\n"),a.add_initialization(this.precomputed_value_glsl_name+" = "+d),a.value_function(this,this.precomputed_value_glsl_name))},set:function(a){var b=facet_constant_type(a);b==="shade_expression"&&(a=a.constant_value()),e=a,this._facet_active_uniform&&this._facet_active_uniform(a)},get:function(a){return e},uniform_call:f,uniform_name:d});g._uniforms=[g],g.set(b);return g},Shade.sampler2D_from_texture=function(a){return a._shade_expression||function(){var b=Shade.uniform("sampler2D");b.set(a),a._shade_expression=b;return b}()},Shade.attribute_from_buffer=function(a){return a._shade_expression||function(){var b=[undefined,Shade.Types.float_t,Shade.Types.vec2,Shade.Types.vec3,Shade.Types.vec4],c=b[a.itemSize],d;_.isUndefined(a._shade_name)?(d=Shade.unique_name(),a._shade_name=d):d=a._shade_name;var e=Shade.attribute(d,c);e._attribute_buffers=[a],a._shade_expression=e;return e}()},Shade.attribute=function(a,b){if(_.isUndefined(b))throw"attribute requires type";typeof b=="string"&&(b=Shade.basic(b));return Shade._create_concrete_exp({parents:[],type:b,expression_type:"attribute",element:Shade.memoize_on_field("_element",function(a){if(this.type.equals
(Shade.Types.float_t)){if(a===0)return this;throw"float is an atomic type"}return this.at(a)}),evaluate:function(){return this._must_be_function_call?this.glsl_name+"()":a},compile:function(b){b.declare_attribute(a,this.type),this._must_be_function_call&&(this.precomputed_value_glsl_name=b.request_fresh_glsl_name(),b.strings.push(this.type.declare(this.precomputed_value_glsl_name),";\n"),b.add_initialization(this.precomputed_value_glsl_name+" = "+a),b.value_function(this,this.precomputed_value_glsl_name))}})},Shade.varying=function(a,b){if(_.isUndefined(b))throw"varying requires type";facet_typeOf(b)==="string"&&(b=Shade.basic(b));var c=[Shade.Types.float_t,Shade.Types.vec2,Shade.Types.vec3,Shade.Types.vec4,Shade.Types.mat2,Shade.Types.mat3,Shade.Types.mat4];if(!_.any(c,function(a){return a.equals(b)}))throw"varying does not support type '"+b.repr()+"'";return Shade._create_concrete_exp({parents:[],type:b,expression_type:"varying",element:Shade.memoize_on_field("_element",function(a){if(this.type.is_pod()){if(a===0)return this;throw this.type.repr()+" is an atomic type"}return this.at(a)}),evaluate:function(){return a},compile:function(b){b.declare_varying(a,this.type)}})},Shade.fragCoord=function(){return Shade._create_concrete_exp({expression_type:"builtin_input{gl_FragCoord}",parents:[],type:Shade.Types.vec4,evaluate:function(){return"gl_FragCoord"},compile:function(a){}})},Shade.pointCoord=function(){return Shade._create_concrete_exp({expression_type:"builtin_input{gl_PointCoord}",parents:[],type:Shade.Types.vec2,evaluate:function(){return"gl_PointCoord"},compile:function(a){}})},Shade.round_dot=function(a){var b=Shade.pointCoord().sub(Shade.vec(.5,.5)).length().gt(.25);return Shade.make(a).discard_if(b)},function(){var a=function(a,b,c,d,e,f){var g=d(a.type,b.type);return Shade._create_concrete_value_exp({parents:[a,b],type:g,expression_type:"operator"+c,value:function(){return"("+this.parents[0].evaluate()+" "+c+" "+this.parents[1].evaluate()+")"},constant_value:Shade.memoize_on_field("_constant_value",function(){return e(this)}),element:Shade.memoize_on_field("_element",function(a){return f(this,a)}),element_constant_value:Shade.memoize_on_field("_element_constant_value",function(a){return this.element(a).constant_value()}),element_is_constant:Shade.memoize_on_field("_element_is_constant",function(a){return this.element(a).is_constant()})})};Shade.add=function(){function e(c,f){var g=c.parents[0],h=c.parents[1],i,j,k=g.type,l=h.type;if(k.is_pod()&&l.is_pod()){if(f===0)return c;throw"i > 0 in pod element"}g.type.is_vec()||g.type.is_mat()?i=g.element(f):i=g,h.type.is_vec()||h.type.is_vec()?j=h.element(f):j=h;return a(i,j,"+",b,d,e)}function d(a){var b=a.parents[0],c=a.parents[1],d;b.type.is_vec()?d=vec[b.type.vec_dimension()]:c.type.is_vec()&&(d=vec[c.type.vec_dimension()]);var e=b.constant_value(),f=c.constant_value();return b.type.equals(Shade.Types.int_t)&&c.type.equals(Shade.Types.int_t)?e+f:b.type.equals(Shade.Types.float_t)&&c.type.equals(Shade.Types.float_t)?e+f:c.type.equals(Shade.Types.float_t)?d.map(e,function(a){return a+f}):b.type.equals(Shade.Types.float_t)?d.map(f,function(a){return e+a}):d.plus(e,f)}function b(a,b){var c=[[Shade.Types.vec4,Shade.Types.vec4,Shade.Types.vec4],[Shade.Types.mat4,Shade.Types.mat4,Shade.Types.mat4],[Shade.Types.float_t,Shade.Types.float_t,Shade.Types.float_t],[Shade.Types.vec4,Shade.Types.float_t,Shade.Types.vec4],[Shade.Types.float_t,Shade.Types.vec4,Shade.Types.vec4],[Shade.Types.mat4,Shade.Types.float_t,Shade.Types.mat4],[Shade.Types.float_t,Shade.Types.mat4,Shade.Types.mat4],[Shade.Types.vec3,Shade.Types.vec3,Shade.Types.vec3],[Shade.Types.mat3,Shade.Types.mat3,Shade.Types.mat3],[Shade.Types.float_t,Shade.Types.float_t,Shade.Types.float_t],[Shade.Types.vec3,Shade.Types.float_t,Shade.Types.vec3],[Shade.Types.float_t,Shade.Types.vec3,Shade.Types.vec3],[Shade.Types.mat3,Shade.Types.float_t,Shade.Types.mat3],[Shade.Types.float_t,Shade.Types.mat3,Shade.Types.mat3],[Shade.Types.vec2,Shade.Types.vec2,Shade.Types.vec2],[Shade.Types.mat2,Shade.Types.mat2,Shade.Types.mat2],[Shade.Types.float_t,Shade.Types.float_t,Shade.Types.float_t],[Shade.Types.vec2,Shade.Types.float_t,Shade.Types.vec2],[Shade.Types.float_t,Shade.Types.vec2,Shade.Types.vec2],[Shade.Types.mat2,Shade.Types.float_t,Shade.Types.mat2],[Shade.Types.float_t,Shade.Types.mat2,Shade.Types.mat2],[Shade.Types.int_t,Shade.Types.int_t,Shade.Types.int_t]];for(var d=0;d<c.length;++d)if(a.equals(c[d][0])&&b.equals(c[d][1]))return c[d][2];throw"type mismatch on add: unexpected types  '"+a.repr()+"' and '"+b.repr()+"'."}if(arguments.length===0)throw"add needs at least one argument";if(arguments.length===1)return arguments[0];var c=Shade.make(arguments[0]);for(var f=1;f<arguments.length;++f)c=a(c,Shade.make(arguments[f]),"+",b,d,e);return c},Shade.sub=function(){function d(e,f){var g=e.parents[0],h=e.parents[1],i,j,k=g.type,l=h.type;if(k.is_pod()&&l.is_pod()){if(f===0)return e;throw"i > 0 in pod element"}g.type.is_vec()||g.type.is_mat()?i=g.element(f):i=g,h.type.is_vec()||h.type.is_vec()?j=h.element(f):j=h;return a(i,j,"-",b,c,d)}function c(a){var b=a.parents[0],c=a.parents[1],d;b.type.is_vec()?d=vec[b.type.vec_dimension()]:c.type.is_vec()&&(d=vec[c.type.vec_dimension()]);var e=b.constant_value(),f=c.constant_value();return b.type.equals(Shade.Types.int_t)&&c.type.equals(Shade.Types.int_t)?e-f:b.type.equals(Shade.Types.float_t)&&c.type.equals(Shade.Types.float_t)?e-f:c.type.equals(Shade.Types.float_t)?d.map(e,function(a){return a-f}):b.type.equals(Shade.Types.float_t)?d.map(f,function(a){return e-a}):d.minus(e,f)}function b(a,b){var c=[[Shade.Types.vec4,Shade.Types.vec4,Shade.Types.vec4],[Shade.Types.mat4,Shade.Types.mat4,Shade.Types.mat4],[Shade.Types.float_t,Shade.Types.float_t,Shade.Types.float_t],[Shade.Types.vec4,Shade.Types.float_t,Shade.Types.vec4],[Shade.Types.float_t,Shade.Types.vec4,Shade.Types.vec4],[Shade.Types.mat4,Shade.Types.float_t,Shade.Types.mat4],[Shade.Types.float_t,Shade.Types.mat4,Shade.Types.mat4],[Shade.Types.vec3,Shade.Types.vec3,Shade.Types.vec3],[Shade.Types.mat3,Shade.Types.mat3,Shade.Types.mat3],[Shade.Types.float_t,Shade.Types.float_t,Shade.Types.float_t],[Shade.Types.vec3,Shade.Types.float_t,Shade.Types.vec3],[Shade.Types.float_t,Shade.Types.vec3,Shade.Types.vec3],[Shade.Types.mat3,Shade.Types.float_t,Shade.Types.mat3],[Shade.Types.float_t,Shade.Types.mat3,Shade.Types.mat3],[Shade.Types.vec2,Shade.Types.vec2,Shade.Types.vec2],[Shade.Types.mat2,Shade.Types.mat2,Shade.Types.mat2],[Shade.Types.float_t,Shade.Types.float_t,Shade.Types.float_t],[Shade.Types.vec2,Shade.Types.float_t,Shade.Types.vec2],[Shade.Types.float_t,Shade.Types.vec2,Shade.Types.vec2],[Shade.Types.mat2,Shade.Types.float_t,Shade.Types.mat2],[Shade.Types.float_t,Shade.Types.mat2,Shade.Types.mat2],[Shade.Types.int_t,Shade.Types.int_t,Shade.Types.int_t]];for(var d=0;d<c.length;++d)if(a.equals(c[d][0])&&b.equals(c[d][1]))return c[d][2];throw"type mismatch on sub: unexpected types  '"+a.repr()+"' and '"+b.repr()+"'."}if(arguments.length===0)throw"sub needs at least two arguments";if(arguments.length===1)throw"unary minus unimplemented";var e=Shade.make(arguments[0]);for(var f=1;f<arguments.length;++f)e=a(e,Shade.make(arguments[f]),"-",b,c,d);return e},Shade.div=function(){function d(e,f){var g=e.parents[0],h=e.parents[1],i,j,k=g.type,l=h.type;if(k.is_pod()&&l.is_pod()){if(f===0)return e;throw"i > 0 in pod element"}g.type.is_vec()||g.type.is_mat()?i=g.element(f):i=g,h.type.is_vec()||h.type.is_vec()?j=h.element(f):j=h;return a(i,j,"/",b,c,d)}function c(a){var b=a.parents[0],c=a.parents[1],d=b.constant_value(),e=c.constant_value(),f,g;b.type.is_array()?(f=vec[b.type.array_size()],g=mat[b.type.array_size()]):c.type.is_array()&&(f=vec[c.type.array_size()],g=mat[c.type.array_size()]);var h=facet_constant_type(d),i=facet_constant_type(e),j={number:{number:function(a,b){return a/b},vector:function(a,b){return f.map(b,function(b){return a/b})},matrix:function(a,b){return g.map(b,function(b){return a/b})}},vector:{number:function(a,b){return f.scaling(a,1/b)},vector:function(a,b){return f.map(b,function(b,c){return a[c]/b})},matrix:function(a,b){throw"internal error, can't evaluate vector/matrix"}},matrix:{number:function(a,b){return g.scaling(a,1/b)},vector:function(a,b){throw"internal error, can't evaluate matrix/vector"},matrix:function(a,b){throw"internal error, can't evaluate matrix/matrix"}}};return j[h][i](d,e)}function b(a,b){if(_.isUndefined(a))throw"internal error: t1 multiplication with undefined type";if(_.isUndefined(b))throw"internal error: t2 multiplication with undefined type";var c=[[Shade.Types.vec4,Shade.Types.vec4,Shade.Types.vec4],[Shade.Types.mat4,Shade.Types.mat4,Shade.Types.mat4],[Shade.Types.float_t,Shade.Types.float_t,Shade.Types.float_t],[Shade.Types.vec4,Shade.Types.float_t,Shade.Types.vec4],[Shade.Types.float_t,Shade.Types.vec4,Shade.Types.vec4],[Shade.Types.mat4,Shade.Types.float_t,Shade.Types.mat4],[Shade.Types.float_t,Shade.Types.mat4,Shade.Types.mat4],[Shade.Types.vec3,Shade.Types.vec3,Shade.Types.vec3],[Shade.Types.mat3,Shade.Types.mat3,Shade.Types.mat3],[Shade.Types.float_t,Shade.Types.float_t,Shade.Types.float_t],[Shade.Types.vec3,Shade.Types.float_t,Shade.Types.vec3],[Shade.Types.float_t,Shade.Types.vec3,Shade.Types.vec3],[Shade.Types.mat3,Shade.Types.float_t,Shade.Types.mat3],[Shade.Types.float_t,Shade.Types.mat3,Shade.Types.mat3],[Shade.Types.vec2,Shade.Types.vec2,Shade.Types.vec2],[Shade.Types.mat2,Shade.Types.mat2,Shade.Types.mat2],[Shade.Types.float_t,Shade.Types.float_t,Shade.Types.float_t],[Shade.Types.vec2,Shade.Types.float_t,Shade.Types.vec2],[Shade.Types.float_t,Shade.Types.vec2,Shade.Types.vec2],[Shade.Types.mat2,Shade.Types.float_t,Shade.Types.mat2],[Shade.Types.float_t,Shade.Types.mat2,Shade.Types.mat2]];for(var d=0;d<c.length;++d)if(a.equals(c[d][0])&&b.equals(c[d][1]))return c[d][2];throw"type mismatch on div: unexpected types '"+a.repr()+"' and '"+b.repr()+"'"}if(arguments.length===0)throw"div needs at least two arguments";var e=Shade.make(arguments[0]);for(var f=1;f<arguments.length;++f)e=a(e,Shade.make(arguments[f]),"/",b,c,d);return e},Shade.mul=function(){function d(e,f){function m(a){if(a.is_pod())return"pod";if(a.is_vec())return"vec";if(a.is_mat())return"mat";throw"internal error: not pod, vec or mat"}var g=e.parents[0],h=e.parents[1],i,j,k=g.type,l=h.type;if(k.is_pod()&&l.is_pod()){if(f===0)return e;throw"i > 0 in pod element"}var n=m(k),o=m(l),p={pod:{pod:function(){throw"internal error, pod pod"},vec:function(){i=g,j=h.element(f);return a(i,j,"*",b,c,d)},mat:function(){i=g,j=h.element(f);return a(i,j,"*",b,c,d)}},vec:{pod:function(){i=g.element(f),j=h;return a(i,j,"*",b,c,d)},vec:function(){i=g.element(f),j=h.element(f);return a(i,j,"*",b,c,d)},mat:function(){return Shade.dot(g,h.element(f))}},mat:{pod:function(){i=g.element(f),j=h;return a(i,j,"*",b,c,d)},vec:function(){var a=k.array_size(),b;if(a===2)b=Shade.vec(g.element(0).element(f),g.element(1).element(f));else if(a===3)b=Shade.vec(g.element(0).element(f),g.element(1).element(f),g.element(2).element(f));else if(a===4)b=Shade.vec(g.element(0).element(f),g.element(1).element(f),g.element(2).element(f),g.element(3).element(f));else throw"bad dimension for mat "+a;return Shade.dot(b,h)},mat:function(){var e=h.element(f);return a(g,e,"*",b,c,d)}}};return p[n][o]()}function c(a){var b=a.parents[0],c=a.parents[1],d=b.constant_value(),e=c.constant_value(),f,g;b.type.is_array()?(f=vec[b.type.array_size()],g=mat[b.type.array_size()]):c.type.is_array()&&(f=vec[c.type.array_size()],g=mat[c.type.array_size()]);var h=facet_constant_type(d),i=facet_constant_type(e),j={number:{number:function(a,b){return a*b},vector:function(a,b){return f.scaling(b,a)},matrix:function(a,b){return g.scaling(b,a)}},vector:{number:function(a,b){return f.scaling(a,b)},vector:function(a,b){return f.schur_product(a,b)},matrix:function(a,b){return g.product_vec(g.transpose(b),a)}},matrix:{number:function(a,b){return g.scaling(a,b)},vector:function(a,b){return g.product_vec(a,b)},matrix:function(a,b){return g.product(a,b)}}};return j[h][i](d,e)}function b(a,b){if(_.isUndefined(a))throw"t1 multiplication with undefined type?";if(_.isUndefined(b))throw"t2 multiplication with undefined type?";var c=[[Shade.Types.vec4,Shade.Types.vec4,Shade.Types.vec4],[Shade.Types.mat4,Shade.Types.mat4,Shade.Types.mat4],[Shade.Types.mat4,Shade.Types.vec4,Shade.Types.vec4],[Shade.Types.vec4,Shade.Types.mat4,Shade.Types.vec4],[Shade.Types.float_t,Shade.Types.float_t,Shade.Types.float_t],[Shade.Types.vec4,Shade.Types.float_t,Shade.Types.vec4],[Shade.Types.float_t,Shade.Types.vec4,Shade.Types.vec4],[Shade.Types.mat4,Shade.Types.float_t,Shade.Types.mat4],[Shade.Types.float_t,Shade.Types.mat4,Shade.Types.mat4],[Shade.Types.vec3,Shade.Types.vec3,Shade.Types.vec3],[Shade.Types.mat3,Shade.Types.mat3,Shade.Types.mat3],[Shade.Types.mat3,Shade.Types.vec3,Shade.Types.vec3],[Shade.Types.vec3,Shade.Types.mat3,Shade.Types.vec3],[Shade.Types.float_t,Shade.Types.float_t,Shade.Types.float_t],[Shade.Types.vec3,Shade.Types.float_t,Shade.Types.vec3],[Shade.Types.float_t,Shade.Types.vec3,Shade.Types.vec3],[Shade.Types.mat3,Shade.Types.float_t,Shade.Types.mat3],[Shade.Types.float_t,Shade.Types.mat3,Shade.Types.mat3],[Shade.Types.vec2,Shade.Types.vec2,Shade.Types.vec2],[Shade.Types.mat2,Shade.Types.mat2,Shade.Types.mat2],[Shade.Types.mat2,Shade.Types.vec2,Shade.Types.vec2],[Shade.Types.vec2,Shade.Types.mat2,Shade.Types.vec2],[Shade.Types.float_t,Shade.Types.float_t,Shade.Types.float_t],[Shade.Types.vec2,Shade.Types.float_t,Shade.Types.vec2],[Shade.Types.float_t,Shade.Types.vec2,Shade.Types.vec2],[Shade.Types.mat2,Shade.Types.float_t,Shade.Types.mat2],[Shade.Types.float_t,Shade.Types.mat2,Shade.Types.mat2],[Shade.Types.int_t,Shade.Types.int_t,Shade.Types.int_t]];for(var d=0;d<c.length;++d)if(a.equals(c[d][0])&&b.equals(c[d][1]))return c[d][2];throw"type mismatch on mul: unexpected types  '"+a.repr()+"' and '"+b.repr()+"'."}if(arguments.length===0)throw"mul needs at least one argument";if(arguments.length===1)return arguments[0];var e=Shade.make(arguments[0]);for(var f=1;f<arguments.length;++f)e=a(e,Shade.make(arguments[f]),"*",b,c,d);return e}}(),Shade.neg=function(a){return Shade.sub(0,a)},Shade.Exp.neg=function(){return Shade.neg(this)},Shade.vec=function(){var a=[],b=[],c=0,d;for(var e=0;e<arguments.length;++e){var f=Shade.make(arguments[e]);a.push(f),b.push(c);if(_.isUndefined(d))d=f.type.element_type(0);else if(!d.equals(f.type.element_type(0)))throw"vec requires equal types";c+=f.type.size_for_vec_constructor()}b.push(c);if(c<1||c>4)throw"vec constructor requires resulting width to be between 1 and 4, got "+c+" instead";var g;if(d.equals(Shade.Types.float_t))g=Shade.basic("vec"+c);else if(d.equals(Shade.Types.int_t))g=Shade.basic("ivec"+c);else if(d.equals(Shade.Types.bool_t))g=Shade.basic("bvec"+c);else throw"vec type must be bool, int, or float";return Shade._create_concrete_value_exp({parents:a,parent_offsets:b,type:g,expression_type:"vec",size:c,element:function(a){var b=a;for(var d=0;d<this.parents.length;++d){var e=this.parent_offsets[d+1]-this.parent_offsets[d];if(a<e)return this.parents[d].element(a);a=a-e}throw"element "+b+" out of bounds (size="+c+")"},element_is_constant:function(a){var b=a;for(var d=0;d<this.parents.length;++d){var e=this.parent_offsets[d+1]-this.parent_offsets[d];if(a<e)return this.parents[d].element_is_constant(a);a=a-e}throw"element "+b+" out of bounds (size="+c+")"},element_constant_value:function(a){var b=a;for(var d=0;d<this.parents.length;++d){var e=this.parent_offsets[d+1]-this.parent_offsets[d];if(a<e)return this.parents[d].element_constant_value(a);a=a-e}throw"element "+b+" out of bounds (size="+c+")"},constant_value:Shade.memoize_on_field("_constant_value",function(){var a=[],b=_.each(this.parents,function(b){var c=b.constant_value();if(facet_typeOf(c)==="number")a.push(c);else for(var d=0;d<c.length;++d)a.push(c[d])});return vec[a.length].make(a)}),value:function(){return this.type.repr()+"("+this.parents.map(function(a){return a.evaluate()}).join(", ")+")"}})},Shade.mat=function(){var a=[],b=arguments.length,c;for(var d=0;d<arguments.length;++d){var e=arguments[d];a.push(e);if(d===0)c=e.type.size_for_vec_constructor();else if(c!==e.type.size_for_vec_constructor())throw"mat: all vecs must have same dimension"}if(c!==b)throw"non-square matrices currently not supported";if(b<1||b>4)throw"mat constructor requires resulting dimension to be between 2 and 4";var f=Shade.basic("mat"+b);return Shade._create_concrete_value_exp({parents:a,type:f,expression_type:"mat",size:b,element:function(a){return this.parents[a]},element_is_constant:function(a){return this.parents[a].is_constant()},element_constant_value:function(a){return this.parents[a].constant_value()},constant_value:Shade.memoize_on_field("_constant_value",function(){var a=[],b=_.each(this.parents,function(b){b=b.constant_value();for(var c=0;c<b.length;++c)a.push(b[c])});return mat[this.type.array_size()].make(a)}),value:function(){return this.type.repr()+"("+this.parents.map(function(a){return a.evaluate()}).join(", ")+")"}})},Shade.mat3=function(a){var b=a.type;if(b.equals(Shade.Types.mat2))return Shade.mat(Shade.vec(a.at(0),0),Shade.vec(a.at(1),0),Shade.vec(0,0,1));if(b.equals(Shade.Types.mat3))return a;if(b.equals(Shade.Types.mat4))return Shade.mat(a.element(0).swizzle("xyz"),a.element(1).swizzle("xyz"),a.element(2).swizzle("xyz"));throw"need matrix to convert to mat3"},Shade.per_vertex=function(a){a=Shade.make(a);return Shade._create_concrete_exp({expression_name:"per_vertex",parents:[a],type:a.type,stage:"vertex",evaluate:function(){return this.parents[0].evaluate()},compile:function(){}})},function(){function o(c){function d(a,b,c){return(1-c)*a+c*b}var e=c.parents[0],f=c.parents[1],g=c.parents[2],h=e.constant_value(),i=f.constant_value(),j=g.constant_value();return e.type.equals(Shade.Types.float_t)?d(h,i,j):f.type.equals(g.type)?vec.make(b(d,h,i,j)):vec.make(a(function(a,b){return d(a,b,j)},h,i))}function m(a){function c(a,b,c){return Math.max(b,Math.min(c,a))}var d=a.parents[0],e=a.parents[1],f=a.parents[2],g=d.constant_value(),h=e.constant_value(),i=f.constant_value();return d.type.equals(Shade.Types.float_t)?c(g,h,i):d.type.equals(e.type)?vec.make(b(c,g,h,i)):vec.map(g,function(a){return c(a,h,i)})}function l(b){return function(c){var d=_.map(c.parents,function(a){return a.constant_value()});return c.parents[0].type.equals(Shade.Types.float_t)?b.apply(b,d):c.parents[0].type.equals(Shade.Types.int_t)?b.apply(b,d):c.parents[0].type.equals(c.parents[1].type)?vec.make(a(b,d[0],d[1])):vec.map(d[0],function(a){return b(a,d[1])})}}function k(a,b){return _.map(a.parents,function(a){return a.type.is_vec()?a.element(b):a})}function j(){if(arguments.length==1)return e("atan",h)(arguments[0]);if(arguments.length==2){var a=i(Math.atan2);return f("atan",a)(arguments[0],arguments[1])}throw"atan expects 1 or 2 parameters, got "+arguments.length+" instead."}function i(a){return function(b){var c=b.parents[0].constant_value(),d=b.parents[1].constant_value();if(b.type.equals(Shade.Types.float_t))return a(c,d);var e=[];for(var f=0;f<c.length;++f)e.push(a(c[f],d[f]));return vec.make(e)}}function h(a){var b=a.parents[0].constant_value();return a.type.equals(Shade.Types.float_t)?Math.atan(b):vec.map(c,Math.atan)}function f(a,b){return d({name:a,type_resolving_list:[[Shade.Types.float_t,Shade.Types.float_t,Shade.Types.float_t],[Shade.Types.vec2,Shade.Types.vec2,Shade.Types.vec2],[Shade.Types.vec3,Shade.Types.vec3,Shade.Types.vec3],[Shade.Types.vec4,Shade.Types.vec4,Shade.Types.vec4]],constant_evaluator:b})}function e(a,b){return d({name:a,type_resolving_list:[[Shade.Types.float_t,Shade.Types.float_t],[Shade.Types.vec2,Shade.Types.vec2],[Shade.Types.vec3,Shade.Types.vec3],[Shade.Types.vec4,Shade.Types.vec4]],constant_evaluator:b})}function d(a){function i(a){var b=a[0].length-1;return function(){if(arguments.length!=b)throw"expected "+b+" arguments, got "+arguments.length+" instead.";for(var c=0;c<a.length;++c){var d=a[c],e=!0;for(var f=0;f<b;++f)if(!d[f].equals(arguments[f].type)){e=!1;break}if(e)return d[b]}var g=_.map(_.toArray(arguments).slice(0,arguments.length),function(a){return a.type.repr()}).join(", ");throw"could not find appropriate type match for ("+g+")"}}var b=a.name,c=a.type_resolving_list,d=a.constant_evaluator,e=a.element_evaluator;for(var f=0;f<c.length;++f)for(var g=0;g<c[f].length;++g){var h=c[f][g];if(_.isUndefined(h))throw"undefined type in type_resolver"}return function(){var a=i(c),g,h=[];for(f=0;f<arguments.length;++f)h.push(Shade.make(arguments[f]));try{g=a.apply(this,h)}catch(j){throw"type error on "+b+": "+j}var k={parents:h,expression_type:"builtin_function{"+b+"}",type:g,value:function(){return[b,"(",this.parents.map(function(a){return a.evaluate()}).join(", "),")"].join(" ")}};d?k.constant_value=Shade.memoize_on_field("_constant_value",function(){return d(this)}):k.is_constant=function(){return!1},e&&(k.element=function(a){return e(this,a)},k.element_is_constant=function(a){return this.element(a).is_constant()});return Shade._create_concrete_value_exp(k)}}function b(a,b,c,d){return _.map(_.zip(b,c,d),function(b){return a(b[0],b[1],b[2])})}function a(a,b,c){return _.map(_.zip(b,c),function(b){return a(b[0],b[1])})}var g={radians:function(a){return a*Math.PI/180},degrees:function(a){return a/Math.PI*180},sin:Math.sin,cos:Math.cos,tan:Math.tan,asin:Math.asin,acos:Math.acos,abs:Math.abs,sign:function(a){return a<0?-1:a===0?0:1},floor:Math.floor,ceil:Math.ceil,fract:function(a){return a-Math.floor(a)},exp:Math.exp,log:Math.log,exp2:function(a){return Math.exp(a*Math.log(a,2))},log2:function(a){return Math.log(a)/Math.log(2)},sqrt:Math.sqrt,inversesqrt:function(a){return 1/Math.sqrt(a)}};_.each(g,function(a,b){function c(b){if(b.type.equals(Shade.Types.float_t))return a(b.parents[0].constant_value());var c=b.parents[0].constant_value();return vec.map(c,a)}Shade[b]=e(b,c),Shade.Exp[b]=function(a){return function(){return a(this)}}(Shade[b])}),Shade.atan=j,Shade.Exp.atan=function(){return Shade.atan(this)},Shade.pow=f("pow",i(Math.pow)),Shade.Exp.pow=function(a){return Shade.pow(this,a)},_.each({mod:function(a,b){return a%b},min:Math.min,max:Math.max},function(a,b){var c=d({name:b,type_resolving_list:[[Shade.Types.int_t,Shade.Types.int_t,Shade.Types.int_t],[Shade.Types.float_t,Shade.Types.float_t,Shade.Types.float_t],[Shade.Types.vec2,Shade.Types.vec2,Shade.Types.vec2],[Shade.Types.vec3,Shade.Types.vec3,Shade.Types.vec3],[Shade.Types.vec4,Shade.Types.vec4,Shade.Types.vec4],[Shade.Types.float_t,Shade.Types.float_t,Shade.Types.float_t],[Shade.Types.vec2,Shade.Types.float_t,Shade.Types.vec2],[Shade.Types.vec3,Shade.Types.float_t,Shade.Types.vec3],[Shade.Types.vec4,Shade.Types.float_t,Shade.Types.vec4]],constant_evaluator:l(a),element_evaluator:function(a,b){return c.apply(this,k(a,b))}});Shade[b]=c});var n=d({name:"clamp",type_resolving_list:[[Shade.Types.float_t,Shade.Types.float_t,Shade.Types.float_t,Shade.Types.float_t],[Shade.Types.vec2,Shade.Types.vec2,Shade.Types.vec2,Shade.Types.vec2],[Shade.Types.vec3,Shade.Types.vec3,Shade.Types.vec3,Shade.Types.vec3],[Shade.Types.vec4,Shade.Types.vec4,Shade.Types.vec4,Shade.Types.vec4],[Shade.Types.vec2,Shade.Types.float_t,Shade.Types.float_t,Shade.Types.vec2],[Shade.Types.vec3,Shade.Types.float_t,Shade.Types.float_t,Shade.Types.vec3],[Shade.Types.vec4,Shade.Types.float_t,Shade.Types.float_t,Shade.Types.vec4]],constant_evaluator:m,element_evaluator:function(a,b){return Shade.clamp.apply(this,k(a,b))}});Shade.clamp=n;var p=d({name:"mix",type_resolving_list:[[Shade.Types.float_t,Shade.Types.float_t,Shade.Types.float_t,Shade.Types.float_t],[Shade.Types.vec2,Shade.Types.vec2,Shade.Types.vec2,Shade.Types.vec2],[Shade.Types.vec3,Shade.Types.vec3,Shade.Types.vec3,Shade.Types.vec3],[Shade.Types.vec4,Shade.Types.vec4,Shade.Types.vec4,Shade.Types.vec4],[Shade.Types.vec2,Shade.Types.vec2,Shade.Types.float_t,Shade.Types.vec2],[Shade.Types.vec3,Shade.Types.vec3,Shade.Types.float_t,Shade.Types.vec3],[Shade.Types.vec4,Shade.Types.vec4,Shade.Types.float_t,Shade.Types.vec4]],constant_evaluator:o,element_evaluator:function(a,b){return Shade.mix.apply(this,k(a,b))}});Shade.mix=p;var q=d({name:"step",type_resolving_list:[[Shade.Types.float_t,Shade.Types.float_t,Shade.Types.float_t],[Shade.Types.vec2,Shade.Types.vec2,Shade.Types.vec2],[Shade.Types.vec3,Shade.Types.vec3,Shade.Types.vec3],[Shade.Types.vec4,Shade.Types.vec4,Shade.Types.vec4],[Shade.Types.float_t,Shade.Types.vec2,Shade.Types.vec2],[Shade.Types.float_t,Shade.Types.vec3,Shade.Types.vec3],[Shade.Types.float_t,Shade.Types.vec4,Shade.Types.vec4]],constant_evaluator:function(b){function c(a,b){return b<a?0:1}var d=b.parents[0],e=b.parents[1],f=d.constant_value(),g=e.constant_value();return e.type.equals(Shade.Types.float_t)?c(f,g):d.type.equals(e.type)?vec.make(a(c,f,g)):vec.map(g,function(a){return c(f,a)})}});Shade.step=q;var r=d({name:"smoothstep",type_resolving_list:[[Shade.Types.float_t,Shade.Types.float_t,Shade.Types.float_t,Shade.Types.float_t],[Shade.Types.vec2,Shade.Types.vec2,Shade.Types.vec2,Shade.Types.vec2],[Shade.Types.vec3,Shade.Types.vec3,Shade.Types.vec3,Shade.Types.vec3],[Shade.Types.vec4,Shade.Types.vec4,Shade.Types.vec4,Shade.Types.vec4],[Shade.Types.float_t,Shade.Types.float_t,Shade.Types.vec2,Shade.Types.vec2],[Shade.Types.float_t,Shade.Types.float_t,Shade.Types.vec3,Shade.Types.vec3],[Shade.Types.float_t,Shade.Types.float_t,Shade.Types.vec4,Shade.Types.vec4]],constant_evaluator:function(a){var b=a.parents[0],c=a.parents[1],d=a.parents[2],e=Shade.clamp(d.sub(b).div(c.sub(b)),0,1);return e.mul(e).mul(Shade.sub(3,e.mul(2))).constant_value()},element_evaluator:function(a,b){return Shade.smoothstep.apply(this,k(a,b))}});Shade.smoothstep=r;var s=d({name:"length",type_resolving_list:[[Shade.Types.float_t,Shade.Types.float_t],[Shade.Types.vec2,Shade.Types.float_t],[Shade.Types.vec3,Shade.Types.float_t],[Shade.Types.vec4,Shade.Types.float_t]],constant_evaluator:function(a){var b=a.parents[0].constant_value();return a.parents[0].type.equals(Shade.Types.float_t)?b*b:vec.length(b)}});Shade.length=s;var t=d({name:"distance",type_resolving_list:[[Shade.Types.float_t,Shade.Types.float_t,Shade.Types.float_t],[Shade.Types.vec2,Shade.Types.vec2,Shade.Types.float_t],[Shade.Types.vec3,Shade.Types.vec3,Shade.Types.float_t],[Shade.Types.vec4,Shade.Types.vec4,Shade.Types.float_t]],constant_evaluator:function(a){return a.parents[0].sub(a.parents[1]).length().constant_value()}});Shade.distance=t;var u=d({name:"dot",type_resolving_list:[[Shade.Types.float_t,Shade.Types.float_t,Shade.Types.float_t],[Shade.Types.vec2,Shade.Types.vec2,Shade.Types.float_t],[Shade.Types.vec3,Shade.Types.vec3,Shade.Types.float_t],[Shade.Types.vec4,Shade.Types.vec4,Shade.Types.float_t]],constant_evaluator:function(a){var b=a.parents[0].constant_value(),c=a.parents[1].constant_value();return a.parents[0].type.equals(Shade.Types.float_t)?b*c:vec.dot(b,c)}});Shade.dot=u;var v=d({name:"cross",type_resolving_list:[[Shade.Types.vec3,Shade.Types.vec3,Shade.Types.vec3]],constant_evaluator:function(a){return vec3.cross(a.parents[0].constant_value(),a.parents[1].constant_value())},element_evaluator:function(a,b){var c=a.parents[0].length,d=a.parents[1].length;if(b===0)return c.at(1).mul(d.at(2)).sub(c.at(2).mul(d.at(1)));if(b===1)return c.at(2).mul(d.at(0)).sub(c.at(0).mul(d.at(2)));if(b===2)return c.at(0).mul(d.at(1)).sub(c.at(1).mul(d.at(0)));throw"invalid element "+b+" for cross"}});Shade.cross=v;var w=d({name:"normalize",type_resolving_list:[[Shade.Types.float_t,Shade.Types.float_t],[Shade.Types.vec2,Shade.Types.vec2],[Shade.Types.vec3,Shade.Types.vec3],[Shade.Types.vec4,Shade.Types.vec4]],constant_evaluator:function(a){return a.parents[0].div(a.parents[0].length()).constant_value()}});Shade.normalize=w;var x=d({name:"faceforward",type_resolving_list:[[Shade.Types.float_t,Shade.Types.float_t,Shade.Types.float_t,Shade.Types.float_t],[Shade.Types.vec2,Shade.Types.vec2,Shade.Types.vec2,Shade.Types.vec2],[Shade.Types.vec3,Shade.Types.vec3,Shade.Types.vec3,Shade.Types.vec3],[Shade.Types.vec4,Shade.Types.vec4,Shade.Types.vec4,Shade.Types.vec4]],constant_evaluator:function(a){var b=a.parents[0],c=a.parents[1],d=a.parents[2];return d.dot(c).constant_value()<0?b.constant_value():Shade.sub(0,b).constant_value()},element_evaluator:function(a,b){var c=a.parents[0],d=a.parents[1],e=a.parents[2];return Shade.selection(e.dot(d).lt(0),c,Shade.neg(c)).element(b)}});Shade.faceforward=x;var y=d({name:"reflect",type_resolving_list:[[Shade.Types.float_t,Shade.Types.float_t,Shade.Types.float_t],[Shade.Types.vec2,Shade.Types.vec2,Shade.Types.vec2],[Shade.Types.vec3,Shade.Types.vec3,Shade.Types.vec3],[Shade.Types.vec4,Shade.Types.vec4,Shade.Types.vec4]],constant_evaluator:function(a){var b=a.parents[0],c=a.parents[1];return b.sub(Shade.mul(2,c.dot(b),c)).constant_value()}});Shade.reflect=y;var z=d({name:"refract",type_resolving_list:[[Shade.Types.float_t,Shade.Types.float_t,Shade.Types.float_t,Shade.Types.float_t],[Shade.Types.vec2,Shade.Types.vec2,Shade.Types.float_t,Shade.Types.vec2],[Shade.Types.vec3,Shade.Types.vec3,Shade.Types.float_t,Shade.Types.vec3],[Shade.Types.vec4,Shade.Types.vec4,Shade.Types.float_t,Shade.Types.vec4]],constant_evaluator:function(a){var b=a.parents[0],c=a.parents[1],d=a.parents[2],e=Shade.sub(1,Shade.mul(d,d,Shade.sub(1,c.dot(b).mul(c.dot(b)))));return e.constant_value()<0?vec[b.type.array_size()].create():d.mul(b).sub(d.mul(c.dot(b)).add(e.sqrt()).mul(c)).constant_value()},element_evaluator:function(a,b){var c=a.parents[0],d=a.parents[1],e=a.parents[2],f=Shade.sub(1,Shade.mul(e,e,Shade.sub(1,d.dot(c).mul(d.dot(c))))),g=e.mul(c).sub(e.mul(d.dot(c)).add(f.sqrt()).mul(d)),h;switch(c.type.array_size()){case 2:h=Shade.vec(0,0);break;case 3:h=Shade.vec(0,0,0);break;case 4:h=Shade.vec(0,0,0,0);break;default:throw"internal error"}return Shade.selection(f.lt(0),h,g).element(b)}});Shade.refract=z;var A=d({name:"texture2D",type_resolving_list:[[Shade.Types.sampler2D,Shade.Types.vec2,Shade.Types.vec4]]});Shade.texture2D=A,Shade.equal=d({name:"equal",type_resolving_list:[[Shade.Types.vec2,Shade.Types.vec2,Shade.Types.bool_t],[Shade.Types.vec3,Shade.Types.vec3,Shade.Types.bool_t],[Shade.Types.vec4,Shade.Types.vec4,Shade.Types.bool_t],[Shade.Types.ivec2,Shade.Types.ivec2,Shade.Types.bool_t],[Shade.Types.ivec3,Shade.Types.ivec3,Shade.Types.bool_t],[Shade.Types.ivec4,Shade.Types.ivec4,Shade.Types.bool_t],[Shade.Types.bvec2,Shade.Types.bvec2,Shade.Types.bool_t],[Shade.Types.bvec3,Shade.Types.bvec3,Shade.Types.bool_t],[Shade.Types.bvec4,Shade.Types.bvec4,Shade.Types.bool_t]],constant_evaluator:function(b){var c=b.parents[0].constant_value(),d=b.parents[1].constant_value();return _.all(a(function(a,b){return a===b}),c,d)}}),Shade.Exp.equal=function(a){return Shade.equal(this,a)},Shade.notEqual=d({name:"notEqual",type_resolving_list:[[Shade.Types.vec2,Shade.Types.vec2,Shade.Types.bool_t],[Shade.Types.vec3,Shade.Types.vec3,Shade.Types.bool_t],[Shade.Types.vec4,Shade.Types.vec4,Shade.Types.bool_t],[Shade.Types.ivec2,Shade.Types.ivec2,Shade.Types.bool_t],[Shade.Types.ivec3,Shade.Types.ivec3,Shade.Types.bool_t],[Shade.Types.ivec4,Shade.Types.ivec4,Shade.Types.bool_t],[Shade.Types.bvec2,Shade.Types.bvec2,Shade.Types.bool_t],[Shade.Types.bvec3,Shade.Types.bvec3,Shade.Types.bool_t],[Shade.Types.bvec4,Shade.Types.bvec4,Shade.Types.bool_t]],constant_evaluator:function(b){var c=b.parents[0].constant_value(),d=b.parents[1].constant_value();return!_.all(a(function(a,b){return a===b}),c,d)}}),Shade.Exp.notEqual=function(a){return Shade.notEqual(this,a)},Shade.lessThan=d({name:"lessThan",type_resolving_list:[[Shade.Types.vec2,Shade.Types.vec2,Shade.Types.bvec2],[Shade.Types.vec3,Shade.Types.vec3,Shade.Types.bvec3],[Shade.Types.vec4,Shade.Types.vec4,Shade.Types.bvec4],[Shade.Types.ivec2,Shade.Types.ivec2,Shade.Types.bvec2],[Shade.Types.ivec3,Shade.Types.ivec3,Shade.Types.bvec3],[Shade.Types.ivec4,Shade.Types.ivec4,Shade.Types.bvec4]],constant_evaluator:function(a){var b=a.parents[0].constant_value(),c=a.parents[1].constant_value();return _.map(b,function(a,b){return a<c[b]})},element_evaluator:function(a,b){return Shade.lessThan.apply(this,k(a,b))}}),Shade.Exp.lessThan=function(a){return Shade.lessThan(this,a)},Shade.lessThanEqual=d({name:"lessThanEqual",type_resolving_list:[[Shade.Types.vec2,Shade.Types.vec2,Shade.Types.bvec2],[Shade.Types.vec3,Shade.Types.vec3,Shade.Types.bvec3],[Shade.Types.vec4,Shade.Types.vec4,Shade.Types.bvec4],[Shade.Types.ivec2,Shade.Types.ivec2,Shade.Types.bvec2],[Shade.Types.ivec3,Shade.Types.ivec3,Shade.Types.bvec3],[Shade.Types.ivec4,Shade.Types.ivec4,Shade.Types.bvec4]],constant_evaluator
:function(a){var b=a.parents[0].constant_value(),c=a.parents[1].constant_value();return _.map(b,function(a,b){return a<=c[b]})},element_evaluator:function(a,b){return Shade.lessThanEqual.apply(this,k(a,b))}}),Shade.Exp.lessThanEqual=function(a){return Shade.lessThanEqual(this,a)},Shade.greaterThan=d({name:"greaterThan",type_resolving_list:[[Shade.Types.vec2,Shade.Types.vec2,Shade.Types.bvec2],[Shade.Types.vec3,Shade.Types.vec3,Shade.Types.bvec3],[Shade.Types.vec4,Shade.Types.vec4,Shade.Types.bvec4],[Shade.Types.ivec2,Shade.Types.ivec2,Shade.Types.bvec2],[Shade.Types.ivec3,Shade.Types.ivec3,Shade.Types.bvec3],[Shade.Types.ivec4,Shade.Types.ivec4,Shade.Types.bvec4]],constant_evaluator:function(a){var b=a.parents[0].constant_value(),c=a.parents[1].constant_value();return _.map(b,function(a,b){return a>c[b]})},element_evaluator:function(a,b){return Shade.greaterThan.apply(this,k(a,b))}}),Shade.Exp.greaterThan=function(a){return Shade.greaterThan(this,a)},Shade.greaterThanEqual=d({name:"greaterThanEqual",type_resolving_list:[[Shade.Types.vec2,Shade.Types.vec2,Shade.Types.bvec2],[Shade.Types.vec3,Shade.Types.vec3,Shade.Types.bvec3],[Shade.Types.vec4,Shade.Types.vec4,Shade.Types.bvec4],[Shade.Types.ivec2,Shade.Types.ivec2,Shade.Types.bvec2],[Shade.Types.ivec3,Shade.Types.ivec3,Shade.Types.bvec3],[Shade.Types.ivec4,Shade.Types.ivec4,Shade.Types.bvec4]],constant_evaluator:function(a){var b=a.parents[0].constant_value(),c=a.parents[1].constant_value();return _.map(b,function(a,b){return a>=c[b]})},element_evaluator:function(a,b){return Shade.greaterThanEqual.apply(this,k(a,b))}}),Shade.Exp.greaterThanEqual=function(a){return Shade.greaterThanEqual(this,a)},Shade.all=d({name:"all",type_resolving_list:[[Shade.Types.bvec2,Shade.Types.bool_t],[Shade.Types.bvec3,Shade.Types.bool_t],[Shade.Types.bvec4,Shade.Types.bool_t]],constant_evaluator:function(a){var b=a.parents[0].constant_value();return _.all(b,function(a){return a})}}),Shade.Exp.all=function(){return Shade.all(this)},Shade.any=d({name:"any",type_resolving_list:[[Shade.Types.bvec2,Shade.Types.bool_t],[Shade.Types.bvec3,Shade.Types.bool_t],[Shade.Types.bvec4,Shade.Types.bool_t]],constant_evaluator:function(a){var b=a.parents[0].constant_value();return _.any(b,function(a){return a})}}),Shade.Exp.any=function(){return Shade.any(this)},Shade.matrixCompMult=d({name:"matrixCompMult",type_resolving_list:[[Shade.Types.mat2,Shade.Types.mat2,Shade.Types.mat2],[Shade.Types.mat3,Shade.Types.mat3,Shade.Types.mat3],[Shade.Types.mat4,Shade.Types.mat4,Shade.Types.mat4]],constant_evaluator:function(a){var b=a.parents[0].constant_value(),c=a.parents[1].constant_value();return mat.map(b,function(a,b){return a*c[b]})},element_evaluator:function(a,b){var c=a.parents[0],d=a.parents[1];return c.element(b).mul(d.element(b))}}),Shade.Exp.matrixCompMult=function(a){return Shade.matrixCompMult(this,a)}}(),Shade.seq=function(a){return a.length==1?a[0]:Shade._create_concrete_exp({expression_name:"seq",parents:a,evaluate:function(a){return this.parents.map(function(a){return a.evaluate()}).join("; ")},type:Shade.basic("void"),compile:function(a){}})},Shade.Optimizer={},Shade.Optimizer._debug_passes=!1,Shade.Optimizer.transform_expression=function(a){return function(b){var c;for(var d=0;d<a.length;++d){Shade.debug&&Shade.Optimizer._debug_passes&&(c=b);var e=a[d][0],f=a[d][1],g=b.guid;if(a[d][3]){var h;do h=b.guid,b=b.replace_if(e,f);while(b.guid!==h)}else b=b.replace_if(e,f);var i=b.guid;Shade.debug&&Shade.Optimizer._debug_passes&&g!=i&&(console.log("Pass",a[d][2],"succeeded"),console.log("Before: "),c.debug_print(),console.log("After: "),b.debug_print())}return b}},Shade.Optimizer.is_constant=function(a){return a.is_constant()},Shade.Optimizer.replace_with_constant=function(a){var b=a.constant_value(),c=Shade.constant(b,a.type);return c},Shade.Optimizer.is_zero=function(a){if(!a.is_constant())return!1;var b=a.constant_value(),c=facet_constant_type(b);return c==="number"?b===0:c==="vector"?_.all(b,function(a){return a===0}):facet_typeOf(b)==="matrix"?_.all(b,function(a){return a===0}):!1},Shade.Optimizer.is_mul_identity=function(a){if(!a.is_constant())return!1;var b=a.constant_value(),c=facet_constant_type(b);if(c==="number")return b===1;if(c==="vector")switch(b.length){case 2:return vec.equal(b,vec.make([1,1]));case 3:return vec.equal(b,vec.make([1,1,1]));case 4:return vec.equal(b,vec.make([1,1,1,1]));default:throw"bad vec length: "+b.length}return c==="matrix"?mat.equal(b,mat[Math.sqrt(b.length)].identity()):!1},Shade.Optimizer.is_times_zero=function(a){return a.expression_type==="operator*"&&(Shade.Optimizer.is_zero(a.parents[0])||Shade.Optimizer.is_zero(a.parents[1]))},Shade.Optimizer.is_plus_zero=function(a){return a.expression_type==="operator+"&&(Shade.Optimizer.is_zero(a.parents[0])||Shade.Optimizer.is_zero(a.parents[1]))},Shade.Optimizer.replace_with_nonzero=function(a){if(Shade.Optimizer.is_zero(a.parents[0]))return a.parents[1];if(Shade.Optimizer.is_zero(a.parents[1]))return a.parents[0];throw"internal error: no zero value on input to replace_with_nonzero"},Shade.Optimizer.is_times_one=function(a){if(a.expression_type!=="operator*")return!1;var b=a.parents[0].type,c=a.parents[1].type,d=Shade.Types.float_t;if(b.equals(c))return Shade.Optimizer.is_mul_identity(a.parents[0])||Shade.Optimizer.is_mul_identity(a.parents[1]);if(!b.equals(d)&&c.equals(d))return Shade.Optimizer.is_mul_identity(a.parents[1]);if(b.equals(d)&&!c.equals(d))return Shade.Optimizer.is_mul_identity(a.parents[0]);if(b.is_vec()&&c.is_mat())return Shade.Optimizer.is_mul_identity(a.parents[1]);if(b.is_mat()&&c.is_vec())return Shade.Optimizer.is_mul_identity(a.parents[0]);throw"internal error on Shade.Optimizer.is_times_one"},Shade.Optimizer.replace_with_notone=function(a){var b=a.parents[0].type,c=a.parents[1].type,d=Shade.Types.float_t;if(b.equals(c)){if(Shade.Optimizer.is_mul_identity(a.parents[0]))return a.parents[1];if(Shade.Optimizer.is_mul_identity(a.parents[1]))return a.parents[0];throw"internal error on Shade.Optimizer.replace_with_notone"}if(!b.equals(d)&&c.equals(d))return a.parents[0];if(b.equals(d)&&!c.equals(d))return a.parents[1];throw"internal error: no is_mul_identity value on input to replace_with_notone"},Shade.Optimizer.replace_with_zero=function(a){if(a.type.equals(Shade.Types.float_t))return Shade.constant(0);if(a.type.equals(Shade.Types.int_t))return Shade.as_int(0);if(a.type.equals(Shade.Types.vec2))return Shade.constant(vec2.create());if(a.type.equals(Shade.Types.vec3))return Shade.constant(vec3.create());if(a.type.equals(Shade.Types.vec4))return Shade.constant(vec4.create());if(a.type.equals(Shade.Types.mat2))return Shade.constant(mat2.create());if(a.type.equals(Shade.Types.mat3))return Shade.constant(mat3.create());if(a.type.equals(Shade.Types.mat4))return Shade.constant(mat4.create());throw"internal error: not a type replaceable with zero"},Shade.Optimizer.vec_at_constant_index=function(a){if(a.expression_type!=="index")return!1;if(!a.parents[1].is_constant())return!1;var b=a.parents[1].constant_value();if(facet_typeOf(b)!=="number")return!1;var c=a.parents[0].type;return c.equals(Shade.Types.vec2)&&b>=0&&b<=1?!0:c.equals(Shade.Types.vec3)&&b>=0&&b<=2?!0:c.equals(Shade.Types.vec4)&&b>=0&&b<=3?!0:!1},Shade.Optimizer.replace_vec_at_constant_with_swizzle=function(a){var b=a.parents[1].constant_value();if(b===0)return a.parents[0].swizzle("x");if(b===1)return a.parents[0].swizzle("y");if(b===2)return a.parents[0].swizzle("z");if(b===3)return a.parents[0].swizzle("w");throw"internal error on Shade.Optimizer.replace_vec_at_constant_with_swizzle"},Shade.Optimizer.is_logical_and_with_constant=function(a){return a.expression_type==="operator&&"&&a.parents[0].is_constant()},Shade.Optimizer.replace_logical_and_with_constant=function(a){return a.parents[0].constant_value()?a.parents[1]:Shade.make(!1)},Shade.Optimizer.is_logical_or_with_constant=function(a){return a.expression_type==="operator||"&&a.parents[0].is_constant()},Shade.Optimizer.replace_logical_or_with_constant=function(a){return a.parents[0].constant_value()?Shade.make(!0):a.parents[1]},Shade.Optimizer.is_never_discarding=function(a){return a.expression_type==="discard_if"&&a.parents[0].is_constant()&&!a.parents[0].constant_value()},Shade.Optimizer.remove_discard=function(a){return a.parents[1]},Shade.Optimizer.is_known_branch=function(a){var b=a.expression_type==="selection"&&a.parents[0].is_constant();return b},Shade.Optimizer.prune_selection_branch=function(a){return a.parents[0].constant_value()?a.parents[1]:a.parents[2]},Shade.canonicalize_program_object=function(a){var b={},c={color:"gl_FragColor",position:"gl_Position",point_size:"gl_PointSize"};_.each(a,function(a,d){var e=d in c?c[d]:d;b[e]=a});return b},Shade.program=function(a){function l(a){var c=Shade.unique_name();b[c]=a,k.push(c);return Shade.varying(c,a.type)}function j(a){return a.stage==="vertex"}function i(a){return a.expression_type==="varying"}function h(a){return a.expression_type==="attribute"}a=Shade.canonicalize_program_object(a);var b={},c={};_.each(a,function(a,d){a=Shade.make(a);if(d==="gl_FragColor"){if(!a.type.equals(Shade.Types.vec4))throw"color attribute must be of type vec4, got "+a.type.repr()+" instead";c.gl_FragColor=a}else if(d==="gl_Position"){if(!a.type.equals(Shade.Types.vec4))throw"position attribute must be of type vec4, got "+a.type.repr()+" instead";b.gl_Position=a}else if(d==="gl_PointSize"){if(!a.type.equals(Shade.Types.float_t))throw"color attribute must be of type float, got "+a.type.repr()+" instead";b.gl_PointSize=a}else{if(d.substr(0,3)==="gl_")throw"gl_* are reserved GLSL names";b[d]=a}});var d=Shade.CompilationContext(Shade.VERTEX_PROGRAM_COMPILE),e=Shade.CompilationContext(Shade.FRAGMENT_PROGRAM_COMPILE),f=[],g=[],k=[],m=[[Shade.Optimizer.is_times_zero,Shade.Optimizer.replace_with_zero,"v * 0",!0],[Shade.Optimizer.is_times_one,Shade.Optimizer.replace_with_notone,"v * 1",!0],[Shade.Optimizer.is_plus_zero,Shade.Optimizer.replace_with_nonzero,"v + 0",!0],[Shade.Optimizer.is_never_discarding,Shade.Optimizer.remove_discard,"discard_if(false)"],[Shade.Optimizer.is_known_branch,Shade.Optimizer.prune_selection_branch,"constant?a:b",!0],[Shade.Optimizer.vec_at_constant_index,Shade.Optimizer.replace_vec_at_constant_with_swizzle,"vec[constant_ix]"],[Shade.Optimizer.is_constant,Shade.Optimizer.replace_with_constant,"constant folding"],[Shade.Optimizer.is_logical_or_with_constant,Shade.Optimizer.replace_logical_or_with_constant,"constant||v",!0],[Shade.Optimizer.is_logical_and_with_constant,Shade.Optimizer.replace_logical_and_with_constant,"constant&&v",!0]],n=[[j,l,"per-vertex hoisting"],[h,l,"attribute hoisting"]];n.push.apply(n,m);var o=m,p=Shade.Optimizer.transform_expression(n),q=Shade.Optimizer.transform_expression(o),r=[];_.each(c,function(a,b){a=p(a),r.push.apply(r,_.map(a.find_if(i),function(a){return a.evaluate()})),g.push(Shade.set(a,b))}),_.each(b,function(a,b){(k.indexOf(b)===-1||r.indexOf(b)!==-1)&&f.push(Shade.set(q(a),b))});var s=Shade.seq(f),t=Shade.seq(g);d.compile(s),e.compile(t);var u=d.source(),v=e.source();Shade.debug&&(Shade.debug&&Shade.Optimizer._debug_passes&&(console.log("Vertex program final AST:"),s.debug_print()),console.log("Vertex program source:"),console.log(u),Shade.debug&&Shade.Optimizer._debug_passes&&(console.log("Fragment program final AST:"),t.debug_print()),console.log("Fragment program source:"),console.log(v));var w=Facet.program(u,v);w.attribute_buffers=s.attribute_buffers(),w.uniforms=_.union(s.uniforms(),t.uniforms());return w},Shade.is_program_parameter=function(a){return["color","position","point_size","gl_FragColor","gl_Position","gl_PointSize"].indexOf(a)!=-1},Shade.Utils={},Shade.Utils.lerp=function(a){var b=_.toArray(a);b.push(b[b.length-1]);return function(a){var c=Shade.array(b);a=Shade.clamp(a,0,1).mul(b.length-2);var d=a.fract(),e=a.floor();return Shade.mix(c.at(e),c.at(e.add(1)),d)}},Shade.Utils.choose=function(a){var b=_.toArray(a);return function(a){var c=Shade.array(b);a=Shade.clamp(a,0,b.length-1).floor().as_int();return c.at(a)}},Shade.Utils.linear=function(a,b,c,d){var e=Shade.sub(b,a),f=Shade.sub(d,c);return function(b){return Shade.make(b).sub(a).mul(f.div(e)).add(c)}},Shade.Utils.fit=function(a){var b=a._shade_type;if(b==="attribute_buffer"){if(a.itemSize!==1)throw"only dimension-1 attribute buffers are supported";a=a.array}var c=_.min(a),d=_.max(a);return Shade.Utils.linear(c,d,0,1)},Shade.gl_light=function(a){var b=a.light_position,c=a.vertex,d=a.material_color,e=a.light_ambient||Shade.vec(0,0,0,1),f=a.light_diffuse||Shade.vec(1,1,1,1),g=a.per_vertex||!1,h=a.normal,i=b.sub(c).normalize(),j=Shade.max(i.dot(h),0);g&&(j=Shade.per_vertex(j));return Shade.add(e.mul(d),j.mul(f).mul(d))},function(){var a=Shade.vec(0,0,0,0);Shade.gl_fog=function(b){b=_.defaults(b,{mode:"exp",density:1,start:0,end:1,fog_color:a,per_vertex:!1});var c=b.mode||"exp",d=Shade.make(b.fog_color),e=b.color,f=Shade.make(b.z),g,h,i;if(b.mode==="exp")h=Shade.make(b.density),i=Shade.make(b.start),g=f.sub(i).mul(h).exp();else if(c==="exp2")h=Shade.make(b.density),i=Shade.make(b.start),g=f.sub(i).min(0).mul(h),g=g.mul(g),g=g.neg().exp();else if(c==="linear"){i=Shade.make(b.start);var j=Shade.make(b.end);j=Shade.make(j),i=Shade.make(i),g=j.sub(f).div(j.sub(i))}g=g.clamp(0,1),b.per_vertex&&(g=g.per_vertex());return Shade.mix(d,e,g)}}(),Shade.cosh=function(a){return Shade.exp(a).add(a.neg().exp()).div(2)},Shade.Exp.cosh=function(){return Shade.cosh(this)},Shade.sinh=function(a){return Shade.exp(a).sub(a.neg().exp()).div(2)},Shade.Exp.sinh=function(){return Shade.sinh(this)},function(){var a=function(a,b,c,d,e){e=e||function(a){return!0};return Shade._create_concrete_value_exp({parents:[a,b],type:Shade.Types.bool_t,expression_type:"operator"+c,value:function(){return"("+this.parents[0].evaluate()+" "+c+" "+this.parents[1].evaluate()+")"},constant_value:Shade.memoize_on_field("_constant_value",function(){return d(this)}),parent_is_unconditional:e})},b=function(a){return function(b){var c=b.parents[0],d=b.parents[1];return a(c.constant_value(),d.constant_value())}},c=function(b,c,d){return function(){if(arguments.length===0)throw"operator "+b+" requires at least 1 parameter";if(arguments.length===1)return Shade.make(arguments[0]).as_bool();var e=Shade.make(arguments[0]);if(!e.type.equals(Shade.Types.bool_t))throw"operator "+b+" requires booleans, got argument 1 as "+arguments[0].type.repr()+" instead.";var f=e;for(var g=1;g<arguments.length;++g){var h=Shade.make(arguments[g]);if(!h.type.equals(Shade.Types.bool_t))throw"operator "+b+" requires booleans, got argument "+(g+1)+" as "+h.type.repr()+" instead.";f=a(f,h,b,c,d)}return f}};Shade.or=c("||",b(function(a,b){return a||b}),function(a){return a===0}),Shade.Exp.or=function(a){return Shade.or(this,a)},Shade.and=c("&&",b(function(a,b){return a&&b}),function(a){return a===0}),Shade.Exp.and=function(a){return Shade.and(this,a)},Shade.xor=c("^^",b(function(a,b){return~~(a^b)})),Shade.Exp.xor=function(a){return Shade.xor(this,a)},Shade.not=function(a){a=Shade.make(a);if(!a.type.equals(Shade.Types.bool_t))throw"logical_not requires bool expression";return Shade._create_concrete_value_exp({parents:[a],type:Shade.Types.bool_t,expression_type:"operator!",value:function(){return"(!"+this.parents[0].evaluate()+")"},constant_value:Shade.memoize_on_field("_constant_value",function(){return!this.parents[0].constant_value()})})},Shade.Exp.not=function(){return Shade.not(this)};var d=function(b,c,d){return function(e,f){var g=Shade.make(e),h=Shade.make(f);c(g.type,h.type);return a(g,h,b,d)}},e=function(a){return function(b,c){if((!b.equals(Shade.Types.float_t)||!c.equals(Shade.Types.float_t))&&(!b.equals(Shade.Types.int_t)||!c.equals(Shade.Types.int_t)))throw"operator"+a+" requires two ints or two floats, got "+b.repr()+" and "+c.repr()+" instead."}},f=function(a){return function(b,c){if(!b.equals(c))throw"operator"+a+" requires same types, got "+b.repr()+" and "+c.repr()+" instead.";if(b.is_array()&&!b.is_vec()&&!b.is_mat())throw"operator"+a+" does not support arrays"}};Shade.lt=d("<",e("<"),b(function(a,b){return a<b})),Shade.Exp.lt=function(a){return Shade.lt(this,a)},Shade.le=d("<=",e("<="),b(function(a,b){return a<=b})),Shade.Exp.le=function(a){return Shade.le(this,a)},Shade.gt=d(">",e(">"),b(function(a,b){return a>b})),Shade.Exp.gt=function(a){return Shade.gt(this,a)},Shade.ge=d(">=",e(">="),b(function(a,b){return a>=b})),Shade.Exp.ge=function(a){return Shade.ge(this,a)},Shade.eq=d("==",f("=="),b(function(a,b){if(facet_typeOf(a)==="number"||facet_typeOf(a)==="boolean")return a===b;if(facet_typeOf(a)==="array")return _.all(_.map(_.zip(a,b),function(a){return a[0]===a[1]}),function(a){return a});if(facet_constant_type(a)==="vector")return vec.equal(a,b);if(facet_constant_type(a)==="matrix")return mat.equal(a,b);throw"internal error: unrecognized type "+facet_typeOf(a)+" "+facet_constant_type(a)})),Shade.Exp.eq=function(a){return Shade.eq(this,a)},Shade.ne=d("!=",f("!="),b(function(a,b){if(facet_typeOf(a)==="number"||facet_typeOf(a)==="boolean")return a!==b;if(facet_typeOf(a)==="array")return _.any(_.map(_.zip(a,b),function(a){return a[0]!==a[1]}),function(a){return a});throw"internal error: unrecognized type "+facet_typeOf(a)+" "+facet_constant_type(a)})),Shade.Exp.ne=function(a){return Shade.ne(this,a)}}(),Shade.selection=function(a,b,c){a=Shade.make(a),b=Shade.make(b),c=Shade.make(c);if(!b.type.equals(c.type))throw"selection return expressions must have same types";if(!a.type.equals(a.type))throw"selection condition must be of type bool";return Shade._create_concrete_value_exp({parents:[a,b,c],type:b.type,expression_type:"selection",_must_be_function_call:!0,value:function(){return"("+this.parents[0].evaluate()+"?"+this.parents[1].evaluate()+":"+this.parents[2].evaluate()+")"},constant_value:function(){return this.parents[0].is_constant()?this.parents[0].constant_value()?this.parents[1].constant_value():this.parents[2].constant_value():this.parents[1].constant_value()},is_constant:function(){if(!this.parents[0].is_constant()){if(this.parents[1].is_constant()&&this.parents[2].is_constant()){var a=this.parents[1].constant_value(),b=this.parents[2].constant_value();return this.type.constant_equal(a,b)}return!1}return this.parents[0].constant_value()?this.parents[1].is_constant():this.parents[2].is_constant()},element_constant_value:function(a){return this.parents[0].is_constant()?this.parents[0].constant_value()?this.parents[1].element_constant_value(a):this.parents[2].element_constant_value(a):this.parents[1].element_constant_value(a)},element_is_constant:function(a){if(!this.parents[0].is_constant()){if(this.parents[1].element_is_constant(a)&&this.parents[2].element_is_constant(a)){var b=this.parents[1].element_constant_value(a),c=this.parents[2].element_constant_value(a);return this.type.element_type(a).constant_equal(b,c)}return!1}return this.parents[0].constant_value()?this.parents[1].element_is_constant(a):this.parents[2].element_is_constant(a)},parent_is_unconditional:function(a){return a===0}})},Shade.Exp.selection=function(a,b){return Shade.selection(this,a,b)},Shade.rotation=function(a,b){a=Shade.make(a),b=Shade.make(b).normalize();var c=a.sin(),d=a.cos(),e=Shade.sub(1,d),f=b.at(0),g=b.at(1),h=b.at(2);return Shade.mat(Shade.vec(f.mul(f).mul(e).add(d),g.mul(f).mul(e).add(h.mul(c)),h.mul(f).mul(e).sub(g.mul(c)),0),Shade.vec(f.mul(g).mul(e).sub(h.mul(c)),g.mul(g).mul(e).add(d),h.mul(g).mul(e).add(f.mul(c)),0),Shade.vec(f.mul(h).mul(e).add(g.mul(c)),g.mul(h).mul(e).sub(f.mul(c)),h.mul(h).mul(e).add(d),0),Shade.vec(0,0,0,1))},Shade.translation=function(a){return Shade.mat(Shade.vec(1,0,0,0),Shade.vec(0,1,0,0),Shade.vec(0,0,1,0),Shade.vec(a,1))},Shade.look_at=function(a,b,c){a=Shade.make(a),b=Shade.make(b),c=Shade.make(c);var d=a.sub(b).normalize(),e=c.cross(d).normalize(),f=d.cross(e).normalize();return Shade.mat(Shade.vec(e,0),Shade.vec(f,0),Shade.vec(d,0),Shade.vec(e.dot(a).neg(),f.dot(a).neg(),d.dot(a).neg(),1))},Shade.discard_if=function(a,b){a=Shade.make(a),b=Shade.make(b);var c=Shade._create_concrete_exp({is_constant:Shade.memoize_on_field("_is_constant",function(){var a=_.all(this.parents,function(a){return a.is_constant()});return a&&!this.parents[0].constant_value()}),_must_be_function_call:!0,type:a.type,expression_type:"discard_if",parents:[b,a],parent_is_unconditional:function(a){return a===0},compile:function(b){b.strings.push(a.type.repr(),this.glsl_name,"(void) {\n","    if (",this.parents[0].evaluate(),") discard;\n","    return ",this.parents[1].evaluate(),";\n}\n")},constant_value:function(){return a.constant_value()}});return c},Shade.id=function(a){var b=a&255,c=a>>8&255,d=a>>16&255,e=a>>24&255;return vec4.make([b/255,c/255,d/255,e/255])};return Shade})(),Shade.Colors={},Shade.Colors.alpha=function(a,b){a=Shade.make(a),b=Shade.make(b);if(!b.type.equals(Shade.Types.float_t))throw"alpha parameter must be float";if(a.type.equals(Shade.Types.vec4))return Shade.vec(a.swizzle("rgb"),b);if(a.type.equals(Shade.Types.vec3))return Shade.vec(a,b);throw"color parameter must be vec3 or vec4"},Shade.Exp.alpha=function(a){return Shade.Colors.alpha(this,a)},function(){function g(a,b){return a>.03928?Math.pow((a+.055)/1.055,b):a/12.92}function f(a,b){return a>.00304?1.055*Math.pow(a,1/b)-.055:12.92*a}function e(a,b,c){c>1&&(c-=1),c<0&&(c+=1);return c<1/6?a+(b-a)*c*6:c<.5?b:c<2/3?a+(b-a)*(2/3-c)*6:a}function d(a){var b,c,d;b=a.x+a.y+a.z,c=a.x/b,d=a.y/b;return[2*c/(6*d-c+1.5),4.5*d/(6*d-c+1.5)]}function a(a,b){if(_.isUndefined(b)||_.isUndefined(a))throw"Undefined!";return function(c){return a(b(c))}}var b={},c=["rgb","srgb","luv","hcl","hls","hsv","xyz"];_.each(c,function(a){b[a]={},b[a][a]=function(a){return a},b[a].create=function(d,e,f){var g=a.length,h=a[g-3],i=a[g-2],j=a[g-1],k={space:a,values:function(){return[this[h],this[i],this[j]]},as_shade:function(c){_.isUndefined(c)&&(c=1);var d=b[a].rgb(this);return Shade.vec(d.r,d.g,d.b,c)}};k[h]=d,k[i]=e,k[j]=f,_.each(c,function(c){k[c]=function(){return b[a][c](k)}});return k}}),b.rgb.hsv=function(a){var c=Math.min(a.r,a.g,a.b),d=Math.max(a.r,a.g,a.b);if(d!==c){var e=a.r===c?a.g-a.b:a.g===c?a.b-a.r:a.r-a.g,f=a.r===c?3:a.g===c?5:1;return b.hsv.create(Math.PI/3*(f-e/(d-c)),(d-c)/d,d)}return b.hsv.create(0,0,d)},b.rgb.hls=function(a){var c=Math.min(a.r,a.g,a.b),d=Math.max(a.r,a.g,a.b),e=(d+c)/2,f,g;d!==c?(e<.5?f=(d-c)/(d+c):f=(d-c)/(2-d-c),a.r===d?g=(a.g-a.b)/(d-c):a.g===d?g=2+(a.b-a.r)/(d-c):g=4+(a.r-a.g)/(d-c),g=g*Math.PI/3,g<0&&(g+=Math.PI*2),g>Math.PI*2&&(g-=Math.PI*2)):(f=0,g=0);return b.hls.create(g,e,f)},b.rgb.xyz=function(a){var c=h.y;return b.xyz.create(c*(.412453*a.r+.35758*a.g+.180423*a.b),c*(.212671*a.r+.71516*a.g+.072169*a.b),c*(.019334*a.r+.119193*a.g+.950227*a.b))},b.rgb.srgb=function(a){return b.srgb.create(f(a.r,2.4),f(a.g,2.4),f(a.b,2.4))},b.srgb.xyz=function(a){var c=h.y,d=g(a.r,2.4),e=g(a.g,2.4),f=g(a.b,2.4);return b.xyz.create(c*(.412453*d+.35758*e+.180423*f),c*(.212671*d+.71516*e+.072169*f),c*(.019334*d+.119193*e+.950227*f))},b.srgb.rgb=function(a){var c=b.rgb.create(g(a.r,2.4),g(a.g,2.4),g(a.b,2.4));return c},b.srgb.hls=a(b.rgb.hls,b.srgb.rgb),b.srgb.hsv=a(b.rgb.hsv,b.srgb.rgb),b.xyz.luv=function(a){var c,e=d(a);c=a.y/h.y;var f=c>.008856?116*Math.pow(c,1/3)-16:903.3*c;return b.luv.create(f,13*f*(e[0]-i[0]),13*f*(e[1]-i[1]))},b.rgb.luv=a(b.xyz.luv,b.rgb.xyz),b.srgb.luv=a(b.rgb.luv,b.srgb.rgb),b.xyz.rgb=function(a){var c=h.y;return b.rgb.create((3.240479*a.x-1.53715*a.y-.498535*a.z)/c,(-0.969256*a.x+1.875992*a.y+.041556*a.z)/c,(.055648*a.x-.204043*a.y+1.057311*a.z)/c)},b.xyz.hls=a(b.rgb.hls,b.xyz.rgb),b.xyz.hsv=a(b.rgb.hsv,b.xyz.rgb),b.xyz.srgb=function(a){var c=h.y;return b.srgb.create(f((3.240479*a.x-1.53715*a.y-.498535*a.z)/c,2.4),f((-0.969256*a.x+1.875992*a.y+.041556*a.z)/c,2.4),f((.055648*a.x-.204043*a.y+1.057311*a.z)/c,2.4))},b.luv.hcl=function(a){var c=Math.sqrt(a.u*a.u+a.v*a.v),d=Math.atan2(a.v,a.u);while(d>Math.PI*2)d-=Math.PI*2;while(d<0)d+=Math.PI*2;return b.hcl.create(d,c,a.l)},b.rgb.hcl=a(b.luv.hcl,b.rgb.luv),b.srgb.hcl=a(b.luv.hcl,b.srgb.luv),b.xyz.hcl=a(b.rgb.hcl,b.xyz.rgb),b.luv.xyz=function(a){var c=0,d=0,e=0;if(!(a.l<=0&&a.u==0&&a.v==0)){d=h.y*(a.l>7.999592?Math.pow((a.l+16)/116,3):a.l/903.3);var f=a.u/(13*a.l)+i[0],g=a.v/(13*a.l)+i[1];c=9*d*f/(4*g),e=-c/3-5*d+3*d/g}return b.xyz.create(c,d,e)},b.luv.rgb=a(b.xyz.rgb,b.luv.xyz),b.luv.hls=a(b.rgb.hls,b.luv.rgb),b.luv.hsv=a(b.rgb.hsv,b.luv.rgb),b.luv.srgb=a(b.rgb.srgb,b.luv.rgb),b.hcl.luv=function(a){return b.luv.create(a.l,a.c*Math.cos(a.h),a.c*Math.sin(a.h))},b.hcl.rgb=a(b.luv.rgb,b.hcl.luv),b.hcl.srgb=a(b.luv.srgb,b.hcl.luv),b.hcl.hsv=a(b.luv.hsv,b.hcl.luv),b.hcl.hls=a(b.luv.hls,b.hcl.luv),b.hcl.xyz=a(b.luv.xyz,b.hcl.luv),b.hls.rgb=function(a){var c,d;a.l<=.5?d=a.l*(1+a.s):d=a.l+a.s-a.l*a.s,c=2*a.l-d;return a.s===0?b.rgb.create(a.l,a.l,a.l):b.rgb.create(e(c,d,(a.h+Math.PI*2/3)/(Math.PI*2)),e(c,d,a.h/(Math.PI*2)),e(c,d,(a.h-Math.PI*2/3)/(Math.PI*2)))},b.hls.srgb=a(b.rgb.srgb,b.hls.rgb),b.hls.hsv=a(b.rgb.hsv,b.hls.rgb),b.hls.xyz=a(b.rgb.xyz,b.hls.rgb),b.hls.luv=a(b.rgb.luv,b.hls.rgb),b.hls.hcl=a(b.rgb.hcl,b.hls.rgb),b.hsv.rgb=function(a){if(isNaN(a.h))return b.rgb.create(a.v,a.v,a.v);var c=a.v,d=a.h/Math.PI*3,e=Math.floor(d),f=d-e;e&1||(f=1-f);var g=c*(1-a.s),h=c*(1-a.s*f);switch(e){case 6:case 0:return b.rgb.create(c,h,g);case 1:return b.rgb.create(h,c,g);case 2:return b.rgb.create(g,c,h);case 3:return b.rgb.create(g,h,c);case 4:return b.rgb.create(h,g,c);case 5:return b.rgb.create(c,g,h);default:throw"internal error"}},b.hsv.srgb=a(b.rgb.srgb,b.hsv.rgb),b.hsv.hls=a(b.rgb.hls,b.hsv.rgb),b.hsv.xyz=a(b.rgb.xyz,b.hsv.rgb),b.hsv.luv=a(b.rgb.luv,b.hsv.rgb),b.hsv.hcl=a(b.rgb.hcl,b.hsv.rgb);var h=b.xyz.create(95.047,100,108.883),i=d(h);Shade.Colors.jstable=b}(),function(){function j(a){return Shade.max(a.r,Shade.max(a.g,a.b))}function i(a){return Shade.min(a.r,Shade.min(a.g,a.b))}function h(a,c){return b(a.gt(.03928),Shade.pow(a.add(.055).div(1.055),c),a.div(12.92))}function g(a,c){return b(a.gt(.00304),Shade.mul(1.055,Shade.pow(a,Shade.div(1,c))).sub(.055),a.mul(12.92))}function f(a,c,d){d=b(d.gt(1),d.sub(1),d),d=b(d.lt(0),d.add(1),d);return b(d.lt(1/6),a.add(c.sub(a).mul(d.mul(6))),b(d.lt(.5),c,b(d.lt(2/3),a.add(c.sub(a).mul(Shade.make(2/3).sub(d).mul(6))),a)))}function e(a){var b,c,d;b=a.x.add(a.y).add(a.z),c=a.x.div(b),d=a.y.div(b);return Shade.vec(c.mul(2).div(d.mul(6).sub(c).add(1.5)),d.mul(4.5).div(d.mul(6).sub(c).add(1.5)))}function a(a,b){if(_.isUndefined(b)||_.isUndefined(a))throw"Undefined!";return function(c){return a(b(c))}}var b=Shade.selection,c={},d=["rgb","srgb","luv","hcl","hls","hsv","xyz"];_.each(d,function(a){c[a]={},c[a][a]=function(a){return a},c[a].create=function(){var b;if(arguments.length===1){b=arguments[0];if(!b.type.equals(Shade.Types.vec3))throw"create with 1 parameter requires a vec3"}else{if(arguments.length!==3)throw"create requires either 1 vec3 or 3 floats";b=Shade.vec(arguments[0],arguments[1],arguments[2]);if(!b.type.equals(Shade.Types.vec3))throw"create with 3 parameter requires 3 floats"}var e=a.length,f=a[e-3],g=a[e-2],h=a[e-1],i={space:a,vec:b,values:function(){return[this[f].constant_value(),this[g].constant_value(),this[h].constant_value()]},as_shade:function(a){_.isUndefined(a)&&(a=Shade.make(1));var b=this.rgb().vec;return Shade.vec(this.rgb().vec,a)}};i[f]=b.swizzle("r"),i[g]=b.swizzle("g"),i[h]=b.swizzle("b"),_.each(d,function(b){i[b]=function(){return c[a][b](i)}});return i}}),c.rgb.hsv=function(a){var d=i(a),e=j(a),f=b(a.r.eq(d),a.g.sub(a.b),b(a.g.eq(d),a.b.sub(a.r),a.r.sub(a.g))),g=b(a.r.eq(d),3,b(a.g.eq(d),5,1));return c.hsv.create(b(e.eq(d),Shade.vec(0,0,e),Shade.vec(Shade.mul(Math.PI/3,g.sub(f.div(e.sub(d)))),e.sub(d).div(e),e)))},c.rgb.hls=function(a){var d=i(a),e=j(a),f=e.add(d).div(2),g,h,k=e.ne(d);g=b(k,b(f.lt(.5),e.sub(d).div(e.add(d)),e.sub(d).div(Shade.sub(2,e).sub(d))),0),h=b(k,b(a.r.eq(e),a.g.sub(a.b).div(e.sub(d)),b(a.g.eq(e),Shade.add(2,a.b.sub(a.r).div(e.sub(d))),Shade.add(4,a.r.sub(a.g).div(e.sub(d))))),0),h=h.mul(Math.PI/3),h=b(h.lt(0),h.add(Math.PI*2),b(h.gt(Math.PI*2),h.sub(Math.PI*2),h));return c.hls.create(h,f,g)},c.rgb.xyz=function(a){var b=k.y;return c.xyz.create(b.mul(a.r.mul(.412453).add(a.g.mul(.35758)).add(a.b.mul(.180423))),b.mul(a.r.mul(.212671).add(a.g.mul(.71516)).add(a.b.mul(.072169))),b.mul(a.r.mul(.019334).add(a.g.mul(.119193)).add(a.b.mul(.950227))))},c.rgb.srgb=function(a){return c.srgb.create(g(a.r,2.4),g(a.g,2.4),g(a.b,2.4))},c.srgb.xyz=function(a){var b=k.y,d=h(a.r,2.4),e=h(a.g,2.4),f=h(a.b,2.4);return c.xyz.create(b.mul(d.mul(.412453).add(e.mul(.35758)).add(f.mul(.180423))),b.mul(d.mul(.212671).add(e.mul(.71516)).add(f.mul(.072169))),b.mul(d.mul(.019334).add(e.mul(.119193)).add(f.mul(.950227))))},c.srgb.rgb=function(a){var b=c.rgb.create(h(a.r,2.4),h(a.g,2.4),h(a.b,2.4));return b},c.srgb.hls=a(c.rgb.hls,c.srgb.rgb),c.srgb.hsv=a(c.rgb.hsv,c.srgb.rgb),c.xyz.luv=function(a){var d,f=e(a);d=a.y.div(k.y);var g=b(d.gt(.008856),Shade.mul(116,Shade.pow(d,1/3)).sub(16),Shade.mul(903.3,d));return c.luv.create(Shade.vec(g,g.mul(f.sub(l)).mul(13)))},c.rgb.luv=a(c.xyz.luv,c.rgb.xyz),c.srgb.luv=a(c.rgb.luv,c.srgb.rgb),c.xyz.rgb=function(a){var b=k.y;return c.rgb.create(a.x.mul(3.240479).sub(a.y.mul(1.53715)).sub(a.z.mul(.498535)).div(b),a.x.mul(-0.969256).add(a.y.mul(1.875992)).add(a.z.mul(.041556)).div(b),a.x.mul(.055648).sub(a.y.mul(.204043)).add(a.z.mul(1.057311)).div(b))},c.xyz.hls=a(c.rgb.hls,c.xyz.rgb),c.xyz.hsv=a(c.rgb.hsv,c.xyz.rgb),c.xyz.srgb=function(a){var b=k.y;return c.srgb.create(g(a.x.mul(3.240479).sub(a.y.mul(1.53715)).sub(a.z.mul(.498535)).div(b),2.4),g(a.x.mul(-0.969256).add(a.y.mul(1.875992)).add(a.z.mul(.041556)).div(b),2.4),g(a.x.mul(.055648).sub(a.y.mul(.204043)).add(a.z.mul(1.057311)).div(b),2.4))},c.luv.hcl=function(a){var d=Shade.length(a.vec.swizzle("gb")),e=Shade.atan(a.v,a.u);e=b(e.gt(Math.PI*2),e.sub(Math.PI*2),b(e.lt(0),e.add(Math.PI*2),e));while(e>Math.PI*2)e-=Math.PI*2;while(e<0)e+=Math.PI*2;return c.hcl.create(e,d,a.l)},c.rgb.hcl=a(c.luv.hcl,c.rgb.luv),c.srgb.hcl=a(c.luv.hcl,c.srgb.luv),c.xyz.hcl=a(c.rgb.hcl,c.xyz.rgb),c.luv.xyz=function(a){var d=a.vec.swizzle("gb").div(a.l.mul(13)).add(l),e=d.swizzle("r"),f=d.swizzle("g"),g=k.y.mul(b(a.l.gt(7.999592),Shade.pow(a.l.add(16).div(116),3),a.l.div(903.3))),h=g.mul(9).mul(e).div(f.mul(4)),i=h.div(-3).sub(g.mul(5)).add(g.mul(3).div(f));return c.xyz.create(b(a.l.le(0).and(a.u.eq(0).and(a.v.eq(0))),Shade.vec(0,0,0),Shade.vec(h,g,i)))},c.luv.rgb=a(c.xyz.rgb,c.luv.xyz),c.luv.hls=a(c.rgb.hls,c.luv.rgb),c.luv.hsv=a(c.rgb.hsv,c.luv.rgb),c.luv.srgb=a(c.rgb.srgb,c.luv.rgb),c.hcl.luv=function(a){return c.luv.create(a.l,a.c.mul(a.h.cos()),a.c.mul(a.h.sin()))},c.hcl.rgb=a(c.luv.rgb,c.hcl.luv),c.hcl.srgb=a(c.luv.srgb,c.hcl.luv),c.hcl.hsv=a(c.luv.hsv,c.hcl.luv),c.hcl.hls=a(c.luv.hls,c.hcl.luv),c.hcl.xyz=a(c.luv.xyz,c.hcl.luv),c.hls.rgb=function(a){var d=b(a.l.le(.5),a.l.mul(a.s.add(1)),a.l.add(a.s).sub(a.l.mul(a.s))),e=a.l.mul(2).sub(d);return c.rgb.create(b(a.s.eq(0),Shade.vec(a.vec.swizzle("ggg")),Shade.vec(f(e,d,a.h.add(Math.PI*2/3).div(Math.PI*2)),f(e,d,a.h.div(Math.PI*2)),f(e,d,a.h.sub(Math.PI*2/3).div(Math.PI*2)))))},c.hls.srgb=a(c.rgb.srgb,c.hls.rgb),c.hls.hsv=a(c.rgb.hsv,c.hls.rgb),c.hls.xyz=a(c.rgb.xyz,c.hls.rgb),c.hls.luv=a(c.rgb.luv,c.hls.rgb),c.hls.hcl=a(c.rgb.hcl,c.hls.rgb),c.hsv.rgb=function(a){var d=a.v,e=a.h.div(Math.PI).mul(3),f=e.floor(),g=e.sub(f);g=b(f.div(2).floor().eq(f.div(2)),Shade.sub(1,g),g);var h=d.mul(Shade.sub(1,a.s)),i=d.mul(Shade.sub(1,a.s.mul(g)));return c.rgb.create(b(f.eq(0),Shade.vec(d,i,h),b(f.eq(1),Shade.vec(i,d,h),b(f.eq(2),Shade.vec(h,d,i),b(f.eq(3),Shade.vec(h,i,d),b(f.eq(4),Shade.vec(i,h,d),b(f.eq(5),Shade.vec(d,h,i),Shade.vec(d,i,h))))))))},c.hsv.srgb=a(c.rgb.srgb,c.hsv.rgb),c.hsv.hls=a(c.rgb.hls,c.hsv.rgb),c.hsv.xyz=a(c.rgb.xyz,c.hsv.rgb),c.hsv.luv=a(c.rgb.luv,c.hsv.rgb),c.hsv.hcl=a(c.rgb.hcl,c.hsv.rgb);var k=c.xyz.create(95.047,100,108.883),l=e(k);Shade.Colors.shadetable=c}(),Facet.Marks={},Facet.Marks.dots=function(a){a=_.defaults(a,{fill_color:Shade.vec(0,0,0,1),stroke_color:Shade.vec(0,0,0,1),point_diameter:5,stroke_width:2,mode:Facet.DrawingMode.over_with_depth,alpha:!0,plain:!1});if(!a.position)throw"missing required parameter 'position'";if(!a.elements)throw"missing required parameter 'elements'";var b=Shade,c=Shade.make(a.fill_color),d=Shade.make(a.stroke_color),e=Shade.make(a.point_diameter),f=Shade.make(a.stroke_width).add(1),g=Shade.make(a.alpha),h={type:"points",vertex:a.position,elements:a.elements},i=Facet.model(h),j=b.pointCoord().sub(b.vec(.5,.5)).length().mul(e),k=e.div(2),l=k.sub(j),m=i.vertex,n=b.mix(c,d,b.clamp(f.sub(l),0,1)),o=c,p=b.selection(g,n.mul(b.vec(1,1,1,b.clamp(l,0,1))),n).discard_if
(j.gt(k)),q=Facet.bake(i,{position:m,point_size:e,color:Shade.selection(a.plain,o,p),mode:a.mode});q.gl_Position=m;return q},Facet.Marks.scatterplot=function(a){function b(a){return a.mul(2).sub(1)}a=_.defaults(a,{x_scale:function(a){return a},y_scale:function(a){return a},xy_scale:function(a){return a}});var c=Shade,d=a.x_scale,e=a.y_scale,f,g;a.x?f=c.vec(b(a.x_scale(a.x)),b(a.y_scale(a.y))):a.xy&&(f=a.xy_scale(a.xy).mul(2).sub(c.vec(1,1))),a.model?g=a.model.elements:a.elements&&(g=a.elements);return Facet.Marks.dots({position:c.vec(f,0,1),elements:g,fill_color:a.fill_color,stroke_color:a.stroke_color,point_diameter:a.point_diameter,stroke_width:a.stroke_width,mode:a.mode,alpha:a.alpha,plain:a.plain})},Facet.Marks.globe=function(a){a=_.defaults(a||{},{longitude_center:-98,latitude_center:38,zoom:3});var b=Facet._globals.ctx,c=!1,d=!1,e,f=[0,0],g,h,i,j,k=spherical_mercator_patch(40),l=Shade.uniform("mat4"),m=Facet.texture({width:2048,height:2048,TEXTURE_MAG_FILTER:b.LINEAR,TEXTURE_MIN_FILTER:b.LINEAR});g=Shade.uniform("float"),h=Shade.uniform("float"),i=Shade.uniform("float"),j=Shade.uniform("float");var n=Shade.vec(g,i),o=Shade.vec(h,j),p=Shade.uniform("sampler2D",m),q=Facet.bake(k,{gl_Position:a.view_proj.mul(l).mul(k.vertex(n,o)),gl_FragColor:Shade.texture2D(p,k.transformed_uv(n,o))}),r=function(){b.display()};for(var s=0;s<8;++s)for(var t=0;t<8;++t)Facet.load_image_into_texture({texture:m,src:"http://tile.openstreetmap.org/3/"+s+"/"+t+".png",crossOrigin:"anonymous",x_offset:(s+4)%8*256,y_offset:2048-(t+1)*256,onload:r});return{longitude_center:a.longitude_center,latitude_center:a.latitude_center,zoom:a.zoom,model_matrix:l,mousedown:function(a){e=[a.offsetX,a.offsetY],f=[0,0]},mousemove:function(a){a.which&1&&!a.shiftKey&&(d=!0,this.longitude_center-=(a.offsetX-e[0])/(3.3*this.zoom),this.latitude_center+=(a.offsetY-e[1])/(4.4*this.zoom),this.latitude_center=Math.max(Math.min(80,this.latitude_center),-80)),a.which&1&&a.shiftKey&&(c=!0,this.zoom*=1+(a.offsetY-e[1])/240),e=[a.offsetX,a.offsetY],b.display()},mouseup:function(a){var g=this;if(d){f[0]=-(a.offsetX-e[0])/(3.3*g.zoom),f[1]=(a.offsetY-e[1])/(4.4*g.zoom),e=[a.offsetX,a.offsetY];var h=function(){b.display(),g.longitude_center+=f[0],g.latitude_center+=f[1],g.latitude_center=Math.max(Math.min(80,g.latitude_center),-80),f[0]*=.95,f[1]*=.95,Math.max(Math.abs(f[0]),Math.abs(f[1]))>.01&&window.requestAnimFrame(h,g.canvas)};h()}d=c=!1},draw:function(){while(this.longitude_center<0)this.longitude_center+=360;while(this.longitude_center>360)this.longitude_center-=360;var a=Facet.rotation(this.latitude_center*(Math.PI/180),[1,0,0]),c=Facet.rotation(this.longitude_center*(Math.PI/180),[0,-1,0]);b.enable(b.DEPTH_TEST),b.depthFunc(b.LESS),this.model_matrix.set(mat4.product(a,c));var d=latlong_to_mercator(this.latitude_center,this.longitude_center),e=Math.PI*Math.min(1,1/(this.zoom*Math.cos(this.latitude_center/180*Math.PI))),f=d[0]-e,k=d[0]+e;while(f>Math.PI*2)f-=Math.PI*2,k-=Math.PI*2;i.set(d[1]-e),j.set(d[1]+e),f<0?(g.set(f+Math.PI*2),h.set(Math.PI*2),q.draw(),g.set(0),h.set(k),q.draw()):k>Math.PI*2?(g.set(f),h.set(Math.PI*2),q.draw(),g.set(0),h.set(k-Math.PI*2),q.draw()):(g.set(f),h.set(k),q.draw())}}},Facet.Models={},Facet.Models.flat_cube=function(){return Facet.model({type:"triangles",elements:[0,1,2,0,2,3,4,5,6,4,6,7,8,9,10,8,10,11,12,13,14,12,14,15,16,17,18,16,18,19,20,21,22,20,22,23],vertex:[[1,1,-1,-1,1,-1,-1,1,1,1,1,1,1,-1,1,-1,-1,1,-1,-1,-1,1,-1,-1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,-1,-1,-1,-1,-1,-1,1,-1,1,1,-1,-1,1,1,-1,1,-1,-1,-1,-1,-1,-1,1,1,1,-1,1,1,1,1,-1,1,1,-1,-1],3],normal:[[0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,-1,0,0,-1,0,0,-1,0,0,-1,0,0,1,0,0,1,0,0,1,0,0,1,0,0],3],tex_coord:[[0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1],2]})},Facet.Models.mesh=function(a,b){var c=[],d=[];_.isUndefined(b)&&(b=a);if(b<=0)throw"v_secs must be positive";if(a<=0)throw"u_secs must be positive";b=Math.floor(b),a=Math.floor(a);var e,f;for(e=0;e<=b;++e){var g=e/b;for(f=0;f<=a;++f){var h=f/a;c.push(h,g)}}for(e=0;e<b;++e){for(f=0;f<=a;++f)d.push(e*(a+1)+f,(e+1)*(a+1)+f);e<b-1&&d.push((e+1)*(a+1)+a,(e+2)*(a+1),(e+2)*(a+1))}var i=Shade.make(Facet.attribute_buffer(c,2));return Facet.model({type:"triangle_strip",tex_coord:i,vertex:i.mul(2).sub(1),elements:Facet.element_buffer(d)})},Facet.Models.sphere=function(a,b){var c=[],d=[];_.isUndefined(b)&&(b=a);if(a<=0)throw"lat_secs must be positive";if(b<=0)throw"long_secs must be positive";a=Math.floor(a),b=Math.floor(b);var e,f,g,h;for(e=0;e<=a;++e){g=e/a;for(f=0;f<b;++f)h=f/b,c.push(h,g)}for(e=0;e<a;++e)for(f=0;f<b;++f)d.push(e*b+f,e*b+(f+1)%b,(e+1)*b+f,e*b+(f+1)%b,(e+1)*b+(f+1)%b,(e+1)*b+f);var i=Shade,j=Facet.attribute_buffer(c,2);g=i.sub(i.mul(Math.PI,i.swizzle(j,"r")),Math.PI/2),h=i.mul(2*Math.PI,i.swizzle(j,"g"));var k=i.cos(g);return Facet.model({type:"triangles",elements:Facet.element_buffer(d),vertex:i.vec(i.sin(h).mul(k),i.sin(g),i.cos(h).mul(k),1)})},Facet.Models.square=function(){var a=Shade.make(Facet.attribute_buffer([0,0,1,0,0,1,1,1],2));return Facet.model({type:"triangles",elements:Facet.element_buffer([0,1,2,1,3,2]),vertex:a,tex_coord:a})},Facet.Models.teapot=function(){return Facet.model({type:"triangles",elements
,989,971,1089,1089,1095,989,895,869,971,971,989,895,791,763,869,869,895,791,703,645,763,763,791,703,626,586,645,645,703,626,581,555,586,586,626,581,573,539,555,555,581,573,1425,1419,1763,1763,1761,1425,1229,1225,1419,1419,1425,1229,1100,1095,1225,1225,1229,1100,1005,989,1095,1095,1100,1005,906,895,989,989,1005,906,811,791,895,895,906,811,727,703,791,791,811,727,643,626,703,703,727,643,606,581,626,626,643,606,591,573,581,581,606,591,1429,1425,1761,1761,1757,1429,1233,1229,1425,1425,1429,1233,1106,1100,1229,1229,1233,1106,1011,1005,1100,1100,1106,1011,911,906,1005,1005,1011,911,818,811,906,906,911,818,737,727,811,811,818,737,650,643,727,727,737,650,617,606,643,643,650,617,600,591,606,606,617,600,404,396,375,375,387,404,438,429,396,396,404,438,490,485,429,429,438,490,542,535,485,485,490,542,669,660,535,535,542,669,845,838,660,660,669,845,993,979,838,838,845,993,1162,1157,979,979,993,1162,1329,1324,1157,1157,1162,1329,1925,1785,1324,1324,1329,1925,416,404,387,387,408,416,446,438,404,404,416,446,500,490,438,438,446,500,559,542,490,490,500,559,695,669,542,542,559,695,855,845,669,669,695,855,1003,993,845,845,855,1003,1168,1162,993,993,1003,1168,1339,1329,1162,1162,1168,1339,1924,1925,1329,1329,1339,1924,444,416,408,408,436,444,467,446,416,416,444,467,516,500,446,446,467,516,583,559,500,500,516,583,731,695,559,559,583,731,883,855,695,695,731,883,1025,1003,855,855,883,1025,1174,1168,1003,1003,1025,1174,1357,1339,1168,1168,1174,1357,1907,1924,1339,1339,1357,1907,459,444,436,436,452,459,502,467,444,444,459,502,532,516,467,467,502,532,624,583,516,516,532,624,769,731,583,583,624,769,905,883,731,731,769,905,1040,1025,883,883,905,1040,1188,1174,1025,1025,1040,1188,1371,1357,1174,1174,1188,1371,1705,1907,1357,1357,1371,1705,504,459,452,452,498,504,520,502,459,459,504,520,569,532,502,502,520,569,665,624,532,532,569,665,797,769,624,624,665,797,929,905,769,769,797,929,1066,1040,905,905,929,1066,1198,1188,1040,1040,1066,1198,1383,1371,1188,1188,1198,1383,1704,1705,1371,1371,1383,1704,522,504,498,498,518,522,549,520,504,504,522,549,610,569,520,520,549,610,723,665,569,569,610,723,833,797,665,665,723,833,947,929,797,797,833,947,1077,1066,929,929,947,1077,1206,1198,1066,1066,1077,1206,1394,1383,1198,1198,1206,1394,1772,1704,1383,1383,1394,1772,554,522,518,518,540,554,587,549,522,522,554,587,644,610,549,549,587,644,762,723,610,610,644,762,868,833,723,723,762,868,970,947,833,833,868,970,1088,1077,947,947,970,1088,1216,1206,1077,1077,1088,1216,1405,1394,1206,1206,1216,1405,1691,1772,1394,1394,1405,1691,580,554,540,540,572,580,625,587,554,554,580,625,702,644,587,587,625,702,790,762,644,644,702,790,894,868,762,762,790,894,988,970,868,868,894,988,1094,1088,970,970,988,1094,1226,1216,1088,1088,1094,1226,1420,1405,1216,1216,1226,1420,1765,1691,1405,1405,1420,1765,605,580,572,572,590,605,642,625,580,580,605,642,726,702,625,625,642,726,810,790,702,702,726,810,907,894,790,790,810,907,1004,988,894,894,907,1004,1099,1094,988,988,1004,1099,1230,1226,1094,1094,1099,1230,1426,1420,1226,1226,1230,1426,1896,1765,1420,1420,1426,1896,614,605,590,590,597,614,652,642,605,605,614,652,734,726,642,642,652,734,819,810,726,726,734,819,912,907,810,810,819,912,1012,1004,907,907,912,1012,1102,1099,1004,1004,1012,1102,1235,1230,1099,1099,1102,1235,1431,1426,1230,1230,1235,1431,1759,1896,1426,1426,1431,1759,2293,2298,1785,1785,1782,2293,2460,2465,2298,2298,2293,2460,2629,2640,2465,2465,2460,2629,2777,2784,2640,2640,2629,2777,2953,2962,2784,2784,2777,2953,3060,3067,2962,2962,2953,3060,3134,3139,3067,3067,3060,3134,3166,3175,3139,3139,3134,3166,3194,3202,3175,3175,3166,3194,3207,3212,3202,3202,3194,3207,2283,2293,1782,1782,1780,2283,2454,2460,2293,2293,2283,2454,2619,2629,2460,2460,2454,2619,2767,2777,2629,2629,2619,2767,2927,2953,2777,2777,2767,2927,3050,3060,2953,2953,2927,3050,3124,3134,3060,3060,3050,3124,3158,3166,3134,3134,3124,3158,3180,3194,3166,3166,3158,3180,3190,3207,3194,3194,3180,3190,2265,2283,1780,1780,1778,2265,2448,2454,2283,2283,2265,2448,2597,2619,2454,2454,2448,2597,2739,2767,2619,2619,2597,2739,2891,2927,2767,2767,2739,2891,3032,3050,2927,2927,2891,3032,3086,3124,3050,3050,3032,3086,3144,3158,3124,3124,3086,3144,3160,3180,3158,3158,3144,3160,3168,3190,3180,3180,3160,3168,2251,2265,1778,1778,1776,2251,2434,2448,2265,2265,2251,2434,2580,2597,2448,2448,2434,2580,2717,2739,2597,2597,2580,2717,2853,2891,2739,2739,2717,2853,2998,3032,2891,2891,2853,2998,3070,3086,3032,3032,2998,3070,3122,3144,3086,3086,3070,3122,3146,3160,3144,3144,3122,3146,3152,3168,3160,3160,3146,3152,2239,2251,1776,1776,1774,2239,2424,2434,2251,2251,2239,2424,2554,2580,2434,2434,2424,2554,2693,2717,2580,2580,2554,2693,2825,2853,2717,2717,2693,2825,2957,2998,2853,2853,2825,2957,3042,3070,2998,2998,2957,3042,3082,3122,3070,3070,3042,3082,3120,3146,3122,3122,3082,3120,3126,3152,3146,3146,3120,3126,2228,2239,1774,1774,1771,2228,2416,2424,2239,2239,2228,2416,2545,2554,2424,2424,2416,2545,2675,2693,2554,2554,2545,2675,2789,2825,2693,2693,2675,2789,2899,2957,2825,2825,2789,2899,3012,3042,2957,2957,2899,3012,3056,3082,3042,3042,3012,3056,3080,3120,3082,3082,3056,3080,3084,3126,3120,3120,3080,3084,2215,2228,1771,1771,1768,2215,2406,2416,2228,2228,2215,2406,2532,2545,2416,2416,2406,2532,2650,2675,2545,2545,2532,2650,2752,2789,2675,2675,2650,2752,2858,2899,2789,2789,2752,2858,2976,3012,2899,2899,2858,2976,3028,3056,3012,3012,2976,3028,3051,3080,3056,3056,3028,3051,3062,3084,3080,3080,3051,3062,2202,2215,1768,1768,1766,2202,2396,2406,2215,2215,2202,2396,2526,2532,2406,2406,2396,2526,2632,2650,2532,2532,2526,2632,2726,2752,2650,2650,2632,2726,2830,2858,2752,2752,2726,2830,2918,2976,2858,2858,2830,2918,2995,3028,2976,2976,2918,2995,3033,3051,3028,3028,2995,3033,3037,3062,3051,3051,3033,3037,2196,2202,1766,1766,1762,2196,2392,2396,2202,2202,2196,2392,2521,2526,2396,2396,2392,2521,2616,2632,2526,2526,2521,2616,2715,2726,2632,2632,2616,2715,2810,2830,2726,2726,2715,2810,2894,2918,2830,2830,2810,2894,2978,2995,2918,2918,2894,2978,3015,3033,2995,2995,2978,3015,3025,3037,3033,3033,3015,3025,2192,2196,1762,1762,1760,2192,2388,2392,2196,2196,2192,2388,2515,2521,2392,2392,2388,2515,2609,2616,2521,2521,2515,2609,2709,2715,2616,2616,2609,2709,2802,2810,2715,2715,2709,2802,2884,2894,2810,2810,2802,2884,2970,2978,2894,2894,2884,2970,3004,3015,2978,2978,2970,3004,3021,3025,3015,3015,3004,3021,460,544,543,543,455,460,462,550,544,544,460,462,464,556,550,550,462,464,468,566,556,556,464,468,470,574,566,566,468,470,472,576,574,574,470,472,474,588,576,576,472,474,476,592,588,588,474,476,478,594,592,592,476,478,480,598,594,594,478,480,388,460,455,455,391,388,385,462,460,460,388,385,378,464,462,462,385,378,372,468,464,464,378,372,370,470,468,468,372,370,368,472,470,470,370,368,365,474,472,472,368,365,363,476,474,474,365,363,361,478,476,476,363,361,360,480,478,478,361,360,334,388,391,391,336,334,332,385,388,388,334,332,330,378,385,385,332,330,328,372,378,378,330,328,327,370,372,372,328,327,324,368,370,370,327,324,322,365,368,368,324,322,320,363,365,365,322,320,318,361,363,363,320,318,315,360,361,361,318,315,297,334,336,336,301,297,289,332,334,334,297,289,287,330,332,332,289,287,285,328,330,330,287,285,280,327,328,328,285,280,274,324,327,327,280,274,264,322,324,324,274,264,258,320,322,322,264,258,254,318,320,320,258,254,248,315,318,318,254,248,268,297,301,301,270,268,260,289,297,297,268,260,250,287,289,289,260,250,237,285,287,287,250,237,229,280,285,285,237,229,217,274,280,280,229,217,207,264,274,274,217,207,195,258,264,264,207,195,185,254,258,258,195,185,180,248,254,254,185,180,227,268,270,270,233,227,221,260,268,268,227,221,211,250,260,260,221,211,199,237,250,250,211,199,176,229,237,237,199,176,159,217,229,229,176,159,133,207,217,217,159,133,111,195,207,207,133,111,101,185,195,195,111,101,95,180,185,185,101,95,197,227,233,233,204,197,181,221,227,227,197,181,167,211,221,221,181,167,145,199,211,211,167,145,117,176,199,199,145,117,91,159,176,176,117,91,73,133,159,159,91,73,62,111,133,133,73,62,52,101,111,111,62,52,49,95,101,101,52,49,166,197,204,204,169,166,153,181,197,197,166,153,125,167,181,181,153,125,99,145,167,167,125,99,82,117,145,145,99,82,60,91,117,117,82,60,45,73,91,91,60,45,31,62,73,73,45,31,24,52,62,62,31,24,20,49,52,52,24,20,142,166,169,169,149,142,123,153,166,166,142,123,103,125,153,153,123,103,83,99,125,125,103,83,64,82,99,99,83,64,43,60,82,82,64,43,29,45,60,60,43,29,16,31,45,45,29,16,8,24,31,31,16,8,4,20,24,24,8,4,131,142,149,149,139,131,115,123,142,142,131,115,93,103,123,123,115,93,75,83,103,103,93,75,54,64,83,83,75,54,39,43,64,64,54,39,21,29,43,43,39,21,10,16,29,29,21,10,1,8,16,16,10,1,0,4,8,8,1,0,479,595,598,598,480,479,477,593,595,595,479,477,475,589,593,593,477,475,473,577,589,589,475,473,471,575,577,577,473,471,469,567,575,575,471,469,465,557,567,567,469,465,463,551,557,557,465,463,461,545,551,551,463,461,455,543,545,545,461,455,362,479,480,480,359,362,364,477,479,479,362,364,366,475,477,477,364,366,367,473,475,475,366,367,369,471,473,473,367,369,371,469,471,471,369,371,379,465,469,469,371,379,384,463,465,465,379,384,389,461,463,463,384,389,390,455,461,461,389,390,319,362,359,359,315,319,321,364,362,362,319,321,323,366,364,364,321,323,325,367,366,366,323,325,326,369,367,367,325,326,329,371,369,369,326,329,331,379,371,371,329,331,333,384,379,379,331,333,335,389,384,384,333,335,336,390,389,389,335,336,255,319,315,315,249,255,259,321,319,319,255,259,265,323,321,321,259,265,275,325,323,323,265,275,281,326,325,325,275,281,286,329,326,326,281,286,288,331,329,329,286,288,290,333,331,331,288,290,298,335,333,333,290,298,302,336,335,335,298,302,186,255,249,249,180,186,196,259,255,255,186,196,208,265,259,259,196,208,218,275,265,265,208,218,230,281,275,275,218,230,238,286,281,281,230,238,251,288,286,286,238,251,261,290,288,288,251,261,269,298,290,290,261,269,271,302,298,298,269,271,102,186,180,180,96,102,112,196,186,186,102,112,134,208,196,196,112,134,160,218,208,208,134,160,177,230,218,218,160,177,200,238,230,230,177,200,212,251,238,238,200,212,222,261,251,251,212,222,228,269,261,261,222,228,234,271,269,269,228,234,53,102,96,96,49,53,63,112,102,102,53,63,74,134,112,112,63,74,92,160,134,134,74,92,118,177,160,160,92,118,146,200,177,177,118,146,168,212,200,200,146,168,182,222,212,212,168,182,198,228,222,222,182,198,204,234,228,228,198,204,23,53,49,49,20,23,32,63,53,53,23,32,46,74,63,63,32,46,61,92,74,74,46,61,81,118,92,92,61,81,100,146,118,118,81,100,126,168,146,146,100,126,154,182,168,168,126,154,165,198,182,182,154,165,170,204,198,198,165,170,9,23,20,20,5,9,17,32,23,23,9,17,30,46,32,32,17,30,44,61,46,46,30,44,65,81,61,61,44,65,84,100,81,81,65,84,104,126,100,100,84,104,124,154,126,126,104,124,143,165,154,154,124,143,150,170,165,165,143,150,2,9,5,5,0,2,11,17,9,9,2,11,22,30,17,17,11,22,40,44,30,30,22,40,55,65,44,44,40,55,76,84,65,65,55,76,94,104,84,84,76,94,116,124,104,104,94,116,132,143,124,124,116,132,139,150,143,143,132,139,137,131,139,139,144,137,121,115,131,131,137,121,97,93,115,115,121,97,79,75,93,93,97,79,59,54,75,75,79,59,41,39,54,54,59,41,27,21,39,39,41,27,12,10,21,21,27,12,6,1,10,10,12,6,3,0,1,1,6,3,151,137,144,144,157,151,135,121,137,137,151,135,107,97,121,121,135,107,88,79,97,97,107,88,69,59,79,79,88,69,51,41,59,59,69,51,37,27,41,41,51,37,25,12,27,27,37,25,18,6,12,12,25,18,14,3,6,6,18,14,172,151,157,157,175,172,161,135,151,151,172,161,141,107,135,135,161,141,110,88,107,107,141,110,90,69,88,88,110,90,72,51,69,69,90,72,57,37,51,51,72,57,47,25,37,37,57,47,36,18,25,25,47,36,34,14,18,18,36,34,193,172,175,175,201,193,183,161,172,172,193,183,173,141,161,161,183,173,155,110,141,141,173,155,127,90,110,110,155,127,105,72,90,90,127,105,85,57,72,72,105,85,77,47,57,57,85,77,67,36,47,47,77,67,66,34,36,36,67,66,220,193,201,201,224,220,215,183,193,193,220,215,205,173,183,183,215,205,191,155,173,173,205,191,179,127,155,155,191,179,163,105,127,127,179,163,147,85,105,105,163,147,129,77,85,85,147,129,120,67,77,77,129,120,114,66,67,67,120,114,243,220,224,224,246,243,239,215,220,220,243,239,235,205,215,215,239,235,232,191,205,205,235,232,226,179,191,191,232,226,214,163,179,179,226,214,209,147,163,163,214,209,202,129,147,147,209,202,190,120,129,129,202,190,187,114,120,120,190,187,283,243,246,246,284,283,278,239,243,243,283,278,276,235,239,239,278,276,272,232,235,235,276,272,266,226,232,232,272,266,262,214,226,226,266,262,257,209,214,214,262,257,252,202,209,209,257,252,244,190,202,202,252,244,241,187,190,190,244,241,314,283,284,284,317,314,311,278,283,283,314,311,310,276,278,278,311,310,308,272,276,276,310,308,306,266,272,272,308,306,304,262,266,266,306,304,300,257,262,262,304,300,296,252,257,257,300,296,294,244,252,252,296,294,292,241,244,244,294,292,340,314,317,317,338,340,342,311,314,314,340,342,344,310,311,311,342,344,346,308,310,310,344,346,348,306,308,308,346,348,350,304,306,306,348,350,352,300,304,304,350,352,354,296,300,300,352,354,356,294,296,296,354,356,358,292,294,294,356,358,377,340,338,338,375,377,383,342,340,340,377,383,393,344,342,342,383,393,402,346,344,344,393,402,405,348,346,346,402,405,414,350,348,348,405,414,418,352,350,350,414,418,422,354,352,352,418,422,424,356,354,354,422,424,426,358,356,356,424,426,7,2,0,0,3,7,13,11,2,2,7,13,28,22,11,11,13,28,42,40,22,22,28,42,58,55,40,40,42,58,80,76,55,55,58,80,98,94,76,76,80,98,122,116,94,94,98,122,138,132,116,116,122,138,144,139,132,132,138,144,19,7,3,3,15,19,26,13,7,7,19,26,38,28,13,13,26,38,50,42,28,28,38,50,70,58,42,42,50,70,87,80,58,58,70,87,108,98,80,80,87,108,136,122,98,98,108,136,152,138,122,122,136,152,158,144,138,138,152,158,35,19,15,15,33,35,48,26,19,19,35,48,56,38,26,26,48,56,71,50,38,38,56,71,89,70,50,50,71,89,109,87,70,70,89,109,140,108,87,87,109,140,162,136,108,108,140,162,171,152,136,136,162,171,175,158,152,152,171,175,68,35,33,33,66,68,78,48,35,35,68,78,86,56,48,48,78,86,106,71,56,56,86,106,128,89,71,71,106,128,156,109,89,89,128,156,174,140,109,109,156,174,184,162,140,140,174,184,194,171,162,162,184,194,201,175,171,171,194,201,119,68,66,66,113,119,130,78,68,68,119,130,148,86,78,78,130,148,164,106,86,86,148,164,178,128,106,106,164,178,192,156,128,128,178,192,206,174,156,156,192,206,216,184,174,174,206,216,219,194,184,184,216,219,223,201,194,194,219,223,189,119,113,113,188,189,203,130,119,119,189,203,210,148,130,130,203,210,213,164,148,148,210,213,225,178,164,164,213,225,231,192,178,178,225,231,236,206,192,192,231,236,240,216,206,206,236,240,242,219,216,216,240,242,247,223,219,219,242,247,245,189,188,188,241,245,253,203,189,189,245,253,256,210,203,203,253,256,263,213,210,210,256,263,267,225,213,213,263,267,273,231,225,225,267,273,277,236,231,231,273,277,279,240,236,236,277,279,282,242,240,240,279,282,284,247,242,242,282,284,293,245,241,241,291,293,295,253,245,245,293,295,299,256,253,253,295,299,303,263,256,256,299,303,305,267,263,263,303,305,307,273,267,267,305,307,309,277,273,273,307,309,312,279,277,277,309,312,313,282,279,279,312,313,316,284,282,282,313,316,355,293,291,291,357,355,353,295,293,293,355,353,351,299,295,295,353,351,349,303,299,299,351,349,347,305,303,303,349,347,345,307,305,305,347,345,343,309,307,307,345,343,341,312,309,309,343,341,339,313,312,312,341,339,337,316,313,313,339,337,423,355,357,357,425,423,421,353,355,355,423,421,417,351,353,353,421,417,413,349,351,351,417,413,406,347,349,349,413,406,401,345,347,347,406,401,392,343,345,345,401,392,382,341,343,343,392,382,376,339,341,341,382,376,374,337,339,339,376,374,3185,3112,3114,3114,3181,3185,3191,3109,3112,3112,3185,3191,3195,3108,3109,3109,3191,3195,3204,3105,3108,3108,3195,3204,3210,3103,3105,3105,3204,3210,3214,3101,3103,3103,3210,3214,3216,3100,3101,3101,3214,3216,3219,3097,3100,3100,3216,3219,3221,3096,3097,3097,3219,3221,3222,3094,3096,3096,3221,3222,3226,3185,3181,3181,3224,3226,3228,3191,3185,3185,3226,3228,3230,3195,3191,3191,3228,3230,3232,3204,3195,3195,3230,3232,3234,3210,3204,3204,3232,3234,3240,3214,3210,3210,3234,3240,3244,3216,3214,3214,3240,3244,3248,3219,3216,3216,3244,3248,3250,3221,3219,3219,3248,3250,3252,3222,3221,3221,3250,3252,3238,3226,3224,3224,3236,3238,3242,3228,3226,3226,3238,3242,3246,3230,3228,3228,3242,3246,3256,3232,3230,3230,3246,3256,3262,3234,3232,3232,3256,3262,3270,3240,3234,3234,3262,3270,3278,3244,3240,3240,3270,3278,3284,3248,3244,3244,3278,3284,3292,3250,3248,3248,3284,3292,3296,3252,3250,3250,3292,3296,3258,3238,3236,3236,3254,3258,3260,3242,3238,3238,3258,3260,3264,3246,3242,3242,3260,3264,3274,3256,3246,3246,3264,3274,3286,3262,3256,3256,3274,3286,3302,3270,3262,3262,3286,3302,3313,3278,3270,3270,3302,3313,3319,3284,3278,3278,3313,3319,3329,3292,3284,3284,3319,3329,3331,3296,3292,3292,3329,3331,3269,3258,3254,3254,3267,3269,3272,3260,3258,3258,3269,3272,3282,3264,3260,3260,3272,3282,3298,3274,3264,3264,3282,3298,3307,3286,3274,3274,3298,3307,3321,3302,3286,3286,3307,3321,3337,3313,3302,3302,3321,3337,3345,3319,3313,3313,3337,3345,3350,3329,3319,3319,3345,3350,3354,3331,3329,3329,3350,3354,3281,3269,3267,3267,3277,3281,3289,3272,3269,3269,3281,3289,3301,3282,3272,3272,3289,3301,3311,3298,3282,3282,3301,3311,3323,3307,3298,3298,3311,3323,3339,3321,3307,3307,3323,3339,3352,3337,3321,3321,3339,3352,3367,3345,3337,3337,3352,3367,3372,3350,3345,3345,3367,3372,3378,3354,3350,3350,3372,3378,3294,3281,3277,3277,3291,3294,3305,3289,3281,3281,3294,3305,3315,3301,3289,3289,3305,3315,3325,3311,3301,3301,3315,3325,3344,3323,3311,3311,3325,3344,3358,3339,3323,3323,3344,3358,3375,3352,3339,3339,3358,3375,3393,3367,3352,3352,3375,3393,3403,3372,3367,3367,3393,3403,3405,3378,3372,3372,3403,3405,3309,3294,3291,3291,3306,3309,3317,3305,3294,3294,3309,3317,3335,3315,3305,3305,3317,3335,3347,3325,3315,3315,3335,3347,3368,3344,3325,3325,3347,3368,3388,3358,3344,3344,3368,3388,3424,3375,3358,3358,3388,3424,3448,3393,3375,3375,3424,3448,3467,3403,3393,3393,3448,3467,3471,3405,3403,3403,3467,3471,3334,3309,3306,3306,3328,3334,3342,3317,3309,3309,3334,3342,3361,3335,3317,3317,3342,3361,3385,3347,3335,3335,3361,3385,3421,3368,3347,3347,3385,3421,3463,3388,3368,3368,3421,3463,3489,3424,3388,3388,3463,3489,3504,3448,3424,3424,3489,3504,3520,3467,3448,3448,3504,3520,3522,3471,3467,3467,3520,3522,3363,3334,3328,3328,3356,3363,3381,3342,3334,3334,3363,3381,3415,3361,3342,3342,3381,3415,3464,3385,3361,3361,3415,3464,3494,3421,3385,3385,3464,3494,3527,3463,3421,3421,3494,3527,3552,3489,3463,3463,3527,3552,3578,3504,3489,3489,3552,3578,3591,3520,3504,3504,3578,3591,3603,3522,3520,3520,3591,3603,3220,3095,3093,3093,3223,3220,3218,3098,3095,3095,3220,3218,3217,3099,3098,3098,3218,3217,3215,3102,3099,3099,3217,3215,3211,3104,3102,3102,3215,3211,3205,3106,3104,3104,3211,3205,3196,3107,3106,3106,3205,3196,3192,3110,3107,3107,3196,3192,3186,3111,3110,3110,3192,3186,3182,3113,3111,3111,3186,3182,3251,3220,3223,3223,3253,3251,3249,3218,3220,3220,3251,3249,3245,3217,3218,3218,3249,3245,3241,3215,3217,3217,3245,3241,3235,3211,3215,3215,3241,3235,3233,3205,3211,3211,3235,3233,3231,3196,3205,3205,3233,3231,3229,3192,3196,3196,3231,3229,3227,3186,3192,3192,3229,3227,3225,3182,3186,3186,3227,3225,3293,3251,3253,3253,3297,3293,3285,3249,3251,3251,3293,3285,3279,3245,3249,3249,3285,3279,3271,3241,3245,3245,3279,3271,3263,3235,3241,3241,3271,3263,3257,3233,3235,3235,3263,3257,3247,3231,3233,3233,3257,3247,3243,3229,3231,3231,3247,3243,3239,3227,3229,3229,3243,3239,3237,3225,3227,3227,3239,3237,3330,3293,3297,3297,3332,3330,3320,3285,3293,3293,3330,3320,3314,3279,3285,3285,3320,3314,3303,3271,3279,3279,3314,3303,3287,3263,3271,3271,3303,3287,3275,3257,3263,3263,3287,3275,3265,3247,3257,3257,3275,3265,3261,3243,3247,3247,3265,3261,3259,3239,3243,3243,3261,3259,3255,3237,3239,3239,3259,3255,3349,3330,3332,3332,3353,3349,3346,3320,3330,3330,3349,3346,3338,3314,3320,3320,3346,3338,3322,3303,3314,3314,3338,3322,3308,3287,3303,3303,3322,3308,3299,3275,3287,3287,3308,3299,3283,3265,3275,3275,3299,3283,3273,3261,3265,3265,3283,3273,3268,3259,3261,3261,3273,3268,3266,3255,3259,3259,3268,3266,3371,3349,3353,3353,3377,3371,3366,3346,3349,3349,3371,3366,3351,3338,3346,3346,3366,3351,3340,3322,3338,3338,3351,3340,3324,3308,3322,3322,3340,3324,3312,3299,3308,3308,3324,3312,3300,3283,3299,3299,3312,3300,3288,3273,3283,3283,3300,3288,3280,3268,3273,3273,3288,3280,3276,3266,3268,3268,3280,3276,3402,3371,3377,3377,3404,3402,3392,3366,3371,3371,3402,3392,3376,3351,3366,3366,3392,3376,3359,3340,3351,3351,3376,3359,3343,3324,3340,3340,3359,3343,3326,3312,3324,3324,3343,3326,3316,3300,3312,3312,3326,3316,3304,3288,3300,3300,3316,3304,3295,3280,3288,3288,3304,3295,3290,3276,3280,3280,3295,3290,3468,3402,3404,3404,3471,3468,3449,3392,3402,3402,3468,3449,3425,3376,3392,3392,3449,3425,3389,3359,3376,3376,3425,3389,3369,3343,3359,3359,3389,3369,3348,3326,3343,3343,3369,3348,3336,3316,3326,3326,3348,3336,3318,3304,3316,3316,3336,3318,3310,3295,3304,3304,3318,3310,3306,3290,3295,3295,3310,3306,3519,3468,3471,3471,3521,3519,3503,3449,3468,3468,3519,3503,3488,3425,3449,3449,3503,3488,3462,3389,3425,3425,3488,3462,3420,3369,3389,3389,3462,3420,3384,3348,3369,3369,3420,3384,3360,3336,3348,3348,3384,3360,3341,3318,3336,3336,3360,3341,3333,3310,3318,3318,3341,3333,3327,3306,3310,3310,3333,3327,3590,3519,3521,3521,3602,3590,3577,3503,3519,3519,3590,3577,3551,3488,3503,3503,3577,3551,3529,3462,3488,3488,3551,3529,3498,3420,3462,3462,3529,3498,3466,3384,3420,3420,3498,3466,3414,3360,3384,3384,3466,3414,3380,3341,3360,3360,3414,3380,3362,3333,3341,3341,3380,3362,3355,3327,3333,3333,3362,3355,3373,3364,3357,3357,3370,3373,3394,3382,3364,3364,3373,3394,3442,3416,3382,3382,3394,3442,3480,3465,3416,3416,3442,3480,3513,3495,3465,3465,3480,3513,3544,3528,3495,3495,3513,3544,3572,3550,3528,3528,3544,3572,3596,3576,3550,3550,3572,3596,3612,3589,3576,3576,3596,3612,3618,3602,3589,3589,3612,3618,3386,3373,3370,3370,3379,3386,3412,3394,3373,3373,3386,3412,3460,3442,3394,3394,3412,3460,3492,3480,3442,3442,3460,3492,3523,3513,3480,3480,3492,3523,3555,3544,3513,3513,3523,3555,3583,3572,3544,3544,3555,3583,3610,3596,3572,3572,3583,3610,3627,3612,3596,3596,3610,3627,3631,3618,3612,3612,3627,3631,3397,3386,3379,3379,3390,3397,3434,3412,3386,3386,3397,3434,3472,3460,3412,3412,3434,3472,3499,3492,3460,3460,3472,3499,3530,3523,3492,3492,3499,3530,3561,3555,3523,3523,3530,3561,3594,3583,3555,3555,3561,3594,3616,3610,3583,3583,3594,3616,3632,3627,3610,3610,3616,3632,3640,3631,3627,3627,3632,3640,3408,3397,3390,3390,3399,3408,3446,3434,3397,3397,3408,3446,3476,3472,3434,3434,3446,3476,3505,3499,3472,3472,3476,3505,3539,3530,3499,3499,3505,3539,3566,3561,3530,3530,3539,3566,3600,3594,3561,3561,3566,3600,3623,3616,3594,3594,3600,3623,3638,3632,3616,3616,3623,3638,3643,3640,3632,3632,3638,3643,3432,3408,3399,3399,3410,3432,3452,3446,3408,3408,3432,3452,3482,3476,3446,3446,3452,3482,3509,3505,3476,3476,3482,3509,3542,3539,3505,3505,3509,3542,3568,3566,3539,3539,3542,3568,3598,3600,3566,3566,3568,3598,3621,3623,3600,3600,3598,3621,3636,3638,3623,3623,3621,3636,3641,3643,3638,3638,3636,3641,3438,3432,3410,3410,3423,3438,3457,3452,3432,3432,3438,3457,3486,3482,3452,3452,3457,3486,3512,3509,3482,3482,3486,3512,3541,3542,3509,3509,3512,3541,3565,3568,3542,3542,3541,3565,3592,3598,3568,3568,3565,3592,3615,3621,3598,3598,3592,3615,3629,3636,3621,3621,3615,3629,3635,3641,3636,3636,3629,3635,3440,3438,3423,3423,3428,3440,3458,3457,3438,3438,3440,3458,3484,3486,3457,3457,3458,3484,3507,3512,3486,3486,3484,3507,3532,3541,3512,3512,3507,3532,3557,3565,3541,3541,3532,3557,3581,3592,3565,3565,3557,3581,3606,3615,3592,3592,3581,3606,3619,3629,3615,3615,3606,3619,3625,3635,3629,3629,3619,3625,3436,3440,3428,3428,3426,3436,3454,3458,3440,3440,3436,3454,3478,3484,3458,3458,3454,3478,3501,3507,3484,3484,3478,3501,3525,3532,3507,3507,3501,3525,3546,3557,3532,3532,3525,3546,3570,3581,3557,3557,3546,3570,3587,3606,3581,3581,3570,3587,3604,3619,3606,3606,3587,3604,3608,3625,3619,3619,3604,3608,3418,3436,3426,3426,3407,3418,3444,3454,3436,3436,3418,3444,3469,3478,3454,3454,3444,3469,3491,3501,3478,3478,3469,3491,3516,3525,3501,3501,3491,3516,3535,3546,3525,3525,3516,3535,3553,3570,3546,3546,3535,3553,3574,3587,3570,3570,3553,3574,3579,3604,3587,3587,3574,3579,3586,3608,3604,3604,3579,3586,3400,3418,3407,3407,3396,3400,3430,3444,3418,3418,3400,3430,3450,3469,3444,3444,3430,3450,3474,3491,3469,3469,3450,3474,3496,3516,3491,3491,3474,3496,3517,3535,3516,3516,3496,3517,3536,3553,3535,3535,3517,3536,3548,3574,3553,3553,3536,3548,3559,3579,3574,3574,3548,3559,3563,3586,3579,3579,3559,3563,3613,3590,3602,3602,3618,3613,3597,3577,3590,3590,3613,3597,3573,3551,3577,3577,3597,3573,3545,3529,3551,3551,3573,3545,3514,3498,3529,3529,3545,3514,3481,3466,3498,3498,3514,3481,3443,3417,3466,3466,3481,3443,3395,3383,3417,3417,3443,3395,3374,3365,3383,3383,3395,3374,3370,3357,3365,3365,3374,3370,3628,3613,3618,3618,3631,3628,3611,3597,3613,3613,3628,3611,3584,3573,3597,3597,3611,3584,3556,3545,3573,3573,3584,3556,3524,3514,3545,3545,3556,3524,3493,3481,3514,3514,3524,3493,3461,3443,3481,3481,3493,3461,3413,3395,3443,3443,3461,3413,3387,3374,3395,3395,3413,3387,3379,3370,3374,3374,3387,3379,3633,3628,3631,3631,3640,3633,3617,3611,3628,3628,3633,3617,3595,3584,3611,3611,3617,3595,3562,3556,3584,3584,3595,3562,3531,3524,3556,3556,3562,3531,3500,3493,3524,3524,3531,3500,3473,3461,3493,3493,3500,3473,3435,3413,3461,3461,3473,3435,3398,3387,3413,3413,3435,3398,3391,3379,3387,3387,3398,3391,3639,3633,3640,3640,3643,3639,3624,3617,3633,3633,3639,3624,3601,3595,3617,3617,3624,3601,3567,3562,3595,3595,3601,3567,3538,3531,3562,3562,3567,3538,3506,3500,3531,3531,3538,3506,3477,3473,3500,3500,3506,3477,3447,3435,3473,3473,3477,3447,3409,3398,3435,3435,3447,3409,3399,3391,3398,3398,3409,3399,3637,3639,3643,3643,3642,3637,3622,3624,3639,3639,3637,3622,3599,3601,3624,3624,3622,3599,3569,3567,3601,3601,3599,3569,3543,3538,3567,3567,3569,3543,3510,3506,3538,3538,3543,3510,3483,3477,3506,3506,3510,3483,3453,3447,3477,3477,3483,3453,3433,3409,3447,3447,3453,3433,3411,3399,3409,3409,3433,3411,3630,3637,3642,3642,3634,3630,3614,3622,3637,3637,3630,3614,3593,3599,3622,3622,3614,3593,3564,3569,3599,3599,3593,3564,3540,3543,3569,3569,3564,3540,3511,3510,3543,3543,3540,3511,3487,3483,3510,3510,3511,3487,3456,3453,3483,3483,3487,3456,3439,3433,3453,3453,3456,3439,3422,3411,3433,3433,3439,3422,3620,3630,3634,3634,3626,3620,3607,3614,3630,3630,3620,3607,3582,3593,3614,3614,3607,3582,3558,3564,3593,3593,3582,3558,3533,3540,3564,3564,3558,3533,3508,3511,3540,3540,3533,3508,3485,3487,3511,3511,3508,3485,3459,3456,3487,3487,3485,3459,3441,3439,3456,3456,3459,3441,3429,3422,3439,3439,3441,3429,3605,3620,3626,3626,3609,3605,3588,3607,3620,3620,3605,3588,3571,3582,3607,3607,3588,3571,3547,3558,3582,3582,3571,3547,3526,3533,3558,3558,3547,3526,3502,3508,3533,3533,3526,3502,3479,3485,3508,3508,3502,3479,3455,3459,3485,3485,3479,3455,3437,3441,3459,3459,3455,3437,3427,3429,3441,3441,3437,3427,3580,3605,3609,3609,3585,3580,3575,3588,3605,3605,3580,3575,3554,3571,3588,3588,3575,3554,3534,3547,3571,3571,3554,3534,3515,3526,3547,3547,3534,3515,3490,3502,3526,3526,3515,3490,3470,3479,3502,3502,3490,3470,3445,3455,3479,3479,3470,3445,3419,3437,3455,3455,3445,3419,3406,3427,3437,3437,3419,3406,3560,3580,3585,3585,3563,3560,3549,3575,3580,3580,3560,3549,3537,3554,3575,3575,3549,3537,3518,3534,3554,3554,3537,3518,3497,3515,3534,3534,3518,3497,3475,3490,3515,3515,3497,3475,3451,3470,3490,3490,3475,3451,3431,3445,3470,3470,3451,3431,3401,3419,3445,3445,3431,3401,3396,3406,3419,3419,3401,3396,1887,2109,2103,1887,2103,2095,1887,2095,2075,1887,2075,2047,1887,2047,2029,1887,2029,2005,1887,2005,1981,1887,1981,1959,1887,1959,1935,1887,1935,1731,2256,2103,2109,2109,2260,2256,2248,2095,2103,2103,2256,2248,2225,2075,2095,2095,2248,2225,2199,2047,2075,2075,2225,2199,2141,2029,2047,2047,2199,2141,2093,2005,2029,2029,2141,2093,2035,1981,2005,2005,2093,2035,1987,1959,1981,1981,2035,1987,1947,1935,1959,1959,1987,1947,1727,1731,1935,1935,1947,1727,2309,2256,2260,2260,2314,2309,2299,2248,2256,2256,2309,2299,2278,2225,2248,2248,2299,2278,2242,2199,2225,2225,2278,2242,2203,2141,2199,2199,2242,2203,2131,2093,2141,2141,2203,2131,2066,2035,2093,2093,2131,2066,1999,1987,2035,2035,2066,1999,1955,1947,1987,1987,1999,1955,1733,1727,1947,1947,1955,1733,2311,2309,2314,2314,2315,2311,2301,2299,2309,2309,2311,2301,2280,2278,2299,2299,2301,2280,2244,2242,2278,2278,2280,2244,2205,2203,2242,2242,2244,2205,2133,2131,2203,2203,2205,2133,2067,2066,2131,2131,2133,2067,2001,1999,2066,2066,2067,2001,1957,1955,1999,1999,2001,1957,1877,1733,1955,1955,1957,1877,2284,2311,2315,2315,2288,2284,2258,2301,2311,2311,2284,2258,2240,2280,2301,2301,2258,2240,2213,2244,2280,2280,2240,2213,2167,2205,2244,2244,2213,2167,2105,2133,2205,2205,2167,2105,2041,2067,2133,2133,2105,2041,1993,2001,2067,2067,2041,1993,1951,1957,2001,2001,1993,1951,1730,1877,1957,1957,1951,1730,2219,2284,2288,2288,2224,2219,2209,2258,2284,2284,2219,2209,2185,2240,2258,2258,2209,2185,2145,2213,2240,2240,2185,2145,2107,2167,2213,2213,2145,2107,2059,2105,2167,2167,2107,2059,2017,2041,2105,2105,2059,2017,1977,1993,2041,2041,2017,1977,1943,1951,1993,1993,1977,1943,1726,1730,1951,1951,1943,1726,2140,2219,2224,2224,2144,2140,2126,2209,2219,2219,2140,2126,2111,2185,2209,2209,2126,2111,2083,2145,2185,2185,2111,2083,2043,2107,2145,2145,2083,2043,2023,2059,2107,2107,2043,2023,1991,2017,2059,2059,2023,1991,1969,1977,2017,2017,1991,1969,1941,1943,1977,1977,1969,1941,1720,1726,1943,1943,1941,1720,2078,2140,2144,2144,2086,2078,2074,2126,2140,2140,2078,2074,2054,2111,2126,2126,2074,2054,2038,2083,2111,2111,2054,2038,2020,2043,2083,2083,2038,2020,1995,2023,2043,2043,2020,1995,1973,1991,2023,2023,1995,1973,1953,1969,1991,1991,1973,1953,1933,1941,1969,1969,1953,1933,1719,1720,1941,1941,1933,1719,2062,2078,2086,2086,2070,2062,2050,2074,2078,2078,2062,2050,2040,2054,2074,2074,2050,2040,2028,2038,2054,2054,2040,2028,2012,2020,2038,2038,2028,2012,1990,1995,2020,2020,2012,1990,1971,1973,1995,1995,1990,1971,1949,1953,1973,1973,1971,1949,1931,1933,1953,1953,1949,1931,1700,1719,1933,1933,1931,1700,2114,2062,2070,2070,2122,2114,2100,2050,2062,2062,2114,2100,2080,2040,2050,2050,2100,2080,2056,2028,2040,2040,2080,2056,2032,2012,2028,2028,2056,2032,2008,1990,2012,2012,2032,2008,1983,1971,1990,1990,2008,1983,1963,1949,1971,1971,1983,1963,1937,1931,1949,1949,1963,1937,1697,1700,1931,1931,1937,1697,1887,1885,1685,1887,1685,1661,1887,1661,1639,1887,1639,1615,1887,1615,1591,1887,1591,1573,1887,1573,1545,1887,1545,1525,1887,1525,1517,1887,1517,1511,1673,1685,1885,1885,1883,1673,1633,1661,1685,1685,1673,1633,1585,1639,1661,1661,1633,1585,1527,1615,1639,1639,1585,1527,1479,1591,1615,1615,1527,1479,1421,1573,1591,1591,1479,1421,1395,1545,1573,1573,1421,1395,1372,1525,1545,1545,1395,1372,1364,1517,1525,1525,1372,1364,1360,1511,1517,1517,1364,1360,1665,1673,1883,1883,1881,1665,1621,1633,1673,1673,1665,1621,1556,1585,1633,1633,1621,1556,1489,1527,1585,1585,1556,1489,1417,1479,1527,1527,1489,1417,1378,1421,1479,1479,1417,1378,1342,1395,1421,1421,1378,1342,1321,1372,1395,1395,1342,1321,1311,1364,1372,1372,1321,1311,1308,1360,1364,1364,1311,1308,1663,1665,1881,1881,1878,1663,1619,1621,1665,1665,1663,1619,1553,1556,1621,1621,1619,1553,1487,1489,1556,1556,1553,1487,1415,1417,1489,1489,1487,1415,1376,1378,1417,1417,1415,1376,1340,1342,1378,1378,1376,1340,1319,1321,1342,1342,1340,1319,1309,1311,1321,1321,1319,1309,1305,1308,1311,1311,1309,1305,1669,1663,1878,1878,1875,1669,1627,1619,1663,1663,1669,1627,1579,1553,1619,1619,1627,1579,1515,1487,1553,1553,1579,1515,1453,1415,1487,1487,1515,1453,1407,1376,1415,1415,1453,1407,1380,1340,1376,1376,1407,1380,1362,1319,1340,1340,1380,1362,1336,1309,1319,1319,1362,1336,1332,1305,1309,1309,1336,1332,1677,1669,1875,1875,1873,1677,1643,1627,1669,1669,1677,1643,1603,1579,1627,1627,1643,1603,1561,1515,1579,1579,1603,1561,1513,1453,1515,1515,1561,1513,1475,1407,1453,1453,1513,1475,1435,1380,1407,1407,1475,1435,1411,1362,1380,1380,1435,1411,1401,1336,1362,1362,1411,1401,1398,1332,1336,1336,1401,1398,1679,1677,1873,1873,1871,1679,1651,1643,1677,1677,1679,1651,1629,1603,1643,1643,1651,1629,1597,1561,1603,1603,1629,1597,1577,1513,1561,1561,1597,1577,1537,1475,1513,1513,1577,1537,1509,1435,1475,1475,1537,1509,1496,1411,1435,1435,1509,1496,1482,1401,1411,1411,1496,1482,1478,1398,1401,1401,1482,1478,1687,1679,1871,1871,1869,1687,1667,1651,1679,1679,1687,1667,1647,1629,1651,1651,1667,1647,1625,1597,1629,1629,1647,1625,1602,1577,1597,1597,1625,1602,1584,1537,1577,1577,1602,1584,1568,1509,1537,1537,1584,1568,1548,1496,1509,1509,1568,1548,1544,1482,1496,1496,1548,1544,1536,1478,1482,1482,1544,1536,1689,1687,1869,1869,1867,1689,1671,1667,1687,1687,1689,1671,1649,1647,1667,1667,1671,1649,1632,1625,1647,1647,1649,1632,1610,1602,1625,1625,1632,1610,1594,1584,1602,1602,1610,1594,1582,1568,1584,1584,1594,1582,1572,1548,1568,1568,1582,1572,1560,1544,1548,1548,1572,1560,1552,1536,1544,1544,1560,1552,1683,1689,1867,1867,1864,1683,1657,1671,1689,1689,1683,1657,1637,1649,1671,1671,1657,1637
,1614,1632,1649,1649,1637,1614,1590,1610,1632,1632,1614,1590,1566,1594,1610,1610,1590,1566,1542,1582,1594,1594,1566,1542,1522,1572,1582,1582,1542,1522,1508,1560,1572,1572,1522,1508,1500,1552,1560,1560,1508,1500,1887,1512,1518,1887,1518,1526,1887,1526,1546,1887,1546,1574,1887,1574,1592,1887,1592,1616,1887,1616,1640,1887,1640,1662,1887,1662,1686,1887,1686,1893,1365,1518,1512,1512,1361,1365,1373,1526,1518,1518,1365,1373,1396,1546,1526,1526,1373,1396,1422,1574,1546,1546,1396,1422,1480,1592,1574,1574,1422,1480,1528,1616,1592,1592,1480,1528,1586,1640,1616,1616,1528,1586,1634,1662,1640,1640,1586,1634,1674,1686,1662,1662,1634,1674,1894,1893,1686,1686,1674,1894,1312,1365,1361,1361,1307,1312,1322,1373,1365,1365,1312,1322,1343,1396,1373,1373,1322,1343,1379,1422,1396,1396,1343,1379,1418,1480,1422,1422,1379,1418,1490,1528,1480,1480,1418,1490,1555,1586,1528,1528,1490,1555,1622,1634,1586,1586,1555,1622,1666,1674,1634,1634,1622,1666,1889,1894,1674,1674,1666,1889,1310,1312,1307,1307,1306,1310,1320,1322,1312,1312,1310,1320,1341,1343,1322,1322,1320,1341,1377,1379,1343,1343,1341,1377,1416,1418,1379,1379,1377,1416,1488,1490,1418,1418,1416,1488,1554,1555,1490,1490,1488,1554,1620,1622,1555,1555,1554,1620,1664,1666,1622,1622,1620,1664,1880,1889,1666,1666,1664,1880,1337,1310,1306,1306,1333,1337,1363,1320,1310,1310,1337,1363,1381,1341,1320,1320,1363,1381,1408,1377,1341,1341,1381,1408,1454,1416,1377,1377,1408,1454,1516,1488,1416,1416,1454,1516,1580,1554,1488,1488,1516,1580,1628,1620,1554,1554,1580,1628,1670,1664,1620,1620,1628,1670,1892,1880,1664,1664,1670,1892,1402,1337,1333,1333,1397,1402,1412,1363,1337,1337,1402,1412,1436,1381,1363,1363,1412,1436,1476,1408,1381,1381,1436,1476,1514,1454,1408,1408,1476,1514,1562,1516,1454,1454,1514,1562,1604,1580,1516,1516,1562,1604,1644,1628,1580,1580,1604,1644,1678,1670,1628,1628,1644,1678,1899,1892,1670,1670,1678,1899,1481,1402,1397,1397,1477,1481,1495,1412,1402,1402,1481,1495,1510,1436,1412,1412,1495,1510,1538,1476,1436,1436,1510,1538,1578,1514,1476,1476,1538,1578,1598,1562,1514,1514,1578,1598,1630,1604,1562,1562,1598,1630,1652,1644,1604,1604,1630,1652,1680,1678,1644,1644,1652,1680,1901,1899,1678,1678,1680,1901,1543,1481,1477,1477,1535,1543,1547,1495,1481,1481,1543,1547,1567,1510,1495,1495,1547,1567,1583,1538,1510,1510,1567,1583,1601,1578,1538,1538,1583,1601,1626,1598,1578,1578,1601,1626,1648,1630,1598,1598,1626,1648,1668,1652,1630,1630,1648,1668,1688,1680,1652,1652,1668,1688,1920,1901,1680,1680,1688,1920,1559,1543,1535,1535,1551,1559,1571,1547,1543,1543,1559,1571,1581,1567,1547,1547,1571,1581,1593,1583,1567,1567,1581,1593,1609,1601,1583,1583,1593,1609,1631,1626,1601,1601,1609,1631,1650,1648,1626,1626,1631,1650,1672,1668,1648,1648,1650,1672,1690,1688,1668,1668,1672,1690,1921,1920,1688,1688,1690,1921,1507,1559,1551,1551,1499,1507,1521,1571,1559,1559,1507,1521,1541,1581,1571,1571,1521,1541,1565,1593,1581,1581,1541,1565,1589,1609,1593,1593,1565,1589,1613,1631,1609,1609,1589,1613,1638,1650,1631,1631,1613,1638,1658,1672,1650,1650,1638,1658,1684,1690,1672,1672,1658,1684,1927,1921,1690,1690,1684,1927,1887,1886,1936,1887,1936,1960,1887,1960,1982,1887,1982,2006,1887,2006,2030,1887,2030,2048,1887,2048,2076,1887,2076,2096,1887,2096,2104,1887,2104,2110,1948,1936,1886,1886,1884,1948,1988,1960,1936,1936,1948,1988,2036,1982,1960,1960,1988,2036,2094,2006,1982,1982,2036,2094,2142,2030,2006,2006,2094,2142,2200,2048,2030,2030,2142,2200,2226,2076,2048,2048,2200,2226,2249,2096,2076,2076,2226,2249,2257,2104,2096,2096,2249,2257,2261,2110,2104,2104,2257,2261,1956,1948,1884,1884,1882,1956,2e3,1988,1948,1948,1956,2e3,2065,2036,1988,1988,2e3,2065,2132,2094,2036,2036,2065,2132,2204,2142,2094,2094,2132,2204,2243,2200,2142,2142,2204,2243,2279,2226,2200,2200,2243,2279,2300,2249,2226,2226,2279,2300,2310,2257,2249,2249,2300,2310,2313,2261,2257,2257,2310,2313,1958,1956,1882,1882,1879,1958,2002,2e3,1956,1956,1958,2002,2068,2065,2e3,2ee3,1128,1165,1165,1039,1e3,974,1108,1128,1128,1e3,974,972,1098,1108,1108,974,972,1523,1575,1740,1740,1743,1523,1303,1366,1575,1575,1523,1303,1208,1269,1366,1366,1303,1208,1118,1195,1269,1269,1208,1118,1064,1119,1195,1195,1118,1064,982,1080,1119,1119,1064,982,940,1039,1080,1080,982,940,900,1e3,1039,1039,940,900,877,974,1e3,1e3,900,877,864,972,974,974,877,864,1492,1523,1743,1743,1746,1492,1279,1303,1523,1523,1492,1279,1180,1208,1303,1303,1279,1180,1085,1118,1208,1208,1180,1085,997,1064,1118,1118,1085,997,927,982,1064,1064,997,927,867,940,982,982,927,867,815,900,940,940,867,815,783,877,900,900,815,783,772,864,877,877,783,772,1465,1492,1746,1746,1748,1465,1265,1279,1492,1492,1465,1265,1148,1180,1279,1279,1265,1148,1056,1085,1180,1180,1148,1056,954,997,1085,1085,1056,954,887,927,997,997,954,887,805,867,927,927,887,805,754,815,867,867,805,754,717,783,815,815,754,717,696,772,783,783,717,696,1445,1465,1748,1748,1752,1445,1249,1265,1465,1465,1445,1249,1126,1148,1265,1265,1249,1126,1031,1056,1148,1148,1126,1031,935,954,1056,1056,1031,935,851,887,954,954,935,851,771,805,887,887,851,771,709,754,805,805,771,709,647,717,754,754,709,647,636,696,717,717,647,636,1439,1445,1752,1752,1754,1439,1241,1249,1445,1445,1439,1241,1114,1126,1249,1249,1241,1114,1019,1031,1126,1126,1114,1019,921,935,1031,1031,1019,921,829,851,935,935,921,829,749,771,851,851,829,749,671,709,771,771,749,671,630,647,709,709,671,630,612,636,647,647,630,612,1433,1439,1754,1754,1756,1433,1239,1241,1439,1439,1433,1239,1109,1114,1241,1241,1239,1109,1016,1019,1114,1114,1109,1016,914,921,1019,1019,1016,914,822,829,921,921,914,822,742,749,829,829,822,742,654,671,749,749,742,654,621,630,671,671,654,621,601,612,630,630,621,601,1427,1433,1756,1756,1759,1427,1231,1239,1433,1433,1427,1231,1104,1109,1239,1239,1231,1104,1009,1016,1109,1109,1104,1009,912,914,1016,1016,1009,912,820,822,914,914,912,820,735,742,822,822,820,735,651,654,742,742,735,651,618,621,654,654,651,618,600,601,621,621,618,600,1734,1288,1293,1734,1293,1301,1734,1301,1317,1734,1317,1348,1734,1348,1391,1734,1391,1455,1734,1455,1533,1734,1533,1608,1734,1608,1660,1734,1660,1888,1107,1293,1288,1288,1098,1107,1127,1301,1293,1293,1107,1127,1166,1317,1301,1301,1127,1166,1193,1348,1317,1317,1166,1193,1223,1391,1348,1348,1193,1223,1275,1455,1391,1391,1223,1275,1330,1533,1455,1455,1275,1330,1474,1608,1533,1533,1330,1474,1618,1660,1608,1608,1474,1618,1737,1888,1660,1660,1618,1737,975,1107,1098,1098,973,975,1001,1127,1107,1107,975,1001,1038,1166,1127,1127,1001,1038,1081,1193,1166,1166,1038,1081,1120,1223,1193,1193,1081,1120,1196,1275,1223,1223,1120,1196,1270,1330,1275,1275,1196,1270,1367,1474,1330,1330,1270,1367,1576,1618,1474,1474,1367,1576,1902,1737,1618,1618,1576,1902,876,975,973,973,865,876,901,1001,975,975,876,901,941,1038,1001,1001,901,941,983,1081,1038,1038,941,983,1065,1120,1081,1081,983,1065,1117,1196,1120,1120,1065,1117,1207,1270,1196,1196,1117,1207,1304,1367,1270,1270,1207,1304,1524,1576,1367,1367,1304,1524,1741,1902,1576,1576,1524,1741,782,876,865,865,773,782,814,901,876,876,782,814,866,941,901,901,814,866,926,983,941,941,866,926,996,1065,983,983,926,996,1084,1117,1065,1065,996,1084,1179,1207,1117,1117,1084,1179,1280,1304,1207,1207,1179,1280,1491,1524,1304,1304,1280,1491,1702,1741,1524,1524,1491,1702,716,782,773,773,697,716,755,814,782,782,716,755,804,866,814,814,755,804,886,926,866,866,804,886,955,996,926,926,886,955,1057,1084,996,996,955,1057,1147,1179,1084,1084,1057,1147,1266,1280,1179,1179,1147,1266,1466,1491,1280,1280,1266,1466,1904,1702,1491,1491,1466,1904,646,716,697,697,635,646,708,755,716,716,646,708,770,804,755,755,708,770,850,886,804,804,770,850,934,955,886,886,850,934,1030,1057,955,955,934,1030,1125,1147,1057,1057,1030,1125,1250,1266,1147,1147,1125,1250,1446,1466,1266,1266,1250,1446,1750,1904,1466,1466,1446,1750,629,646,635,635,611,629,670,708,646,646,629,670,748,770,708,708,670,748,828,850,770,770,748,828,920,934,850,850,828,920,1018,1030,934,934,920,1018,1113,1125,1030,1030,1018,1113,1242,1250,1125,1125,1113,1242,1440,1446,1250,1250,1242,1440,1895,1750,1446,1446,1440,1895,622,629,611,611,602,622,655,670,629,629,622,655,743,748,670,670,655,743,823,828,748,748,743,823,915,920,828,828,823,915,1017,1018,920,920,915,1017,1110,1113,1018,1018,1017,1110,1240,1242,1113,1113,1110,1240,1434,1440,1242,1242,1240,1434,1922,1895,1440,1440,1434,1922,616,622,602,602,600,616,649,655,622,622,616,649,733,743,655,655,649,733,817,823,743,743,733,817,911,915,823,823,817,911,1008,1017,915,915,911,1008,1101,1110,1017,1017,1008,1101,1234,1240,1110,1110,1101,1234,1430,1434,1240,1240,1234,1430,1758,1922,1434,1434,1430,1758,1734,1735,1962,1734,1962,2014,1734,2014,2087,1734,2087,2165,1734,2165,2229,1734,2229,2272,1734,2272,2303,1734,2303,2319,1734,2319,2327,1734,2327,2334,2004,1962,1735,1735,1737,2004,2148,2014,1962,1962,2004,2148,2290,2087,2014,2014,2148,2290,2345,2165,2087,2087,2290,2345,2397,2229,2165,2165,2345,2397,2427,2272,2229,2229,2397,2427,2456,2303,2272,2272,2427,2456,2493,2319,2303,2303,2456,2493,2513,2327,2319,2319,2493,2513,2523,2334,2327,2327,2513,2523,2046,2004,1737,1737,1739,2046,2255,2148,2004,2004,2046,2255,2352,2290,2148,2148,2255,2352,2426,2345,2290,2290,2352,2426,2502,2397,2345,2345,2426,2502,2541,2427,2397,2397,2502,2541,2582,2456,2427,2427,2541,2582,2621,2493,2456,2456,2582,2621,2647,2513,2493,2493,2621,2647,2649,2523,2513,2513,2647,2649,2098,2046,1739,1739,1742,2098,2318,2255,2046,2046,2098,2318,2413,2352,2255,2255,2318,2413,2503,2426,2352,2352,2413,2503,2557,2502,2426,2426,2503,2557,2639,2541,2502,2502,2557,2639,2681,2582,2541,2541,2639,2681,2721,2621,2582,2582,2681,2721,2744,2647,2621,2621,2721,2744,2757,2649,2647,2647,2744,2757,2129,2098,1742,1742,1745,2129,2342,2318,2098,2098,2129,2342,2441,2413,2318,2318,2342,2441,2536,2503,2413,2413,2441,2536,2624,2557,2503,2503,2536,2624,2694,2639,2557,2557,2624,2694,2754,2681,2639,2639,2694,2754,2806,2721,2681,2681,2754,2806,2838,2744,2721,2721,2806,2838,2849,2757,2744,2744,2838,2849,2156,2129,1745,1745,1747,2156,2356,2342,2129,2129,2156,2356,2473,2441,2342,2342,2356,2473,2565,2536,2441,2441,2473,2565,2667,2624,2536,2536,2565,2667,2734,2694,2624,2624,2667,2734,2816,2754,2694,2694,2734,2816,2867,2806,2754,2754,2816,2867,2904,2838,2806,2806,2867,2904,2925,2849,2838,2838,2904,2925,2176,2156,1747,1747,1749,2176,2372,2356,2156,2156,2176,2372,2495,2473,2356,2356,2372,2495,2590,2565,2473,2473,2495,2590,2686,2667,2565,2565,2590,2686,2770,2734,2667,2667,2686,2770,2850,2816,2734,2734,2770,2850,2912,2867,2816,2816,2850,2912,2974,2904,2867,2867,2912,2974,2985,2925,2904,2904,2974,2985,2182,2176,1749,1749,1753,2182,2380,2372,2176,2176,2182,2380,2507,2495,2372,2372,2380,2507,2602,2590,2495,2495,2507,2602,2700,2686,2590,2590,2602,2700,2792,2770,2686,2686,2700,2792,2872,2850,2770,2770,2792,2872,2950,2912,2850,2850,2872,2950,2991,2974,2912,2912,2950,2991,3009,2985,2974,2974,2991,3009,2188,2182,1753,1753,1755,2188,2382,2380,2182,2182,2188,2382,2512,2507,2380,2380,2382,2512,2605,2602,2507,2507,2512,2605,2707,2700,2602,2602,2605,2707,2799,2792,2700,2700,2707,2799,2879,2872,2792,2792,2799,2879,2967,2950,2872,2872,2879,2967,3e3,2991,2950,2950,2967,3e3,3020,3009,2991,2991,3e3,3020,2194,2188,1755,1755,1758,2194,2389,2382,2188,2188,2194,2389,2516,2512,2382,2382,2389,2516,2611,2605,2512,2512,2516,2611,2708,2707,2605,2605,2611,2708,2800,2799,2707,2707,2708,2800,2885,2879,2799,2799,2800,2885,2969,2967,2879,2879,2885,2969,3003,3e3,2967,2967,2969,3003,3021,3020,3e3,3e3,3003,3021],vertex:[[-3,1.8,0,-2.9916,1.8,-0.081,-2.9916,1.8,.081,-2.98945,1.666162,0,-2.985,1.92195,0,-2.985,1.92195,0,-2.981175,1.667844,-0.081,-2.981175,1.667844,.081,-2.976687,1.920243,-0.081,-2.976687,1.920243,.081,-2.9688,1.8,-0.144,-2.9688,1.8,.144,-2.958713,1.672406,-0.144,-2.958713,1.672406,.144,-2.9576,1.5348,0,-2.9576,1.5348,0,-2.954122,1.915609,-0.144,-2.954122,1.915609,.144,-2.949693,1.53779,-0.081,-2.949693,1.53779,.081,-2.94,2.0196,0,-2.9352,1.8,-0.189,-2.9352,1.8,.189,-2.931958,2.016526,.081,-2.931958,2.016526,-0.081,-2.92823,1.545907,-0.144,-2.92823,1.545907,.144,-2.925611,1.679131,-0.189,-2.925611,1.679131,.189,-2.92087,1.908779,-0.189,-2.92087,1.908779,.189,-2.910131,2.008181,-0.144,-2.910131,2.008181,.144,-2.90415,1.406137,0,-2.90415,1.406137,0,-2.896846,1.410135,.081,-2.896846,1.410135,-0.081,-2.896602,1.557869,-0.189,-2.896602,1.557869,.189,-2.8944,1.8,-0.216,-2.8944,1.8,.216,-2.885416,1.687296,-0.216,-2.885416,1.687296,.216,-2.880491,1.900487,-0.216,-2.880491,1.900487,.216,-2.877965,1.995883,-0.189,-2.877965,1.995883,.189,-2.877022,1.420985,-0.144,-2.877022,1.420985,.144,-2.865,2.09565,0,-2.858195,1.572394,.216,-2.858195,1.572394,-0.216,-2.857432,2.091511,-0.081,-2.857432,2.091511,.081,-2.85,1.8,-0.225,-2.85,1.8,.225,-2.847806,1.436974,.189,-2.847806,1.436974,-0.189,-2.841675,1.696181,.225,-2.841675,1.696181,-0.225,-2.838906,1.98095,-0.216,-2.838906,1.98095,.216,-2.836889,2.080276,-0.144,-2.836889,2.080276,.144,-2.83655,1.891463,-0.225,-2.83655,1.891463,.225,-2.8288,1.2804,0,-2.822326,1.285171,-0.081,-2.822326,1.285171,.081,-2.8164,1.5882,-0.225,-2.8164,1.5882,.225,-2.812331,1.45639,.216,-2.812331,1.45639,-0.216,-2.806615,2.06372,-0.189,-2.806615,2.06372,.189,-2.8056,1.8,-0.216,-2.8056,1.8,.216,-2.804755,1.298122,-0.144,-2.804755,1.298122,.144,-2.797934,1.705067,-0.216,-2.797934,1.705067,.216,-2.7964,1.9647,.225,-2.7964,1.9647,-0.225,-2.792609,1.882438,-0.216,-2.792609,1.882438,.216,-2.778861,1.317206,-0.189,-2.778861,1.317206,.189,-2.774605,1.604006,.216,-2.774605,1.604006,-0.216,-2.773725,1.477519,.225,-2.773725,1.477519,-0.225,-2.769854,2.043616,-0.216,-2.769854,2.043616,.216,-2.7648,1.8,-0.189,-2.7648,1.8,.189,-2.76,2.1528,0,-2.76,2.1528,0,-2.757739,1.713232,-0.189,-2.757739,1.713232,.189,-2.753894,1.94845,-0.216,-2.753894,1.94845,.216,-2.753123,2.147861,-0.081,-2.753123,2.147861,.081,-2.75223,1.874146,-0.189,-2.75223,1.874146,.189,-2.747418,1.340381,-0.216,-2.747418,1.340381,.216,-2.736198,1.618531,-0.189,-2.736198,1.618531,.189,-2.735119,1.498648,.216,-2.735119,1.498648,-0.216,-2.734458,2.134454,-0.144,-2.734458,2.134454,.144,-2.73125,1.157813,0,-2.73125,1.157813,0,-2.7312,1.8,-0.144,-2.7312,1.8,.144,-2.72985,2.021737,-0.225,-2.72985,2.021737,.225,-2.725825,1.163194,.081,-2.725825,1.163194,-0.081,-2.724637,1.719956,-0.144,-2.724637,1.719956,.144,-2.718978,1.867316,-0.144,-2.718978,1.867316,.144,-2.714835,1.933517,-0.189,-2.714835,1.933517,.189,-2.7132,1.3656,-0.225,-2.7132,1.3656,.225,-2.7111,1.1778,-0.144,-2.7111,1.1778,.144,-2.7084,1.8,-0.081,-2.7084,1.8,.081,-2.70695,2.114698,-0.189,-2.70695,2.114698,.189,-2.70457,1.630493,-0.144,-2.70457,1.630493,.144,-2.702175,1.724519,-0.081,-2.702175,1.724519,.081,-2.7,1.8,0,-2.699644,1.518063,.189,-2.699644,1.518063,-0.189,-2.696413,1.862682,-0.081,-2.696413,1.862682,.081,-2.6939,1.7262,0,-2.689846,1.999859,-0.216,-2.689846,1.999859,.216,-2.6894,1.199325,-0.189,-2.6894,1.199325,.189,-2.6881,1.860975,0,-2.6881,1.860975,0,-2.683107,1.63861,-0.081,-2.683107,1.63861,.081,-2.682669,1.921219,-0.144,-2.682669,1.921219,.144,-2.678982,1.390819,-0.216,-2.678982,1.390819,.216,-2.6752,1.6416,0,-2.6752,1.6416,0,-2.673549,2.090707,-0.216,-2.673549,2.090707,.216,-2.670428,1.534053,-0.144,-2.670428,1.534053,.144,-2.66305,1.225463,-0.216,-2.66305,1.225463,.216,-2.660842,1.912874,.081,-2.660842,1.912874,-0.081,-2.653085,1.979755,-0.189,-2.653085,1.979755,.189,-2.6528,1.9098,0,-2.6528,1.9098,0,-2.650604,1.544903,.081,-2.650604,1.544903,-0.081,-2.647539,1.413994,-0.189,-2.647539,1.413994,.189,-2.6433,1.5489,0,-2.6372,2.0646,-0.225,-2.6372,2.0646,.225,-2.634375,1.253906,.225,-2.634375,1.253906,-0.225,-2.625,2.19375,0,-2.622811
,1.963199,-0.144,-2.622811,1.963199,.144,-2.621645,1.433078,-0.144,-2.621645,1.433078,.144,-2.61905,2.188238,-0.081,-2.61905,2.188238,.081,-2.6112,1.0386,0,-2.6112,1.0386,0,-2.607034,1.044497,.081,-2.607034,1.044497,-0.081,-2.6057,1.28235,-0.216,-2.6057,1.28235,.216,-2.604074,1.446029,-0.081,-2.604074,1.446029,.081,-2.6029,2.173275,-0.144,-2.6029,2.173275,.144,-2.602268,1.951964,-0.081,-2.602268,1.951964,.081,-2.600851,2.038493,-0.216,-2.600851,2.038493,.216,-2.5976,1.4508,0,-2.595725,1.060502,-0.144,-2.595725,1.060502,.144,-2.5947,1.947825,0,-2.57935,1.308488,-0.189,-2.57935,1.308488,.189,-2.5791,2.151225,-0.189,-2.5791,2.151225,.189,-2.579059,1.08409,-0.189,-2.579059,1.08409,.189,-2.56745,2.014502,-0.189,-2.56745,2.014502,.189,-2.558822,1.112731,.216,-2.558822,1.112731,-0.216,-2.55765,1.330013,-0.144,-2.55765,1.330013,.144,-2.5502,2.12445,-0.216,-2.5502,2.12445,.216,-2.542925,1.344619,.081,-2.542925,1.344619,-0.081,-2.539942,1.994746,-0.144,-2.539942,1.994746,.144,-2.5375,1.35,0,-2.5375,1.35,0,-2.5368,1.1439,.225,-2.5368,1.1439,-0.225,-2.521277,1.981339,-0.081,-2.521277,1.981339,.081,-2.51875,2.095312,-0.225,-2.51875,2.095312,.225,-2.514778,1.175069,.216,-2.514778,1.175069,-0.216,-2.5144,1.9764,0,-2.5144,1.9764,0,-2.494541,1.20371,-0.189,-2.494541,1.20371,.189,-2.4873,2.066175,-0.216,-2.4873,2.066175,.216,-2.477875,1.227298,-0.144,-2.477875,1.227298,.144,-2.46835,.922987,0,-2.466566,1.243303,.081,-2.466566,1.243303,-0.081,-2.465644,.929375,-0.081,-2.465644,.929375,.081,-2.4624,1.2492,0,-2.4624,1.2492,0,-2.46,2.2212,0,-2.46,2.2212,0,-2.4584,2.0394,-0.189,-2.4584,2.0394,.189,-2.458298,.946711,-0.144,-2.458298,.946711,.144,-2.455229,2.215303,-0.081,-2.455229,2.215303,.081,-2.447474,.97226,.189,-2.447474,.97226,-0.189,-2.442278,2.199298,-0.144,-2.442278,2.199298,.144,-2.4346,2.01735,-0.144,-2.4346,2.01735,.144,-2.434329,1.003283,-0.216,-2.434329,1.003283,.216,-2.423194,2.17571,-0.189,-2.423194,2.17571,.189,-2.420025,1.037044,-0.225,-2.420025,1.037044,.225,-2.41845,2.002387,-0.081,-2.41845,2.002388,.081,-2.4125,1.996875,0,-2.4125,1.996875,0,-2.405721,1.070804,-0.216,-2.405721,1.070804,.216,-2.400019,2.147069,-0.216,-2.400019,2.147069,.216,-2.392576,1.101828,-0.189,-2.392576,1.101828,.189,-2.381752,1.127376,-0.144,-2.381752,1.127376,.144,-2.3748,2.1159,-0.225,-2.3748,2.1159,.225,-2.374406,1.144713,.081,-2.374406,1.144713,-0.081,-2.3717,1.1511,0,-2.349581,2.084731,-0.216,-2.349581,2.084731,.216,-2.326406,2.05609,-0.189,-2.326406,2.05609,.189,-2.307322,2.032502,-0.144,-2.307322,2.032502,.144,-2.3024,.8112,0,-2.3024,.8112,0,-2.301347,.818122,.081,-2.301347,.818122,-0.081,-2.29849,.836909,.144,-2.29849,.836909,-0.144,-2.294371,2.016497,-0.081,-2.294371,2.016497,.081,-2.294278,.864595,.189,-2.294278,.864595,-0.189,-2.2896,2.0106,0,-2.2896,2.0106,0,-2.289165,.898214,.216,-2.289165,.898214,-0.216,-2.2836,.9348,.225,-2.2836,.9348,-0.225,-2.278035,.971386,.216,-2.278035,.971386,-0.216,-2.272922,1.005005,.189,-2.272922,1.005005,-0.189,-2.26871,1.032691,-0.144,-2.26871,1.032691,.144,-2.265853,1.051478,.081,-2.265853,1.051478,-0.081,-2.265,2.23785,0,-2.2648,1.0584,0,-2.2648,1.0584,0,-2.261676,2.23172,-0.081,-2.261676,2.23172,.081,-2.252655,2.215082,-0.144,-2.252655,2.215082,.144,-2.239361,2.190562,-0.189,-2.239361,2.190562,.189,-2.223218,2.160788,-0.216,-2.223218,2.160788,.216,-2.20565,2.128387,.225,-2.20565,2.128388,-0.225,-2.188082,2.095987,-0.216,-2.188082,2.095987,.216,-2.171939,2.066213,-0.189,-2.171939,2.066213,.189,-2.158645,2.041693,-0.144,-2.158645,2.041693,.144,-2.149624,2.025055,-0.081,-2.149624,2.025055,.081,-2.1463,2.018925,0,-2.1411,.9738,0,-2.1411,.9738,0,-2.140315,.966231,.081,-2.140315,.966231,-0.081,-2.138183,.945685,.144,-2.138183,.945685,-0.144,-2.135041,.915407,.189,-2.135041,.915407,-0.189,-2.131226,.878641,.216,-2.131226,.878641,-0.216,-2.127075,.838631,.225,-2.127075,.838631,-0.225,-2.122924,.798621,.216,-2.122924,.798621,-0.216,-2.119109,.761855,.189,-2.119109,.761855,-0.189,-2.115967,.731578,.144,-2.115967,.731578,-0.144,-2.113835,.711032,.081,-2.113835,.711032,-0.081,-2.11305,.703463,0,-2.11305,.703463,0,-2.04,2.2464,0,-2.04,2.2464,0,-2.03841,2.24015,-0.081,-2.03841,2.24015,.081,-2.034093,2.223187,-0.144,-2.034093,2.223187,.144,-2.027731,2.198189,-0.189,-2.027731,2.198189,.189,-2.020006,2.167834,.216,-2.020006,2.167834,-0.216,-2.0116,2.1348,.225,-2.0116,2.1348,-0.225,-2.003194,2.101766,.216,-2.003194,2.101766,-0.216,-2,.9,0,-2,.9,0,-2,.9,0,-1.9972,.8916,.081,-1.9972,.8916,-0.081,-1.995469,2.071411,-0.189,-1.995469,2.071411,.189,-1.99275,1.037175,0,-1.99275,1.037175,0,-1.9896,.8688,.144,-1.9896,.8688,-0.144,-1.989107,2.046413,.144,-1.989107,2.046413,-0.144,-1.986,.771675,0,-1.986,.771675,0,-1.98479,2.02945,-0.081,-1.98479,2.02945,.081,-1.9832,2.0232,0,-1.9832,2.0232,0,-1.9784,.8352,.189,-1.9784,.8352,-0.189,-1.97424,.9,-0.32816,-1.97424,.9,-0.32816,-1.97424,.9,.32816,-1.972,1.1784,0,-1.972,1.1784,0,-1.967083,1.037175,-0.32697,-1.967083,1.037175,.32697,-1.9648,.7944,.216,-1.9648,.7944,-0.216,-1.96042,.771675,-0.325863,-1.96042,.771675,.325863,-1.95,.75,-0.225,-1.95,.75,.225,-1.948,.6564,0,-1.948,.6564,0,-1.946601,1.1784,-0.323566,-1.946601,1.1784,.323566,-1.93925,1.323225,0,-1.93925,1.323225,0,-1.9352,.7056,.216,-1.9352,.7056,-0.216,-1.92291,.6564,-0.319628,-1.92291,.6564,.319628,-1.9216,.6648,.189,-1.9216,.6648,-0.189,-1.914272,1.323225,-0.318192,-1.914272,1.323225,.318192,-1.9104,.6312,.144,-1.9104,.6312,-0.144,-1.9028,.6084,.081,-1.9028,.6084,-0.081,-1.9,.6,0,-1.9,.6,0,-1.89952,.9,-0.63808,-1.89952,.9,-0.63808,-1.89952,.9,.63808,-1.89952,.9,.63808,-1.896,1.4712,0,-1.896,1.4712,0,-1.892634,1.037175,-0.635767,-1.892634,1.037175,.635767,-1.892,.553725,0,-1.892,.553725,0,-1.886223,.771675,-0.633613,-1.886223,.771675,.633613,-1.872927,1.1784,-0.629147,-1.872927,1.1784,.629147,-1.87158,1.4712,-0.311096,-1.87158,1.4712,.311096,-1.867631,.553725,-0.310439,-1.867631,.553725,.310439,-1.850132,.6564,-0.62149,-1.850132,.6564,.62149,-1.84375,1.621875,0,-1.84375,1.621875,0,-1.841822,1.323225,-0.618698,-1.841822,1.323225,.618698,-1.824,.4632,0,-1.824,.4632,0,-1.820003,1.621875,-0.302522,-1.820003,1.621875,.302523,-1.8009,2.024775,0,-1.800745,1.4712,-0.6049,-1.800745,1.4712,.6049,-1.800507,.4632,-0.299282,-1.800507,.4632,.299282,-1.800455,2.031069,-0.081,-1.800455,2.031069,.081,-1.799246,2.048152,-0.144,-1.799246,2.048152,.144,-1.797466,2.073326,-0.189,-1.797466,2.073326,.189,-1.796946,.553725,-0.603624,-1.796946,.553725,.603624,-1.795303,2.103896,-0.216,-1.795303,2.103896,.216,-1.79295,2.137163,-0.225,-1.79295,2.137163,.225,-1.790597,2.170429,-0.216,-1.790597,2.170429,.216,-1.788434,2.200999,-0.189,-1.788434,2.200999,.189,-1.786654,2.226173,-0.144,-1.786654,2.226173,.144,-1.785445,2.243256,-0.081,-1.785445,2.243256,.081,-1.785,2.24955,0,-1.784,1.7748,0,-1.784,1.7748,0,-1.77968,.9,-0.92592,-1.77968,.9,-0.92592,-1.77968,.9,.92592,-1.77968,.9,.92592,-1.773229,1.037175,-0.922564,-1.773229,1.037175,.922564,-1.767222,.771675,-0.919439,-1.767222,.771675,.919439,-1.761022,1.7748,-0.292719,-1.761022,1.7748,.292719,-1.754764,1.1784,-0.912957,-1.754764,1.1784,.912957,-1.75112,1.621875,-0.58823,-1.75112,1.621875,.58823,-1.75,.384375,0,-1.75,.384375,0,-1.733408,.6564,-0.901846,-1.733408,.6564,.901846,-1.732362,.4632,-0.581929,-1.732362,.4632,.581929,-1.72746,.384375,-0.28714,-1.72746,.384375,.28714,-1.725622,1.323225,-0.897795,-1.725622,1.323225,.897795,-1.71825,1.929525,0,-1.71825,1.929525,0,-1.696119,1.929525,-0.28193,-1.696119,1.929525,.28193,-1.694372,1.7748,-0.569167,-1.694372,1.7748,.569167,-1.687137,1.4712,-0.877772,-1.687137,1.4712,.877772,-1.683577,.553725,-0.87592,-1.683577,.553725,.87592,-1.676,.3168,0,-1.676,.3168,0,-1.66208,.384375,-0.55832,-1.66208,.384375,.55832,-1.654413,.3168,-0.274998,-1.654413,.3168,.274998,-1.648,2.0856,0,-1.648,2.0856,0,-1.640643,1.621875,-0.853583,-1.640643,1.621875,.853583,-1.631925,1.929525,-0.54819,-1.631925,1.929525,.54819,-1.626774,2.0856,-0.270404,-1.626774,2.0856,.270404,-1.623068,.4632,-0.844439,-1.623068,.4632,.844439,-1.61856,.9,-1.18784,-1.61856,.9,-1.18784,-1.61856,.9,1.18784,-1.61856,.9,1.18784,-1.612693,1.037175,-1.183534,-1.612693,1.037175,1.183534,-1.608,.260025,0,-1.608,.260025,0,-1.60723,.771675,-1.179525,-1.60723,.771675,1.179525,-1.6,2.025,0,-1.5972,2.0313,-0.081,-1.5972,2.0313,.081,-1.5959,1.1784,-1.17121,-1.5959,1.1784,1.17121,-1.591798,.3168,-0.534711,-1.591798,.3168,.534711,-1.5896,2.0484,-0.144,-1.5896,2.0484,.144,-1.587475,1.7748,-0.825921,-1.587475,1.7748,.825921,-1.587289,.260025,.263841,-1.587289,.260025,-0.263841,-1.5784,2.0736,-0.189,-1.5784,2.0736,.189,-1.576477,.6564,-1.156956,-1.576477,.6564,1.156956,-1.57475,2.242575,0,-1.57475,2.242575,0,-1.569396,1.323225,-1.151759,-1.569396,1.323225,1.151759,-1.565204,2.0856,-0.525778,-1.565204,2.0856,.525778,-1.5648,2.1042,-0.216,-1.5648,2.1042,.216,-1.55722,.384375,-0.81018,-1.55722,.384375,.81018,-1.554467,2.242575,-0.258385,-1.554467,2.242575,.258385,-1.552,.2136,0,-1.552,.2136,0,-1.55,2.1375,-0.225,-1.55,2.1375,.225,-1.5352,2.1708,-0.216,-1.5352,2.1708,.216,-1.534395,1.4712,-1.126072,-1.534395,1.4712,1.126072,-1.53201,.2136,.254652,-1.53201,.2136,-0.254652,-1.531158,.553725,-1.123697,-1.531158,.553725,1.123697,-1.528968,1.929525,-0.795481,-1.528968,1.929525,.795481,-1.527214,.260025,-0.513016,-1.527214,.260025,.513016,-1.5216,2.2014,-0.189,-1.5216,2.2014,.189,-1.514,.177075,0,-1.514,.177075,0,-1.5104,2.2266,-0.144,-1.5104,2.2266,.144,-1.5028,2.2437,-0.081,-1.5028,2.2437,.081,-1.5,2.4,0,-1.5,.15,0,-1.5,2.25,0,-1.5,2.4,0,-1.5,.15,0,-1.496475,.127575,0,-1.496475,.127575,0,-1.495635,2.242575,-0.502408,-1.495635,2.242575,.502408,-1.4945,.177075,.248417,-1.4945,.177075,-0.248417,-1.49211,1.621875,-1.09504,-1.49211,1.621875,1.09504,-1.491372,.3168,-0.775921,-1.491372,.3168,.775921,-1.4808,.1056,0,-1.4808,.1056,0,-1.48068,2.4,-0.24612,-1.48068,.15,.24612,-1.48068,2.4,.24612,-1.48068,.15,-0.24612,-1.48068,.15,-0.24612,-1.48068,.15,.24612,-1.480325,2.435437,0,-1.480325,2.435437,0,-1.4772,.127575,.245542,-1.4772,.127575,-0.245542,-1.476127,.4632,-1.08331,-1.476127,.4632,1.08331,-1.474028,.2136,.49515,-1.474028,.2136,-0.49515,-1.466456,2.0856,-0.762958,-1.466456,2.0856,.762958,-1.461727,.1056,-0.24297,-1.461727,.1056,.24297,-1.461258,2.435437,-0.242892,-1.461258,2.435437,.242892,-1.4596,2.463,0,-1.4596,2.463,0,-1.445325,.084525,0,-1.445325,.084525,0,-1.443756,1.7748,-1.059553,-1.443756,1.7748,1.059553,-1.4408,2.463,-0.239491,-1.4408,2.463,.239491,-1.439025,2.482687,0,-1.437937,.177075,.483027,-1.437937,.177075,-0.483027,-1.430863,.260025,.74444,-1.430863,.260025,-0.74444,-1.426709,.084525,-0.237149,-1.426709,.084525,.237149,-1.42464,2.4,-0.47856,-1.42464,.15,-0.47856,-1.42464,.15,-0.47856,-1.42464,.15,.47856,-1.42464,.15,.47856,-1.42464,2.4,.47856,-1.421292,.127575,.477435,-1.421292,.127575,-0.477435,-1.42049,2.482687,-0.236115,-1.42049,2.482687,.236115,-1.42,.9,-1.42,-1.42,.9,-1.42,-1.42,.9,1.42,-1.42,.9,1.42,-1.4198,2.4945,0,-1.4198,2.4945,0,-1.41624,.384375,-1.03936,-1.41624,.384375,1.03936,-1.414853,1.037175,-1.414853,-1.414853,1.037175,1.414853,-1.41006,.771675,-1.41006,-1.41006,.771675,1.41006,-1.406405,.1056,-0.472434,-1.406405,.1056,.472434,-1.405953,2.435437,-0.472283,-1.405953,2.435437,.472283,-1.403125,2.498438,0,-1.403125,2.498438,0,-1.401513,2.4945,-0.232961,-1.401513,2.4945,.232961,-1.401276,2.242575,-0.729046,-1.401276,2.242575,.729046,-1.40012,1.1784,-1.40012,-1.40012,1.1784,1.40012,-1.4,2.4,0,-1.4,2.4,0,-1.390545,1.929525,-1.020503,-1.390545,1.929525,1.020503,-1.3902,2.4945,0,-1.3902,2.4945,0,-1.38627,2.463,-0.465671,-1.38627,2.463,.465671,-1.385925,2.435437,0,-1.385925,2.435437,0,-1.385053,2.498438,-0.230225,-1.385053,2.498438,.230225,-1.38308,.6564,-1.38308,-1.38308,.6564,1.38308,-1.3824,.0648,0,-1.3824,.0648,0,-1.382225,2.482687,0,-1.382225,2.482687,0,-1.381968,2.4,-0.229712,-1.381968,2.4,.229712,-1.381032,.2136,.718514,-1.381032,.2136,-0.718514,-1.3804,2.463,0,-1.3804,2.463,0,-1.376868,1.323225,-1.376867,-1.376867,1.323225,1.376868,-1.372712,.084525,-0.461116,-1.372712,.084525,.461116,-1.372294,2.4945,-0.228104,-1.372294,2.4945,.228104,-1.368074,2.435437,-0.227403,-1.368074,2.435437,.227403,-1.366728,2.482687,-0.459107,-1.366728,2.482687,.459107,-1.364595,.0648,-0.226824,-1.364595,.0648,.226824,-1.364422,2.482687,-0.226795,-1.364422,2.482687,.226795,-1.36262,2.463,-0.226496,-1.36262,2.463,.226496,-1.356353,.3168,-0.99541,-1.356353,.3168,.99541,-1.348469,2.4945,-0.452973,-1.348469,2.4945,.452973,-1.347218,.177075,.700921,-1.347218,.177075,-0.700921,-1.34616,1.4712,-1.34616,-1.34616,1.4712,1.34616,-1.34332,.553725,-1.34332,-1.34332,.553725,1.34332,-1.33476,2.4,-0.69444,-1.33476,.15,-0.69444,-1.33476,.15,.69444,-1.33476,.15,.69444,-1.33476,2.4,.69444,-1.33476,.15,-0.69444,-1.333693,2.0856,-0.97878,-1.333693,2.0856,.97878,-1.332632,2.498438,-0.447653,-1.332632,2.498438,.447653,-1.331623,.127575,.692808,-1.331623,.127575,-0.692808,-1.329664,2.4,-0.446656,-1.329664,2.4,.446656,-1.320356,2.4945,-0.443529,-1.320356,2.4945,.443529,-1.317675,.1056,-0.685551,-1.317675,.1056,.685551,-1.317252,2.435437,-0.685331,-1.317252,2.435437,.685331,-1.316296,2.435437,-0.442166,-1.316296,2.435437,.442166,-1.312948,.0648,.441041,-1.312948,.0648,-0.441041,-1.312782,2.482687,-0.440985,-1.312782,2.482687,.440985,-1.311049,2.463,-0.440403,-1.311049,2.463,.440403,-1.309063,1.621875,-1.309063,-1.309063,1.621875,1.309063,-1.301322,.260025,.955023,-1.301322,.260025,-0.955023,-1.3,2.4,0,-1.3,2.4,0,-1.29881,2.463,-0.675736,-1.29881,2.463,.675736,-1.29504,.4632,-1.29504,-1.29504,.4632,1.29504,-1.286108,.084525,-0.669128,-1.286108,.084525,.669128,-1.284375,.046875,0,-1.284375,.046875,0,-1.283256,2.4,-0.213304,-1.283256,2.4,.213304,-1.280502,2.482687,-0.666211,-1.280502,2.482687,.666211,-1.2746,2.4408,0,-1.2746,2.4408,0,-1.274414,2.242575,-0.935276,-1.274414,2.242575,.935276,-1.267832,.046875,-0.21074,-1.267832,.046875,.21074,-1.26664,1.7748,-1.26664,-1.26664,1.7748,1.26664,-1.263395,2.4945,-0.657311,-1.263395,2.4945,.657311,-1.258183,2.4408,.209136,-1.258183,2.4408,-0.209136,-1.256003,.2136,.921764,-1.256003,.2136,-0.921764,-1.248557,2.498438,-0.649591,-1.248557,2.498438,.649591,-1.245776,2.4,-0.648144,-1.245776,2.4,.648144,-1.2425,.384375,-1.2425,-1.2425,.384375,1.2425,-1.237056,2.4945,-0.643607,-1.237056,2.4945,.643607,-1.234688,2.4,-0.414752,-1.234688,2.4,.414752,-1.233252,2.435437,-0.641628,-1.233252,2.435437,.641628,-1.230115,.0648,-0.639996,-1.230115,.0648,.639996,-1.229959,2.482687,-0.639915,-1.229959,2.482687,.639915,-1.228335,2.463,-0.63907,-1.228335,2.463,.63907,-1.22525,.177075,.899195,-1.22525,.177075,-0.899195,-1.219958,1.929525,1.219958,-1.219958,1.929525,-1.219958,-1.219848,.046875,-0.409767,-1.219848,.046875,.409767,-1.21392,2.4,-0.89088,-1.21392,.15,-0.89088,-1.21392,.15,-0.89088,-1.21392,.15,.89088,-1.21392,.15,.89088,-1.21392,2.4,.89088,-1.211067,.127575,.888786,-1.211067,.127575,-0.888786,-1.210564,2.4408,.406648,-1.210564,2.4408,-0.406648,-1.2048,2.4744,0,-1.2048,2.4744,0,-1.198382,.1056,-0.879477,-1.198382,.1056,.879477,-1.197997,2.435437,-0.879195,-1.197997,2.435437,.879195,-1.18996,.3168,-1.18996,-1.18996,.3168,1.18996,-1.189282,2.4744,-0.197684,-1.189282,2.4744,.197684,-1.18784,.9,-1.61856,-1.18784,.9,-1.61856,-1.18784,.9,1.61856,-1.18784,.9,1.61856,-1.183534,1.037175,-1.612693,-1.183534,1.037175,1.612693,-1.181225,2.463,-0.866886,-1.181225,2.463,.866886,-1.179525,.771675,-1.60723,-1.179525,.771675,1.60723,-1.17121,1.1784,-1.5959,-1.17121,1.1784,1.5959,-1.17008,2.0856,-1.17008,-1.17008,2.0856,1.17008,-1.169673,.084525,-0.858407,-1.169673,.084525,.858407,-1.164574,2.482687,-0.854666,-1.164574,2.482687,.854666,-1.156956,.6564,-1.576477,-1.156956,.6564,1.576477,-1.156792,2.4,-0.601848,-1.156792,2.4,.601848,-1.151759,1.323225,-1.569396,-1.151759,1.323225,1.569396,-1.149016,2.4945,-0.843248,-1.149016,2.4945,.843248,-1.144271,2.4744,-0.384379,-1.144271,2.4744,.384379,-1.1436,.0312,0,-1.1436,.0312,0,-1.142888,.046875,-0.594614,-1.142888,.046875,.594614,-1.14168,.260025,1.14168,-1.14168,.260025,-1.14168,-1.135521,2.498438,-0.833344,-1.135521,2.498438,.833344,-1.13419,2.4408,.590089,-1.13419,2.4408,-0.590089,-1.132992,2.4,-0.831488,-1.132992,2.4,.831488,-1.12887,.0312,-0.187642,-1.12887,.0312,.187642,-1.126072,1.4712,-1.534395,-1.126072,1.4712,1.534395,-1.125061,2.4945,-0.825668,-1.125061,2.4945,.825668,-1.123697,.553725,-1.531158,-1.123697,.553725,1.531158,-1.121601,2.435437,-0.823129,-1.121601,2.435437,.823129,-1.118749,.0648,-0.821035,-1.118749,.0648,.821035,-1.118607,2.482687,-0.820931,-1.118607,2.482687,.820931,-1.118073,2.242575,-1.118073,-1.118073,2.242575,1.118073,-1.11713,2.463,-0.819847,-1.11713,2.463,.819847,-1.10192,.2136,1.10192,-1.10192,.2136,-1.10192,-1.1002,2.5026,0,-1.1002,2.5026,0,-1.09504,1.621875,-1.49211,-1.09504,1.621875,1.49211,-1.086146,.0312,.364854,-1.086146,.0312,-0.364854,-1.086029,2.5026,.180521,-1.086029,2.5026,-0.180521,-1.08331,.4632,-1.476127,-1.08331,.4632,1.476127,-1.07494,.177075,-1.07494,-1.07494,.177075,1.07494,-1.072079,2.4744,-0.557774,-1.072079,2.4744,.557774,-1.065,2.4,-1.065,-1.065,.15,-1.065,-1.065,.15,1.065,-1.065,2.4,1.065,-1.062497,.127575,1.062497,-1.062497,.127575,-1.062497,-1.059553,1.7748,-1.443756,-1.059553,1.7748,1.443756,-1.052064,2.4,-0.772096,-1.052064,2.4,.772096,-1.051368,.1056,-1.051368,-1.051368,.1056,1.051368,-1.051031,2.435437,-1.051031,-1.051031,2.435437,1.051031,-1.044926,2.5026,-0.351008,-1.044926,2.5026,.351008,-1.039419,.046875,-0.762816,-1.039419,.046875,.762816,-1.03936,.384375,-1.41624,-1.03936,.384375,1.41624,-1.036316,2.463,-1.036316,-1.036316,2.463,1.036316,-1.031508,2.4408,.75701,-1.031508,2.4408,-0.75701,-1.026181,.084525,-1.026181,-1.026181,.084525,1.026181,-1.021708,2.482687,-1.021708,-1.021708,2.482687,1.021708,-1.020503,1.929525,-1.390545,-1.020503,1.929525,1.390545,-1.017621,.0312,.529441,-1.017621,.0312,-0.529441,-1.008058,2.4945,-1.008058,-1.008058,2.4945,1.008058,-0.996219,2.498438,-0.996219,-0.996219,2.498438,.996219,-0.99541,.3168,-1.356353,-0.99541,.3168,1.356353,-0.994,2.4,-0.994,-0.994,2.4,.994,-0.987042,2.4945,-0.987042,-0.987042,2.4945,.987042,-0.984007,2.435437,-0.984007,-0.984007,2.435437,.984007,-0.981504,.0648,.981504,-0.981504,.0648,-0.981504,-0.98138,2.482687,-0.98138,-0.98138,2.482687,.98138,-0.980084,2.463,-0.980084,-0.980084,2.463,.980084,-0.979002,2.5026,.509349,-0.979002,2.5026,-0.509349,-0.97878,2.0856,-1.333693,-0.97878,2.0856,1.333693,-0.975021,2.4744,-0.715555,-0.975021,2.4744,.715555,-0.9704,2.5272,0,-0.9704,2.5272,0,-0.957901,2.5272,-0.159223,-0.957901,2.5272,.159223,-0.955023,.260025,1.301322,-0.955023,.260025,-1.301322,-0.952425,.018225,0,-0.952425,.018225,0,-0.940158,.018225,.156274,-0.940158,.018225,-0.156274,-0.935276,2.242575,-1.274414,-0.935276,2.242575,1.274414,-0.92592,.9,-1.77968,-0.92592,.9,1.77968,-0.92592,.9,1.77968,-0.92592,.9,-1.77968,-0.925493,.0312,.679207,-0.925493,.0312,-0.679207,-0.923,2.4,-0.923,-0.923,2.4,.923,-0.922564,1.037175,1.773229,-0.922564,1.037175,-1.773229,-0.921764,.2136,1.256003,-0.921764,.2136,-1.256003,-0.921647,2.5272,-0.309596,-0.921647,2.5272,.309596,-0.919439,.771675,-1.767222,-0.919439,.771675,1.767222,-0.912957,1.1784,-1.754764,-0.912957,1.1784,1.754764,-0.911906,.046875,-0.911906,-0.911906,.046875,.911906,-0.904966,2.4408,.904966,-0.904966,2.4408,-0.904966,-0.904575,.018225,.303862,-0.904575,.018225,-0.303862,-0.901846,.6564,-1.733408,-0.901846,.6564,1.733408,-0.899195,.177075,1.22525,-0.899195,.177075,-1.22525,-0.897795,1.323225,-1.725622,-0.897795,1.323225,1.725622,-0.89088,.15,-1.21392,-0.89088,.15,1.21392,-0.89088,2.4,-1.21392,-0.89088,.15,-1.21392,-0.89088,.15,1.21392,-0.89088,2.4,1.21392,-0.89037,2.5026,-0.653431,-0.89037,2.5026,.653431,-0.888786,.127575,1.211067,-0.888786,.127575,-1.211067,-0.879477,.1056,-1.198382,-0.879477,.1056,1.198382,-0.879195,2.435437,-1.197997,-0.879195,2.435437,1.197997,-0.877772,1.4712,-1.687137,-0.877772,1.4712,1.687137,-0.87592,.553725,-1.683577,-0.87592,.553725,1.683577,-0.866886,2.463,-1.181225,-0.866886,2.463,1.181225,-0.863501,2.5272,-0.449256,-0.863501,2.5272,.449256,-0.858407,.084525,-1.169673,-0.858407,.084525,1.169673,-0.855408,2.4744,-0.855408,-0.855408,2.4744,.855408,-0.854666,2.482687,-1.164574,-0.854666,2.482687,1.164574,-0.853583,1.621875,-1.640643,-0.853583,1.621875,1.640643,-0.847506,.018225,-0.440935,-0.847506,.018225,.440935,-0.844439,.4632,1.623068,-0.844439,.4632,-1.623068,-0.843248,2.4945,-1.149016,-0.843248,2.4945,1.149016,-0.833344,2.498438,-1.135521,-0.833344,2.498438,1.135521,-0.831488,2.4,-1.132992,-0.831488,2.4,1.132992,-0.825921,1.7748,1.587475,-0.825921,1.7748,-1.587475,-0.825668,2.4945,-1.125061,-0.825668,2.4945,1.125061,-0.825,2.55,0,-0.825,2.55,0,-0.823129,2.435437,-1.121601,-0.823129,2.435437,1.121601,-0.821035,.0648,1.118749,-0.821035,.0648,-1.118749,-0.820931,2.482687,1.118607,-0.820931,2.482687,-1.118607,-0.819847,2.463,-1.11713,-0.819847,2.463,1.11713,-0.814374,2.55,-0.135366,-0.814374,2.55,.135366,-0.811956,.0312,.811956,-0.811956,.0312,-0.811956,-0.81018,.384375,1.55722,-0.81018,.384375,-1.55722,-0.795481,1.929525,1.528968,-0.795481,1.929525,-1.528968,-0.785325,2.5272,-0.57634,-0.785325,2.5272,.57634,-0.783552,2.55,-0.263208,-0.783552,2.55,.263208,-0.781142,2.5026,-0.781142,-0.781142,2.5026,.781142,-0.775921,.3168,-1.491372,-0.775921,.3168,1.491372,-0.772096,2.4,-1.052064,-0.772096,2.4,1.052064,-0.770779,.018225,.565664,-0.770779,.018225,-0.565664,-0.762958,2.0856,-1.466456,-0.762958,2.0856,1.466456,-0.762816,.046875,-1.039419,-0.762816,.046875,1.039419,-0.75701,2.4408,1.031508,-0.75701,2.4408,-1.031508,-0.74444,.260025,1.430863,-0.74444,.260025,-1.430863,-0.734118,2.55,-0.381942,-0.734118,2.55,.381942,-0.729046,2.242575,-1.401276,-0.729046,2.242575,1.401276,-0.718514,.2136,1.381032,-0.718514,.2136,-1.381032,-0.715555,2.4744,-0.975021,-0.715555,2.4744,.975021,-0.7032,.0084,0,-0.700921,.177075,1.347218,-0.700921,.177075,-1.347218,-0.69444,.15,-1.33476,-0.69444,.15,1.33476,-0.69444,2.4,1.33476,-0.69444,.15,1.33476,-0.69444,2.4,-1.33476,-0.69444,.15,-1.33476,-0.694143,.0084,-0.115381,-0.694143,.0084,.115381,-0.692808,.127575,1.331623,-0.692808,.127575,-1.331623,-0.688984,2.5272,-0.688984,-0.688984,2.5272,.688984,-0.685551,.1056,-1.317675,-0.685551,.1056,1.317675,-0.685331,2.435437,-1.317252,-0.685331,2.435437,1.317252,-0.679207,.0312,-0.925493,-0.679207,.0312,.925493,-0.676222,.018225,.676222,-0.676222,.018225,-0.676222,-0.675736,2.463,-1.29881,-0.675736,2.463,1.29881,-0.6736,2.5728,0,-0.6736,2.5728,0,-0.669128,.084525,-1.286108,-0.669128,.084525,1.286108,-0.667871,.0084,-0.224349,-0.667871,.0084,.224349,-0.667656,2.55,-0.489984,-0.667656,2.55,.489984,-0.666211,2.482687,1.280502,-0.666211,2.482687,-1.280502,-0.664924,2.5728,-0.110524,-0.664924,2.5728,.110524,-0.657311,2.4945,-1.263395,-0.657311,2.4945,1.263395,-0.653431,2.5026,-0.89037,-0.653431,2.5026,.89037,-0.649591,2.498438,-1.248557,-0.649591,2.498438,1.248557,-0.648144,2.4,-1.245776,-0.648144,2.4,1.245776,-0.643607,2.4945,-1.237056,-0.643607,2.4945,1.237056,-0.641628,2.435437,-1.233252,-0.641628,2.435437,1.233252,-0.639996,.0648,-1.230115,-0.639996,.0648,1.230115,-0.639915,2.482687,1.229959,-0.639915,2.482687,-1.229959,-0.639758,2.5728,-0.214905,-0.639758,2.5728,.214905,-0.63907,2.463,-1.228335,-0.63907,2.463,1.228335,-0.63808,.9,-1.89952,-0.63808,.9,-1.89952,-0.63808,.9,1.89952,-0.63808,.9,1.89952,-0.635767,1.037175,-1.892634,-0.635767,1.037175,1.892634,-0.633613,.771675,-1.886223,-0.633613,.771675,1.886223,-0.629147,1.1784,-1.872927,-0.629147,1.1784,1.872927,-0.625735,.0084,.325553,-0.625735,.0084,-0.325553,-0.62149,.6564,-1.850132,-0.62149,.6564,1.850132,-0.618698,1.323225,-1.841822,-0.618698,1.323225,1.841822,-0.6049,1.4712,-1.800745,-0.6049,1.4712,1.800745,-0.603624,.553725,-1.796946,-0.603624,.553725,1.796946,-0.601848,2.4,-1.156792,-0.601848,2.4,1.156792,-0.599396,2.5728,-0.31185,-0.599396,2.5728,.31185,-0.594614,.046875,-1.142888,-0.594614,.046875,1.142888,-0.590089,2.4408,1.13419,-0.590089,2.4408,-1.13419,-0.58823,1.621875,-1.75112,-0.58823,1.621875,1.75112,-0.58575,2.55,-0.58575,-0.58575,2.55,.58575,-0.581929,.4632,-1.732362,-0.581929,.4632,1.732362,-0.57634,2.5272,-0.785325,-0.57634,2.5272,.785325,-0.569167,1.7748,-1.694372,-0.569167,1.7748,1.694372,-0.569086,.0084,-0.417645,-0.569086,.0084,.417645,-0.565664,.018225,.770779,-0.565664,.018225,-0.770779,-0.55832,.384375,-1.66208,-0.55832,.384375,1.66208,-0.557774,2.4744,-1.072079,-0.557774,2.4744,1.072079,-0.54819,1.929525,-1.631925,-0.54819,1.929525,1.631925,-0.545131,2.5728,-0.400065,-0.545131,2.5728,.400065,-0.534711,.3168,-1.591798,-0.534711,.3168,1.591798,-0.529441,.0312,-1.017621,-0.529441,.0312,1.017621,-0.5258,2.5974,0,-0.5258,2.5974,0,-0.525778,2.0856,-1.565204,-0.525778,2.0856,1.565204,-0.519028,2.5974,.086273,-0.519028,2.5974,-0.086273,-0.513016,.260025,-1.527214,-0.513016,.260025,1.527214,-0.509349,2.5026,.979002,-0.509349,2.5026,-0.979002,-0.502408,2.242575,-1.495635,-0.502408,2.242575,1.495635,-0.499384,2.5974,-0.167751,-0.499384,2.5974,.167751,-0.499272,.0084,-0.499272,-0.499272,.0084,.499272,-0.49515,.2136,-1.474028,-0.49515,.2136,1.474028,-0.489984,2.55,-0.667656,-0.489984,2.55,.667656,-0.483027,.177075,-1.437937,-0.483027,.177075,1.437937,-0.47856,.15,1.42464,-0.47856,2.4,-1.42464,-0.47856,.15,-1.42464,-0.47856,.15,-1.42464,-0.47856,.15,1.42464,-0.47856,2.4,1.42464,-0.478256,2.5728,-0.478256,-0.478256,2.5728,.478256,-0.477435,.127575,1.421292,-0.477435,.127575,-1.421292,-0.472434,.1056,1.406405,-0.472434,.1056,-1.406405,-0.472283,2.435437,-1.405953,-0.472283,2.435437,1.405953,-0.467878,2.5974,-0.243424,-0.467878,2.5974,.243424,-0.465671,2.463,-1.38627,-0.465671,2.463,1.38627,-0.461116,.084525,1.372712,-0.461116,.084525,-1.372712,-0.459107,2.482687,-1.366728,-0.459107,2.482687,1.366728,-0.452973,2.4945,-1.348469,-0.452973,2.4945,1.348469,-0.449256,2.5272,-0.863501,-0.449256,2.5272,.863501,-0.447653,2.498438,-1.332632,-0.447653,2.498438,1.332632,-0.446656,2.4,-1.329664,-0.446656,2.4,1.329664,-0.443529,2.4945,-1.320356,-0.443529,2.4945,1.320356,-0.442166,2.435437,-1.316296,-0.442166,2.435437,1.316296,-0.441041,.0648,1.312948,-0.441041,.0648,-1.312948,-0.440985,2.482687,-1.312782,-0.440985,2.482687,1.312782,-0.440935,.018225,.847506,-0.440935,.018225,-0.847506,-0.440403,2.463,-1.311049,-0.440403,2.463,1.311049,-0.425519,2.5974,.312283,-0.425519,2.5974,-0.312283,-0.417645,.0084,-0.569086,-0.417645,.0084,.569086,-0.414752,2.4,-1.234688,-0.414752,2.4,1.234688,-0.409767,.046875,1.219848,-0.409767,.046875,-1.219848,-0.406648,2.4408,-1.210564,-0.406648,2.4408,1.210564,-0.400065,2.5728,-0.545131,-0.400065,2.5728,.545131,-0.3912,2.6256,0,-0.3912,2.6256,0,-0.388275,.002175,0,-0.388275,.002175,0,-0.386161,2.6256,-0.064188,-0.386161,2.6256,.064188,-0.384379,2.4744,-1.144271,-0.384379,2.4744,1.144271,-0.383274,.002175,-0.063708,-0.383274,.002175,.063708,-0.381942,2.55,-0.734118,-0.381942,2.55,.734118,-0.373318,2.5974,-0.373318,-0.373318,2.5974,.373318,-0.371546,2.6256,-0.124808,-0.371546,2.6256,.124808,-0.368768,.002175,-0.123875,-0.368768,.002175,.123875,-0.364854,.0312,1.086146,-0.364854,.0312,-1.086146,-0.3584,3.0348,0,-0.3584,3.0348,0,-0.3582,3.08115,0,-0.3582,3.08115,0,-0.353807,3.0348,-0.059016,-0.353807,3.0348,.059016,-0.35361,3.08115,-0.058988,-0.35361,3.08115,.058988,-0.351008,2.5026,-1.044926,-0.351008,2.5026,1.044926,-0.348105,2.6256,-0.18111,-0.348105,2.6256,.18111,-0.345503,.002175,-0.179756,-0.345503,.002175,.179756,-0.340477,3.0348,-0.114676,-0.340477,3.0348,.114676,-0.340289,3.08115,-0.114619,-0.340289,3.08115,.114619,-0.32816,.9,-1.97424,-0.32816,.9,1.97424,-0.32816,.9,1.97424,-0.32697,1.037175,-1.967083,-0.32697,1.037175,1.967083,-0.325863,.771675,-1.96042,-0.325863,.771675,1.96042,-0.325553,.0084,-0.625735,-0.325553,.0084,.625735,-0.325,2.98125,0,-0.325,2.98125,0,-0.323566,1.1784,-1.946601,-0.323566,1.1784,1.946601,-0.320834,2.98125,-0.053508,-0.320834,2.98125,.053508,-0.319628,.6564,-1.92291,-0.319628,.6564,1.92291,-0.319082,3.0348,-0.166306,-0.319082,3.0348,.166306,-0.318907,3.08115,-0.166221,-0.318907,3.08115,.166221,-0.318192,1.323225,-1.914272,-0.318192,1.323225,1.914272,-0.31659,2.6256,-0.232342,-0.31659,2.6256,.232342,-0.314223,.002175,-0.230604,-0.314223,.002175,.230604,-0.312283,2.5974,-0.425519,-0.312283,2.5974,.425519,-0.31185,2.5728,-0.599396,-0.31185,2.5728,.599396,-0.311096,1.4712,-1.87158,-0.311096,1.4712,1.87158,-0.310439,.553725,-1.867631,-0.310439,.553725,1.867631,-0.309596,2.5272,-0.921647,-0.309596,2.5272,.921647,-0.3088,3.1176,0,-0.3088,3.1176,0,-0.308744,2.98125,-0.103976,-0.308744,2.98125,.103976,-0.304843,3.1176,-0.050855,-0.304843,3.1176,.050855,-0.303862,.018225,.904575,-0.303862,.018225,-0.904575,-0.302523,1.621875,-1.820003,-0.302522,1.621875,1.820003,-0.299282,.4632,-1.800507,-0.299282,.4632,1.800507,-0.29336,3.1176,-0.098814,-0.29336,3.1176,.098814,-0.292719,1.7748,-1.761022,-0.292719,1.7748,1.761022,-0.290295,3.0348,-0.213234,-0.290295,3.0348,.213234,-0.290138,3.08115,-0.213123,-0.290138,3.08115,.213123,-0.28934,2.98125,-0.150793,-0.28934,2.98125,.150793,-0.28714,.384375,-1.72746,-0.28714,.384375,1.72746,-0.28193,1.929525,1.696119,-0.28193,1.929525,-1.696119,-0.2794,2.6592,0,-0.277752,2.6256,-0.277752,-0.277752,2.6256,.277752,-0.275801,2.6592,-0.045844,-0.275801,2.6592,.045844,-0.275675,.002175,-0.275675,-0.275675,.002175,.275675,-0.274998,.3168,-1.654413,-0.274998,.3168,1.654413,-0.274928,3.1176,-0.143301,-0.274928,3.1176,.143301,-0.2736,2.9232,0,-0.2736,2.9232,0,-0.270404,2.0856,-1.626774,-0.270404,2.0856,1.626774,-0.270092,2.9232,-0.045032,-0.270092,2.9232,.045032,-0.265363,2.6592,-0.08914,-0.265363,2.6592,.08914,-0.263841,.260025,1.587289,-0.263841,.260025,-1.587289,-0.263232,2.98125,-0.193348,-0.263232,2.98125,.193348,-0.263208,2.55,-0.783552,-0.263208,2.55,.783552,-0.25991,2.9232,-0.087511,-0.25991,2.9232,.087511,-0.258385,2.242575,-1.554467,-0.258385,2.242575,1.554467,-0.254788,3.0348,-0.254788,-0.254788,3.0348,.254788,-0.254653,3.08115,-0.254653,-0.254653,3.08115,.254653,-0.254652,.2136,-1.53201,-0.254652,.2136,1.53201,-0.250127,3.1176,-0.183734,-0.250127,3.1176,.183734,-0.248621,2.6592,.129351,-0.248621,2.6592,-0.129351,-0.248417,.177075,-1.4945,-0.248417,.177075,1.4945,-0.24612,.15,1.48068,-0.24612,2.4,-1.48068,-0.24612,.15,-1.48068,-0.24612,.15,-1.48068,-0.24612,.15,1.48068,-0.24612,2.4,1.48068,-0.245542,.127575,1.4772,-0.245542,.127575,-1.4772,-0.243569,2.9232,-0.12692,-0.243569,2.9232,.12692,-0.243424,2.5974,.467878,-0.243424,2.5974,-0.467878,-0.24297,.1056,1.461727,-0.24297,.1056,-1.461727,-0.242892,2.435437,-1.461258,-0.242892,2.435437,1.461258,-0.239491,2.463,-1.4408,-0.239491,2.463,1.4408,-0.237149,.084525,1.426709,-0.237149,.084525,-1.426709,-0.236115,2.482687,-1.42049,-0.236115,2.482687,1.42049,-0.232961,2.4945,-1.401513,-0.232961,2.4945,1.401513,-0.232342,2.6256,-0.31659,-0.232342,2.6256,.31659,-0.231031,2.98125,-0.231031,-0.231031,2.98125,.231031,-0.230604,.002175,-0.314223,-0.230604,.002175,.314223,-0.230225,2.498438,-1.385053,-0.230225,2.498438,1.385053,-0.229712,2.4,-1.381968,-0.229712,2.4,1.381968,-0.228104,2.4945,-1.372294,-0.228104,2.4945,1.372294,-0.227403,2.435437,-1.368074,-0.227403,2.435437,1.368074,-0.226824,.0648,1.364595,-0.226824,.0648,-1.364595,-0.226795,2.482687,1.364422,-0.226795,2.482687,-1.364422,-0.226496,2.463,-1.36262,-0.226496,2.463,1.36262,-0.226113,2.6592,-0.165941,-0.226113,2.6592,.165941,-0.224349,.0084,.667871,-0.224349,.0084,-0.667871,-0.221585,2.9232,-0.162745,-0.221585,2.9232,.162745,-0.2198,2.86335,0,-0.2198,2.86335,0,-0.219536,3.1176,-0.219536,-0.219536,3.1176,.219536,-0.216979,2.86335,.036157,-0.216979,2.86335,-0.036157,-0.214905,2.5728,-0.639758,-0.214905,2.5728,.639758,-0.213304,2.4,-1.283256,-0.213304,2.4,1.283256,-0.213234,3.0348,-0.290295,-0.213234,3.0348,.290295,-0.213123,3.08115,-0.290138,-0.213123,3.08115,.290138,-0.21074,.046875,-1.267832,-0.21074,.046875,1.267832,-0.209136,2.4408,-1.258183,-0.209136,2.4408,1.258183,-0.208794,2.86335,.07027,-0.208794,2.86335,-0.07027,-0.2,2.7,0,-0.2,2.7,0,-0.2,2.7,0,-0.2,2.7,0,-0.198374,2.6592,-0.198374,-0.198374,2.6592,.198374,-0.197684,2.4744,-1.189282,-0.197684,2.4744,1.189282,-0.197424,2.7,-0.032816,-0.197424,2.7,.032816,-0.197424,2.7,.032816,-0.197424,2.7,-0.032816,-0.195658,2.86335,-0.101925,-0.195658,2.86335,.101925,-0.1946,3.14145,0,-0.1946,3.14145,0,-0.194472,2.9232,-0.194472,-0.194472,2.9232,.194472,-0.193348,2.98125,-0.263232,-0.193348,2.98125,.263232,-0.192107,3.14145,-0.032048,-0.192107,3.14145,.032048,-0.189952,2.7,-0.063808,-0.189952,2.7,.063808,-0.189952,2.7,.063808,-0.189952,2.7,-0.063808,-0.187642,.0312,1.12887,-0.187642,.0312,-1.12887,-0.18487,3.14145,-0.062272,-0.18487,3.14145,.062272,-0.183734,3.1176,-0.250127,-0.183734,3.1176,.250127,-0.18111,2.6256,.348105,-0.18111,2.6256,-0.348105,-0.180521,2.5026,-1.086029,-0.180521,2.5026,1.086029,-0.179756,.002175
,-0.345503,-0.179756,.002175,.345503,-0.1792,2.8044,0,-0.1792,2.8044,0,-0.177989,2.86335,-0.130707,-0.177989,2.86335,.130707,-0.177968,2.7,-0.092592,-0.177968,2.7,.092592,-0.177968,2.7,.092592,-0.177968,2.7,-0.092592,-0.176897,2.8044,.02945,-0.176897,2.8044,-0.02945,-0.173255,3.14145,-0.090306,-0.173255,3.14145,.090306,-0.170215,2.8044,.057246,-0.170215,2.8044,-0.057246,-0.167751,2.5974,-0.499384,-0.167751,2.5974,.499384,-0.1674,2.74905,0,-0.1674,2.74905,0,-0.166306,3.0348,-0.319082,-0.166306,3.0348,.319082,-0.166221,3.08115,.318907,-0.166221,3.08115,-0.318907,-0.165941,2.6592,-0.226113,-0.165941,2.6592,.226113,-0.165245,2.74905,.02748,-0.165245,2.74905,-0.02748,-0.162745,2.9232,-0.221585,-0.162745,2.9232,.221585,-0.161856,2.7,-0.118784,-0.161856,2.7,.118784,-0.161856,2.7,.118784,-0.161856,2.7,-0.118784,-0.159496,2.8044,.083047,-0.159496,2.8044,-0.083047,-0.159223,2.5272,-0.957901,-0.159223,2.5272,.957901,-0.158995,2.74905,.053428,-0.158995,2.74905,-0.053428,-0.157626,3.14145,-0.115787,-0.157626,3.14145,.115787,-0.156274,.018225,.940158,-0.156274,.018225,-0.940158,-0.1562,2.86335,-0.1562,-0.1562,2.86335,.1562,-0.150793,2.98125,-0.28934,-0.150793,2.98125,.28934,-0.148969,2.74905,.077523,-0.148969,2.74905,-0.077523,-0.145078,2.8044,.106513,-0.145078,2.8044,-0.106513,-0.143301,3.1176,-0.274928,-0.143301,3.1176,.274928,-0.142,2.7,-0.142,-0.142,2.7,.142,-0.142,2.7,.142,-0.142,2.7,-0.142,-0.138348,3.14145,-0.138348,-0.138348,3.14145,.138348,-0.135489,2.74905,.099446,-0.135489,2.74905,-0.099446,-0.135366,2.55,-0.814374,-0.135366,2.55,.814374,-0.130707,2.86335,-0.177989,-0.130707,2.86335,.177989,-0.129351,2.6592,.248621,-0.129351,2.6592,-0.248621,-0.127304,2.8044,.127304,-0.127304,2.8044,-0.127304,-0.12692,2.9232,-0.243569,-0.12692,2.9232,.243569,-0.124808,2.6256,-0.371546,-0.124808,2.6256,.371546,-0.123875,.002175,.368768,-0.123875,.002175,-0.368768,-0.118874,2.74905,.118874,-0.118874,2.74905,-0.118874,-0.118784,2.7,-0.161856,-0.118784,2.7,.161856,-0.118784,2.7,.161856,-0.118784,2.7,-0.161856,-0.115787,3.14145,-0.157626,-0.115787,3.14145,.157626,-0.115381,.0084,.694143,-0.115381,.0084,-0.694143,-0.114676,3.0348,-0.340477,-0.114676,3.0348,.340477,-0.114619,3.08115,-0.340289,-0.114619,3.08115,.340289,-0.110524,2.5728,-0.664924,-0.110524,2.5728,.664924,-0.106513,2.8044,-0.145078,-0.106513,2.8044,.145078,-0.103976,2.98125,-0.308744,-0.103976,2.98125,.308744,-0.101925,2.86335,-0.195658,-0.101925,2.86335,.195658,-0.099446,2.74905,.135489,-0.099446,2.74905,-0.135489,-0.098814,3.1176,-0.29336,-0.098814,3.1176,.29336,-0.092592,2.7,-0.177968,-0.092592,2.7,.177968,-0.092592,2.7,-0.177968,-0.092592,2.7,.177968,-0.090306,3.14145,-0.173255,-0.090306,3.14145,.173255,-0.08914,2.6592,-0.265363,-0.08914,2.6592,.265363,-0.087511,2.9232,-0.25991,-0.087511,2.9232,.25991,-0.086273,2.5974,-0.519028,-0.086273,2.5974,.519028,-0.083047,2.8044,-0.159496,-0.083047,2.8044,.159496,-0.077523,2.74905,-0.148969,-0.077523,2.74905,.148969,-0.07027,2.86335,-0.208794,-0.07027,2.86335,.208794,-0.064188,2.6256,-0.386161,-0.064188,2.6256,.386161,-0.063808,2.7,-0.189952,-0.063808,2.7,.189952,-0.063808,2.7,-0.189952,-0.063808,2.7,.189952,-0.063708,.002175,.383274,-0.063708,.002175,-0.383274,-0.062272,3.14145,-0.18487,-0.062272,3.14145,.18487,-0.059016,3.0348,-0.353807,-0.059016,3.0348,.353807,-0.058988,3.08115,-0.35361,-0.058988,3.08115,.35361,-0.057246,2.8044,-0.170215,-0.057246,2.8044,.170215,-0.053508,2.98125,-0.320834,-0.053508,2.98125,.320834,-0.053428,2.74905,-0.158995,-0.053428,2.74905,.158995,-0.050855,3.1176,-0.304843,-0.050855,3.1176,.304843,-0.045844,2.6592,-0.275801,-0.045844,2.6592,.275801,-0.045032,2.9232,-0.270092,-0.045032,2.9232,.270092,-0.036157,2.86335,-0.216979,-0.036157,2.86335,.216979,-0.032816,2.7,-0.197424,-0.032816,2.7,.197424,-0.032816,2.7,-0.197424,-0.032816,2.7,.197424,-0.032048,3.14145,-0.192107,-0.032048,3.14145,.192107,-0.02945,2.8044,-0.176897,-0.02945,2.8044,.176897,-0.02748,2.74905,-0.165245,-0.02748,2.74905,.165245,0,.260025,1.608,0,1.929525,1.71825,0,2.0856,-1.648,0,.6564,-1.948,0,.771675,-1.986,0,2.482687,1.382225,0,2.7,-0.2,0,.127575,1.496475,0,2.4744,-1.2048,0,2.74905,-0.1674,0,.018225,.952425,0,.046875,-1.284375,0,.0648,1.3824,0,.384375,1.75,0,.4632,1.824,0,.553725,-1.892,0,1.037175,1.99275,0,1.1784,1.972,0,1.323225,-1.93925,0,1.621875,-1.84375,0,1.7748,1.784,0,2.4,-1.3,0,2.435437,-1.480325,0,2.435437,-1.385925,0,2.463,-1.4596,0,2.463,-1.3804,0,2.4945,-1.3902,0,2.5026,-1.1002,0,2.8044,-0.1792,0,2.86335,-0.2198,0,2.5728,-0.6736,0,.1056,1.4808,0,.177075,-1.514,0,2.4945,-1.4198,0,2.5272,-0.9704,0,2.9232,-0.2736,0,3.1176,-0.3088,0,2.5974,-0.5258,0,2.7,-0.2,0,2.98125,-0.325,0,3.14145,-0.1946,0,.002175,.388275,0,3.08115,-0.3582,0,0,0,0,.002175,-0.388275,0,.002175,.388275,0,.0084,-0.7032,0,.0084,.7032,0,.018225,-0.952425,0,.018225,.952425,0,.0312,-1.1436,0,.0312,-1.1436,0,.0312,1.1436,0,.0312,1.1436,0,.046875,-1.284375,0,.046875,1.284375,0,.0648,-1.3824,0,.0648,1.3824,0,.084525,-1.445325,0,.084525,-1.445325,0,.084525,1.445325,0,.084525,1.445325,0,.1056,-1.4808,0,.1056,1.4808,0,.127575,-1.496475,0,.127575,1.496475,0,.15,-1.5,0,.15,-1.5,0,.15,1.5,0,.15,1.5,0,.177075,-1.514,0,.177075,1.514,0,.2136,-1.552,0,.2136,-1.552,0,.2136,1.552,0,.2136,1.552,0,.260025,-1.608,0,.260025,1.608,0,.3168,-1.676,0,.3168,-1.676,0,.3168,1.676,0,.3168,1.676,0,.384375,-1.75,0,.384375,1.75,0,.4632,-1.824,0,.4632,1.824,0,.553725,-1.892,0,.553725,1.892,0,.6564,-1.948,0,.6564,1.948,0,.771675,-1.986,0,.771675,1.986,0,.9,-2,0,.9,-2,0,.9,2,0,.9,2,0,1.037175,-1.99275,0,1.037175,1.99275,0,1.1784,-1.972,0,1.1784,1.972,0,1.323225,-1.93925,0,1.323225,1.93925,0,1.4712,-1.896,0,1.4712,-1.896,0,1.4712,1.896,0,1.4712,1.896,0,1.621875,-1.84375,0,1.621875,1.84375,0,1.7748,-1.784,0,1.7748,1.784,0,1.929525,-1.71825,0,1.929525,1.71825,0,2.0856,-1.648,0,2.0856,1.648,0,2.242575,-1.57475,0,2.242575,-1.57475,0,2.242575,1.57475,0,2.242575,1.57475,0,2.4,-1.5,0,2.4,-1.5,0,2.4,-1.4,0,2.4,-1.4,0,2.4,-1.3,0,2.4,1.3,0,2.4,1.4,0,2.4,1.4,0,2.4,1.5,0,2.4,1.5,0,2.435437,-1.480325,0,2.435437,-1.385925,0,2.435437,1.385925,0,2.435437,1.480325,0,2.4408,-1.2746,0,2.4408,-1.2746,0,2.4408,1.2746,0,2.4408,1.2746,0,2.463,-1.4596,0,2.463,-1.3804,0,2.463,1.3804,0,2.463,1.4596,0,2.4744,-1.2048,0,2.4744,1.2048,0,2.482687,-1.439025,0,2.482687,-1.382225,0,2.482687,1.382225,0,2.482687,1.439025,0,2.4945,-1.4198,0,2.4945,-1.3902,0,2.4945,1.3902,0,2.4945,1.4198,0,2.498438,-1.403125,0,2.498438,-1.403125,0,2.498438,1.403125,0,2.498438,1.403125,0,2.5026,-1.1002,0,2.5026,1.1002,0,2.5272,-0.9704,0,2.5272,.9704,0,2.55,-0.825,0,2.55,-0.825,0,2.55,.825,0,2.55,.825,0,2.5728,-0.6736,0,2.5728,.6736,0,2.5974,-0.5258,0,2.5974,.5258,0,2.6256,-0.3912,0,2.6256,-0.3912,0,2.6256,.3912,0,2.6256,.3912,0,2.6592,-0.2794,0,2.6592,.2794,0,2.7,-0.2,0,2.7,-0.2,0,2.7,.2,0,2.7,.2,0,2.74905,-0.1674,0,2.74905,.1674,0,2.8044,-0.1792,0,2.8044,.1792,0,2.86335,-0.2198,0,2.86335,.2198,0,2.9232,-0.2736,0,2.9232,.2736,0,2.98125,-0.325,0,2.98125,.325,0,3.0348,-0.3584,0,3.0348,-0.3584,0,3.0348,.3584,0,3.0348,.3584,0,3.08115,-0.3582,0,3.08115,.3582,0,3.1176,-0.3088,0,3.1176,.3088,0,3.14145,-0.1946,0,3.14145,.1946,0,3.15,0,0,.002175,-0.388275,0,3.08115,.3582,0,2.5974,.5258,0,2.7,.2,0,2.98125,.325,0,3.14145,.1946,0,3.1176,.3088,0,.1056,-1.4808,0,.177075,1.514,0,2.4945,1.4198,0,2.5272,.9704,0,2.9232,.2736,0,2.5728,.6736,0,2.86335,.2198,0,.018225,-0.952425,0,.046875,1.284375,0,.0648,-1.3824,0,.384375,-1.75,0,.4632,-1.824,0,.553725,1.892,0,1.037175,-1.99275,0,1.1784,-1.972,0,1.323225,1.93925,0,1.621875,1.84375,0,1.7748,-1.784,0,2.4,1.3,0,2.435437,1.385925,0,2.435437,1.480325,0,2.463,1.3804,0,2.463,1.4596,0,2.4945,1.3902,0,2.5026,1.1002,0,2.8044,.1792,0,2.74905,.1674,0,.127575,-1.496475,0,2.4744,1.2048,0,.6564,1.948,0,.771675,1.986,0,2.482687,-1.382225,0,2.7,.2,0,.260025,-1.608,0,1.929525,-1.71825,0,2.0856,1.648,.02748,2.74905,-0.165245,.02748,2.74905,.165245,.02945,2.8044,-0.176897,.02945,2.8044,.176897,.032048,3.14145,-0.192107,.032048,3.14145,.192107,.032816,2.7,-0.197424,.032816,2.7,.197424,.032816,2.7,-0.197424,.032816,2.7,.197424,.036157,2.86335,-0.216979,.036157,2.86335,.216979,.045032,2.9232,-0.270092,.045032,2.9232,.270092,.045844,2.6592,-0.275801,.045844,2.6592,.275801,.050855,3.1176,-0.304843,.050855,3.1176,.304843,.053428,2.74905,-0.158995,.053428,2.74905,.158995,.053508,2.98125,-0.320834,.053508,2.98125,.320834,.057246,2.8044,-0.170215,.057246,2.8044,.170215,.058988,3.08115,-0.35361,.058988,3.08115,.35361,.059016,3.0348,-0.353807,.059016,3.0348,.353807,.062272,3.14145,-0.18487,.062272,3.14145,.18487,.063708,.002175,.383274,.063708,.002175,-0.383274,.063808,2.7,-0.189952,.063808,2.7,.189952,.063808,2.7,-0.189952,.063808,2.7,.189952,.064188,2.6256,-0.386161,.064188,2.6256,.386161,.07027,2.86335,-0.208794,.07027,2.86335,.208794,.077523,2.74905,-0.148969,.077523,2.74905,.148969,.083047,2.8044,-0.159496,.083047,2.8044,.159496,.086273,2.5974,-0.519028,.086273,2.5974,.519028,.087511,2.9232,-0.25991,.087511,2.9232,.25991,.08914,2.6592,-0.265363,.08914,2.6592,.265363,.090306,3.14145,-0.173255,.090306,3.14145,.173255,.092592,2.7,-0.177968,.092592,2.7,.177968,.092592,2.7,-0.177968,.092592,2.7,.177968,.098814,3.1176,-0.29336,.098814,3.1176,.29336,.099446,2.74905,.135489,.099446,2.74905,-0.135489,.101925,2.86335,-0.195658,.101925,2.86335,.195658,.103976,2.98125,-0.308744,.103976,2.98125,.308744,.106513,2.8044,-0.145078,.106513,2.8044,.145078,.110524,2.5728,-0.664924,.110524,2.5728,.664924,.114619,3.08115,-0.340289,.114619,3.08115,.340289,.114676,3.0348,-0.340477,.114676,3.0348,.340477,.115381,.0084,.694143,.115381,.0084,-0.694143,.115787,3.14145,-0.157626,.115787,3.14145,.157626,.118784,2.7,.161856,.118784,2.7,-0.161856,.118784,2.7,-0.161856,.118784,2.7,.161856,.118874,2.74905,.118874,.118874,2.74905,-0.118874,.123875,.002175,.368768,.123875,.002175,-0.368768,.124808,2.6256,-0.371546,.124808,2.6256,.371546,.12692,2.9232,-0.243569,.12692,2.9232,.243569,.127304,2.8044,.127304,.127304,2.8044,-0.127304,.129351,2.6592,.248621,.129351,2.6592,-0.248621,.130707,2.86335,-0.177989,.130707,2.86335,.177989,.135366,2.55,-0.814374,.135366,2.55,.814374,.135489,2.74905,.099446,.135489,2.74905,-0.099446,.138348,3.14145,-0.138348,.138348,3.14145,.138348,.142,2.7,.142,.142,2.7,-0.142,.142,2.7,-0.142,.142,2.7,.142,.143301,3.1176,-0.274928,.143301,3.1176,.274928,.145078,2.8044,.106513,.145078,2.8044,-0.106513,.148969,2.74905,.077523,.148969,2.74905,-0.077523,.150793,2.98125,-0.28934,.150793,2.98125,.28934,.1562,2.86335,-0.1562,.1562,2.86335,.1562,.156274,.018225,.940158,.156274,.018225,-0.940158,.157626,3.14145,-0.115787,.157626,3.14145,.115787,.158995,2.74905,.053428,.158995,2.74905,-0.053428,.159223,2.5272,-0.957901,.159223,2.5272,.957901,.159496,2.8044,.083047,.159496,2.8044,-0.083047,.161856,2.7,.118784,.161856,2.7,-0.118784,.161856,2.7,-0.118784,.161856,2.7,.118784,.162745,2.9232,-0.221585,.162745,2.9232,.221585,.165245,2.74905,.02748,.165245,2.74905,-0.02748,.165941,2.6592,-0.226113,.165941,2.6592,.226113,.166221,3.08115,.318907,.166221,3.08115,-0.318907,.166306,3.0348,-0.319082,.166306,3.0348,.319082,.1674,2.74905,0,.1674,2.74905,0,.167751,2.5974,-0.499384,.167751,2.5974,.499384,.170215,2.8044,.057246,.170215,2.8044,-0.057246,.173255,3.14145,-0.090306,.173255,3.14145,.090306,.176897,2.8044,.02945,.176897,2.8044,-0.02945,.177968,2.7,.092592,.177968,2.7,-0.092592,.177968,2.7,-0.092592,.177968,2.7,.092592,.177989,2.86335,-0.130707,.177989,2.86335,.130707,.1792,2.8044,0,.1792,2.8044,0,.179756,.002175,-0.345503,.179756,.002175,.345503,.180521,2.5026,-1.086029,.180521,2.5026,1.086029,.18111,2.6256,.348105,.18111,2.6256,-0.348105,.183734,3.1176,-0.250127,.183734,3.1176,.250127,.18487,3.14145,-0.062272,.18487,3.14145,.062272,.187642,.0312,1.12887,.187642,.0312,-1.12887,.189952,2.7,.063808,.189952,2.7,-0.063808,.189952,2.7,-0.063808,.189952,2.7,.063808,.192107,3.14145,-0.032048,.192107,3.14145,.032048,.193348,2.98125,-0.263232,.193348,2.98125,.263232,.194472,2.9232,-0.194472,.194472,2.9232,.194472,.1946,3.14145,0,.1946,3.14145,0,.195658,2.86335,-0.101925,.195658,2.86335,.101925,.197424,2.7,.032816,.197424,2.7,-0.032816,.197424,2.7,-0.032816,.197424,2.7,.032816,.197684,2.4744,-1.189282,.197684,2.4744,1.189282,.198374,2.6592,-0.198374,.198374,2.6592,.198374,.2,2.7,0,.2,2.7,0,.2,2.7,0,.2,2.7,0,.208794,2.86335,.07027,.208794,2.86335,-0.07027,.209136,2.4408,-1.258183,.209136,2.4408,1.258183,.21074,.046875,-1.267832,.21074,.046875,1.267832,.213123,3.08115,-0.290138,.213123,3.08115,.290138,.213234,3.0348,-0.290295,.213234,3.0348,.290295,.213304,2.4,-1.283256,.213304,2.4,1.283256,.214905,2.5728,-0.639758,.214905,2.5728,.639758,.216979,2.86335,.036157,.216979,2.86335,-0.036157,.219536,3.1176,-0.219536,.219536,3.1176,.219536,.2198,2.86335,0,.2198,2.86335,0,.221585,2.9232,-0.162745,.221585,2.9232,.162745,.224349,.0084,.667871,.224349,.0084,-0.667871,.226113,2.6592,-0.165941,.226113,2.6592,.165941,.226496,2.463,-1.36262,.226496,2.463,1.36262,.226795,2.482687,1.364422,.226795,2.482687,-1.364422,.226824,.0648,1.364595,.226824,.0648,-1.364595,.227403,2.435437,-1.368074,.227403,2.435437,1.368074,.228104,2.4945,-1.372294,.228104,2.4945,1.372294,.229712,2.4,-1.381968,.229712,2.4,1.381968,.230225,2.498438,-1.385053,.230225,2.498438,1.385053,.230604,.002175,-0.314223,.230604,.002175,.314223,.231031,2.98125,-0.231031,.231031,2.98125,.231031,.232342,2.6256,-0.31659,.232342,2.6256,.31659,.232961,2.4945,-1.401513,.232961,2.4945,1.401513,.236115,2.482687,-1.42049,.236115,2.482687,1.42049,.237149,.084525,1.426709,.237149,.084525,-1.426709,.239491,2.463,-1.4408,.239491,2.463,1.4408,.242892,2.435437,-1.461258,.242892,2.435437,1.461258,.24297,.1056,1.461727,.24297,.1056,-1.461727,.243424,2.5974,.467878,.243424,2.5974,-0.467878,.243569,2.9232,-0.12692,.243569,2.9232,.12692,.245542,.127575,1.4772,.245542,.127575,-1.4772,.24612,.15,-1.48068,.24612,2.4,-1.48068,.24612,.15,1.48068,.24612,.15,1.48068,.24612,2.4,1.48068,.24612,.15,-1.48068,.248417,.177075,-1.4945,.248417,.177075,1.4945,.248621,2.6592,.129351,.248621,2.6592,-0.129351,.250127,3.1176,-0.183734,.250127,3.1176,.183734,.254652,.2136,-1.53201,.254652,.2136,1.53201,.254653,3.08115,-0.254653,.254653,3.08115,.254653,.254788,3.0348,-0.254788,.254788,3.0348,.254788,.258385,2.242575,-1.554467,.258385,2.242575,1.554467,.25991,2.9232,-0.087511,.25991,2.9232,.087511,.263208,2.55,-0.783552,.263208,2.55,.783552,.263232,2.98125,-0.193348,.263232,2.98125,.193348,.263841,.260025,1.587289,.263841,.260025,-1.587289,.265363,2.6592,-0.08914,.265363,2.6592,.08914,.270092,2.9232,-0.045032,.270092,2.9232,.045032,.270404,2.0856,-1.626774,.270404,2.0856,1.626774,.2736,2.9232,0,.2736,2.9232,0,.274928,3.1176,-0.143301,.274928,3.1176,.143301,.274998,.3168,-1.654413,.274998,.3168,1.654413,.275675,.002175,-0.275675,.275675,.002175,.275675,.275801,2.6592,-0.045844,.275801,2.6592,.045844,.277752,2.6256,-0.277752,.277752,2.6256,.277752,.2794,2.6592,0,.28193,1.929525,1.696119,.28193,1.929525,-1.696119,.28714,.384375,-1.72746,.28714,.384375,1.72746,.28934,2.98125,-0.150793,.28934,2.98125,.150793,.290138,3.08115,-0.213123,.290138,3.08115,.213123,.290295,3.0348,-0.213234,.290295,3.0348,.213234,.292719,1.7748,-1.761022,.292719,1.7748,1.761022,.29336,3.1176,-0.098814,.29336,3.1176,.098814,.299282,.4632,-1.800507,.299282,.4632,1.800507,.302522,1.621875,-1.820003,.302523,1.621875,1.820003,.303862,.018225,.904575,.303862,.018225,-0.904575,.304843,3.1176,-0.050855,.304843,3.1176,.050855,.308744,2.98125,-0.103976,.308744,2.98125,.103976,.3088,3.1176,0,.3088,3.1176,0,.309596,2.5272,-0.921647,.309596,2.5272,.921647,.310439,.553725,-1.867631,.310439,.553725,1.867631,.311096,1.4712,-1.87158,.311096,1.4712,1.87158,.31185,2.5728,-0.599396,.31185,2.5728,.599396,.312283,2.5974,-0.425519,.312283,2.5974,.425519,.314223,.002175,-0.230604,.314223,.002175,.230604,.31659,2.6256,-0.232342,.31659,2.6256,.232342,.318192,1.323225,-1.914272,.318192,1.323225,1.914272,.318907,3.08115,-0.166221,.318907,3.08115,.166221,.319082,3.0348,-0.166306,.319082,3.0348,.166306,.319628,.6564,-1.92291,.319628,.6564,1.92291,.320834,2.98125,-0.053508,.320834,2.98125,.053508,.323566,1.1784,-1.946601,.323566,1.1784,1.946601,.325,2.98125,0,.325,2.98125,0,.325553,.0084,-0.625735,.325553,.0084,.625735,.325863,.771675,-1.96042,.325863,.771675,1.96042,.32697,1.037175,-1.967083,.32697,1.037175,1.967083,.32816,.9,-1.97424,.32816,.9,-1.97424,.32816,.9,1.97424,.340289,3.08115,-0.114619,.340289,3.08115,.114619,.340477,3.0348,-0.114676,.340477,3.0348,.114676,.345503,.002175,-0.179756,.345503,.002175,.179756,.348105,2.6256,-0.18111,.348105,2.6256,.18111,.351008,2.5026,-1.044926,.351008,2.5026,1.044926,.35361,3.08115,-0.058988,.35361,3.08115,.058988,.353807,3.0348,-0.059016,.353807,3.0348,.059016,.3582,3.08115,0,.3582,3.08115,0,.3584,3.0348,0,.3584,3.0348,0,.364854,.0312,1.086146,.364854,.0312,-1.086146,.368768,.002175,-0.123875,.368768,.002175,.123875,.371546,2.6256,-0.124808,.371546,2.6256,.124808,.373318,2.5974,-0.373318,.373318,2.5974,.373318,.381942,2.55,-0.734118,.381942,2.55,.734118,.383274,.002175,-0.063708,.383274,.002175,.063708,.384379,2.4744,-1.144271,.384379,2.4744,1.144271,.386161,2.6256,-0.064188,.386161,2.6256,.064188,.388275,.002175,0,.388275,.002175,0,.3912,2.6256,0,.3912,2.6256,0,.400065,2.5728,-0.545131,.400065,2.5728,.545131,.406648,2.4408,-1.210564,.406648,2.4408,1.210564,.409767,.046875,1.219848,.409767,.046875,-1.219848,.414752,2.4,-1.234688,.414752,2.4,1.234688,.417645,.0084,-0.569086,.417645,.0084,.569086,.425519,2.5974,.312283,.425519,2.5974,-0.312283,.440403,2.463,-1.311049,.440403,2.463,1.311049,.440935,.018225,.847506,.440935,.018225,-0.847506,.440985,2.482687,-1.312782,.440985,2.482687,1.312782,.441041,.0648,1.312948,.441041,.0648,-1.312948,.442166,2.435437,-1.316296,.442166,2.435437,1.316296,.443529,2.4945,-1.320356,.443529,2.4945,1.320356,.446656,2.4,-1.329664,.446656,2.4,1.329664,.447653,2.498438,-1.332632,.447653,2.498438,1.332632,.449256,2.5272,-0.863501,.449256,2.5272,.863501,.452973,2.4945,-1.348469,.452973,2.4945,1.348469,.459107,2.482687,-1.366728,.459107,2.482687,1.366728,.461116,.084525,1.372712,.461116,.084525,-1.372712,.465671,2.463,-1.38627,.465671,2.463,1.38627,.467878,2.5974,-0.243424,.467878,2.5974,.243424,.472283,2.435437,-1.405953,.472283,2.435437,1.405953,.472434,.1056,1.406405,.472434,.1056,-1.406405,.477435,.127575,1.421292,.477435,.127575,-1.421292,.478256,2.5728,-0.478256,.478256,2.5728,.478256,.47856,.15,-1.42464,.47856,2.4,-1.42464,.47856,.15,1.42464,.47856,.15,1.42464,.47856,.15,-1.42464,.47856,2.4,1.42464,.483027,.177075,-1.437937,.483027,.177075,1.437937,.489984,2.55,-0.667656,.489984,2.55,.667656,.49515,.2136,-1.474028,.49515,.2136,1.474028,.499272,.0084,-0.499272,.499272,.0084,.499272,.499384,2.5974,-0.167751,.499384,2.5974,.167751,.502408,2.242575,-1.495635,.502408,2.242575,1.495635,.509349,2.5026,.979002,.509349,2.5026,-0.979002,.513016,.260025,-1.527214,.513016,.260025,1.527214,.519028,2.5974,.086273,.519028,2.5974,-0.086273,.525778,2.0856,-1.565204,.525778,2.0856,1.565204,.5258,2.5974,0,.5258,2.5974,0,.529441,.0312,-1.017621,.529441,.0312,1.017621,.534711,.3168,-1.591798,.534711,.3168,1.591798,.545131,2.5728,-0.400065,.545131,2.5728,.400065,.54819,1.929525,-1.631925,.54819,1.929525,1.631925,.557774,2.4744,-1.072079,.557774,2.4744,1.072079,.55832,.384375,-1.66208,.55832,.384375,1.66208,.565664,.018225,.770779,.565664,.018225,-0.770779,.569086,.0084,-0.417645,.569086,.0084,.417645,.569167,1.7748,-1.694372,.569167,1.7748,1.694372,.57634,2.5272,-0.785325,.57634,2.5272,.785325,.581929,.4632,-1.732362,.581929,.4632,1.732362,.58575,2.55,-0.58575,.58575,2.55,.58575,.58823,1.621875,-1.75112,.58823,1.621875,1.75112,.590089,2.4408,1.13419,.590089,2.4408,-1.13419,.594614,.046875,-1.142888,.594614,.046875,1.142888,.599396,2.5728,-0.31185,.599396,2.5728,.31185,.601848,2.4,-1.156792,.601848,2.4,1.156792,.603624,.553725,-1.796946,.603624,.553725,1.796946,.6049,1.4712,-1.800745,.6049,1.4712,1.800745,.618698,1.323225,-1.841822,.618698,1.323225,1.841822,.62149,.6564,-1.850132,.62149,.6564,1.850132,.625735,.0084,.325553,.625735,.0084,-0.325553,.629147,1.1784,-1.872927,.629147,1.1784,1.872927,.633613,.771675,-1.886223,.633613,.771675,1.886223,.635767,1.037175,-1.892634,.635767,1.037175,1.892634,.63808,.9,-1.89952,.63808,.9,-1.89952,.63808,.9,1.89952,.63808,.9,1.89952,.63907,2.463,-1.228335,.63907,2.463,1.228335,.639758,2.5728,-0.214905,.639758,2.5728,.214905,.639915,2.482687,1.229959,.639915,2.482687,-1.229959,.639996,.0648,-1.230115,.639996,.0648,1.230115,.641628,2.435437,-1.233252,.641628,2.435437,1.233252,.643607,2.4945,-1.237056,.643607,2.4945,1.237056,.648144,2.4,-1.245776,.648144,2.4,1.245776,.649591,2.498438,-1.248557,.649591,2.498438,1.248557,.653431,2.5026,-0.89037,.653431,2.5026,.89037,.657311,2.4945,-1.263395,.657311,2.4945,1.263395,.664924,2.5728,-0.110524,.664924,2.5728,.110524,.666211,2.482687,1.280502,.666211,2.482687,-1.280502,.667656,2.55,-0.489984,.667656,2.55,.489984,.667871,.0084,-0.224349,.667871,.0084,.224349,.669128,.084525,-1.286108,.669128,.084525,1.286108,.6736,2.5728,0,.6736,2.5728,0,.675736,2.463,-1.29881,.675736,2.463,1.29881,.676222,.018225,.676222,.676222,.018225,-0.676222,.679207,.0312,-0.925493,.679207,.0312,.925493,.685331,2.435437,-1.317252,.685331,2.435437,1.317252,.685551,.1056,-1.317675,.685551,.1056,1.317675,.688984,2.5272,-0.688984,.688984,2.5272,.688984,.692808,.127575,1.331623,.692808,.127575,-1.331623,.694143,.0084,-0.115381,.694143,.0084,.115381,.69444,.15,1.33476,.69444,.15,-1.33476,.69444,2.4,1.33476,.69444,.15,-1.33476,.69444,.15,1.33476,.69444,2.4,-1.33476,.700921,.177075,1.347218,.700921,.177075,-1.347218,.7032,.0084,0,.715555,2.4744,-0.975021,.715555,2.4744,.975021,.718514,.2136,1.381032,.718514,.2136,-1.381032,.729046,2.242575,-1.401276,.729046,2.242575,1.401276,.734118,2.55,-0.381942,.734118,2.55,.381942,.74444,.260025,1.430863,.74444,.260025,-1.430863,.75701,2.4408,1.031508,.75701,2.4408,-1.031508,.762816,.046875,-1.039419,.762816,.046875,1.039419,.762958,2.0856,-1.466456,.762958,2.0856,1.466456,.770779,.018225,.565664,.770779,.018225,-0.565664,.772096,2.4,-1.052064,.772096,2.4,1.052064,.775921,.3168,-1.491372,.775921,.3168,1.491372,.781142,2.5026,-0.781142,.781142,2.5026,.781142,.783552,2.55,-0.263208,.783552,2.55,.263208,.785325,2.5272,-0.57634,.785325,2.5272,.57634,.795481,1.929525,1.528968,.795481,1.929525,-1.528968,.81018,.384375,1.55722,.81018,.384375,-1.55722,.811956,.0312,.811956,.811956,.0312,-0.811956,.814374,2.55,-0.135366,.814374,2.55,.135366,.819847,2.463,-1.11713,.819847,2.463,1.11713,.820931,2.482687,1.118607,.820931,2.482687,-1.118607,.821035,.0648,1.118749,.821035,.0648,-1.118749,.823129,2.435437,-1.121601,.823129,2.435437,1.121601,.825,2.55,0,.825,2.55,0,.825668,2.4945,-1.125061,.825668,2.4945,1.125061,.825921,1.7748,1.587475,.825921,1.7748,-1.587475,.831488,2.4,-1.132992,.831488,2.4,1.132992,.833344,2.498438,-1.135521,.833344,2.498438,1.135521,.843248,2.4945,-1.149016,.843248,2.4945,1.149016,.844439,.4632,1.623068,.844439,.4632,-1.623068,.847506,.018225,-0.440935,.847506,.018225,.440935,.853583,1.621875,-1.640643,.853583,1.621875,1.640643,.854666,2.482687,-1.164574,.854666,2.482687,1.164574,.855408,2.4744,-0.855408,.855408,2.4744,.855408,.858407,.084525,-1.169673,.858407,.084525,1.169673,.863501,2.5272,-0.449256,.863501,2.5272,.449256,.866886,2.463,-1.181225,.866886,2.463,1.181225,.87592,.553725,-1.683577,.87592,.553725,1.683577,.877772,1.4712,-1.687137,.877772,1.4712,1.687137,.879195,2.435437,-1.197997,.879195,2.435437,1.197997,.879477,.1056,-1.198382,.879477,.1056,1.198382,.888786,.127575,1.211067,.888786,.127575,-1.211067,.89037,2.5026,-0.653431,.89037,2.5026,.653431,.89088,.15,-1.21392,.89088,.15,1.21392,.89088,2.4,-1.21392,.89088,.15,-1.21392,.89088,.15,1.21392,.89088,2.4,1.21392,.897795,1.323225,-1.725622,.897795,1.323225,1.725622,.899195,.177075,1.22525,.899195,.177075,-1.22525,.901846,.6564,-1.733408,.901846,.6564,1.733408,.904575,.018225,.303862,.904575,.018225,-0.303862,.904966,2.4408,.904966,.904966,2.4408,-0.904966,.911906,.046875,-0.911906,.911906,.046875,.911906,.912957,1.1784,-1.754764,.912957,1.1784,1.754764,.919439,.771675,-1.767222,.919439,.771675,1.767222,.921647,2.5272,-0.309596,.921647,2.5272,.309596,.921764,.2136,1.256003,.921764,.2136,-1.256003,.922564,1.037175,1.773229,.922564,1.037175,-1.773229,.923,2.4,-0.923,.923,2.4,.923,.925493,.0312,.679207,.925493,.0312,-0.679207,.92592,.9,1.77968,.92592,.9,-1.77968,.92592,.9,-1.77968,.92592,.9,1.77968,.935276,2.242575,-1.274414,.935276,2.242575,1.274414,.940158,.018225,.156274,.940158,.018225,-0.156274,.952425,.018225,0,.952425,.018225,0,.955023,.260025,1.301322,.955023,.260025,-1.301322,.957901,2.5272,-0.159223,.957901,2.5272,.159223,.9704,2.5272,0,.9704,2.5272,0,.975021,2.4744,-0.715555,.975021,2.4744,.715555,.97878,2.0856,-1.333693,.97878,2.0856,1.333693,.979002,2.5026,.509349,.979002,2.5026,-0.509349,.980084,2.463,-0.980084,.980084,2.463,.980084,.98138,2.482687,-0.98138,.98138,2.482687,.98138,.981504,.0648,.981504,.981504,.0648,-0.981504,.984007,2.435437,-0.984007,.984007,2.435437,.984007,.987042,2.4945,-0.987042,.987042,2.4945,.987042,.994,2.4,-0.994,.994,2.4,.994,.99541,.3168,-1.356353,.99541,.3168,1.356353,.996219,2.498438,-0.996219,.996219,2.498438,.996219,1.008058,2.4945,-1.008058,1.008058,2.4945,1.008058,1.017621,.0312,.529441,1.017621,.0312,-0.529441,1.020503,1.929525,-1.390545,1.020503,1.929525,1.390545,1.021708,2.482687,-1.021708,1.021708,2.482687,1.021708,1.026181,.084525,-1.026181,1.026181,.084525,1.026181,1.031508,2.4408,.75701,1.031508,2.4408,-0.75701,1.036316,2.463,-1.036316,1.036316,2.463,1.036316,1.03936,.384375,-1.41624,1.03936,.384375,1.41624,1.039419,.046875,-0.762816,1.039419,.046875,.762816,1.044926,2.5026,-0.351008,1.044926,2.5026,.351008,1.051031,2.435437,-1.051031,1.051031,2.435437,1.051031,1.051368,.1056,-1.051368,1.051368,.1056,1.051368,1.052064,2.4,-0.772096,1.052064,2.4,.772096,1.059553,1.7748,-1.443756,1.059553,1.7748,1.443756,1.062497,.127575,1.062497,1.062497,.127575,-1.062497,1.065,.15,-1.065,1.065,.15,1.065,1.065,2.4,-1.065,1.065,2.4,1.065,1.072079,2.4744,-0.557774,1.072079,2.4744,.557774,1.07494,.177075,-1.07494,1.07494,.177075,1.07494,1.08331,.4632,-1.476127,1.08331,.4632,1.476127,1.086029,2.5026,.180521,1.086029,2.5026,-0.180521,1.086146,.0312,.364854,1.086146,.0312,-0.364854,1.09504,1.621875,-1.49211,1.09504,1.621875,1.49211,1.1002,2.5026,0,1.1002,2.5026,0,1.10192,.2136,1.10192,1.10192,.2136,-1.10192,1.11713,2.463,-0.819847,1.11713,2.463,.819847,1.118073,2.242575,-1.118073,1.118073,2.242575,1.118073,1.118607,2.482687,-0.820931,1.118607,2.482687,.820931,1.118749,.0648,-0.821035,1.118749,.0648,.821035,1.121601,2.435437,-0.823129,1.121601,2.435437,.823129,1.123697,.553725,-1.531158,1.123697,.553725,1.531158,1.125061,2.4945,-0.825668,1.125061,2.4945,.825668,1.126072,1.4712,-1.534395,1.126072,1.4712,1.534395,1.12887,.0312,-0.187642,1.12887,.0312,.187642,1.132992,2.4,-0.831488,1.132992,2.4,.831488,1.13419,2.4408,.590089,1.13419,2.4408,-0.590089,1.135521,2.498438,-0.833344,1.135521,2.498438,.833344,1.14168,.260025,1.14168,1.14168,.260025,-1.14168,1.142888,.046875,-0.594614,1.142888,.046875,.594614,1.1436,.0312,0,1.1436,.0312,0,1.144271,2.4744,-0.384379,1.144271,2.4744,.384379,1.149016,2.4945,-0.843248,1.149016,2.4945,.843248,1.151759,1.323225,-1.569396,1.151759,1.323225,1.569396,1.156792,2.4,-0.601848,1.156792,2.4,.601848,1.156956,.6564,-1.576477,1.156956,.6564,1.576477,1.164574,2.482687,-0.854666,1.164574,2.482687,.854666,1.169673,.084525,-0.858407,1.169673,.084525,.858407,1.17008,2.0856,-1.17008,1.17008,2.0856,1.17008,1.17121,1.1784,-1.5959,1.17121,1.1784,1.5959,1.179525,.771675,-1.60723,1.179525,.771675,1.60723,1.181225,2.463,-0.866886,1.181225,2.463,.866886,1.183534,1.037175,-1.612693,1.183534,1.037175,1.612693,1.18784,.9,-1.61856,1.18784,.9,-1.61856,1.18784,.9,1.61856,1.18784,.9,1.61856,1.189282,2.4744,-0.197684,1.189282,2.4744,.197684,1.18996,.3168,-1.18996,1.18996,.3168,1.18996,1.197997,2.435437,-0.879195,1.197997,2.435437,.879195,1.198382,.1056,-0.879477,1.198382,.1056,.879477,1.2048,2.4744,0,1.2048,2.4744,0,1.210564,2.4408,.406648,1.210564,2.4408,-0.406648,1.211067,.127575,.888786,1.211067,.127575,-0.888786,1.21392,.15,-0.89088,1.21392,.15,-0.89088,1.21392,.15,.89088,1.21392,.15,.89088,1.21392,2.4,-0.89088,1.21392,2.4,.89088,1.219848,.046875,-0.409767,1.219848,.046875,.409767,1.219958,1.929525,1.219958,1.219958,1.929525,-1.219958,1.22525,.177075,.899195,1.22525,.177075,-0.899195,1.228335,2.463,-0.63907,1.228335,2.463,.63907,1.229959,2.482687,-0.639915,1.229959,2.482687,.639915,1.230115,.0648,-0.639996,1.230115,.0648,.639996,1.233252,2.435437,-0.641628,1.233252,2.435437,.641628,1.234688,2.4,-0.414752,1.234688,2.4,.414752,1.237056,2.4945,-0.643607,1.237056,2.4945,.643607,1.2425,.384375,-1.2425,1.2425,.384375,1.2425,1.245776,2.4,-0.648144,1.245776,2.4,.648144,1.248557,2.498438,-0.649591,1.248557,2.498438,.649591,1.256003,.2136,.921764,1.256003,.2136,-0.921764,1.258183,2.4408,.209136,1.258183,2.4408,-0.209136,1.263395,2.4945,-0.657311,1.263395,2.4945,.657311,1.26664,1.7748,-1.26664,1.26664,1.7748,1.26664,1.267832,.046875,-0.21074,1.267832,.046875,.21074,1.274414,2.242575,-0.935276,1.274414,2.242575,.935276,1.2746,2.4408,0,1.2746,2.4408,0,1.280502,2.482687,-0.666211,1.280502,2.482687,.666211,1.283256,2.4,-0.213304,1.283256,2.4,.213304,1.284375,.046875,0,1.284375,.046875,0,1.286108,.084525,-0.669128,1.286108,.084525,.669128,1.29504,.4632,-1.29504,1.29504,.4632,1.29504,1.29881,2.463,-0.675736,1.29881,2.463,.675736,1.3,2.4,0,1.3,2.4,0,1.301322,.260025,.955023,1.301322,.260025,-0.955023,1.309063,1.621875,-1.309063,1.309063,1.621875,1.309063,1.311049,2.463,-0.440403,1.311049,2.463,.440403,1.312782,2.482687,-0.440985,1.312782,2.482687,.440985,1.312948,.0648,.441041,1.312948,.0648,-0.441041,1.316296,2.435437,-0.442166,1.316296,2.435437,.442166,1.317252,2.435437,-0.685331,1.317252,2.435437,.685331,1.317675,.1056,-0.685551,1.317675,.1056,.685551,1.320356,2.4945,-0.443529,1.320356,2.4945,.443529,1.329664,2.4,-0.446656,1.329664,2.4,.446656,1.331623,.127575,.692808,1.331623,.127575,-0.692808,1.332632,2.498438,-0.447653,1.332632,2.498438,.447653,1.333693,2.0856,-0.97878,1.333693,2.0856,.97878,1.33476,.15,.69444,1.33476,.15,-0.69444,1.33476,.15,-0.69444,1.33476,.15,.69444,1.33476,2.4,-0.69444,1.33476,2.4,.69444,1.34332,.553725,-1.34332,1.34332,.553725,1.34332,1.34616,1.4712,-1.34616,1.34616,1.4712,1.34616,1.347218,.177075,.700921,1.347218,.177075,-0.700921,1.348469,2.4945,-0.452973,1.348469,2.4945,.452973,1.356353,.3168,-0.99541,1.356353,.3168,.99541,1.36262,2.463,-0.226496,1.36262,2.463,.226496,1.364422,2.482687,-0.226795,1.364422,2.482687,.226795,1.364595,.0648,-0.226824,1.364595,.0648,.226824,1.366728,2.482687,-0.459107,1.366728,2.482687,.459107,1.368074,2.435437,-0.227403,1.368074,2.435437,.227403,1.372294,2.4945,-0.228104,1.372294,2.4945,.228104,1.372712,.084525,-0.461116,1.372712,.084525,.461116,1.376867,1.323225,-1.376868,1.376868,1.323225,1.376867,1.3804,2.463,0,1.3804,2.463,0,1.381032,.2136,.718514,1.381032,.2136,-0.718514,1.381968,2.4,-0.229712,1.381968,2.4,.229712,1.382225,2.482687,0,1.382225,2.482687,0,1.3824,.0648,0,1.3824,.0648,0,1.38308,.6564,-1.38308,1.38308,.6564,1.38308,1.385053,2.498438,-0.230225,1.385053,2.498438,.230225,1.385925,2.435437,0,1.385925,2.435437,0,1.38627,2.463,-0.465671,1.38627,2.463,.465671,1.3902,2.4945,0,1.3902,2.4945,0,1.390545,1.929525,-1.020503,1.390545,1.929525,1.020503,1.4,2.4,0,1.4,2.4,0,1.40012,1.1784,-1.40012,1.40012,1.1784,1.40012,1.401276,2.242575,-0.729046,1.401276,2.242575,.729046,1.401513,2.4945,-0.232961,1.401513,2.4945,.232961,1.403125,2.498438,0,1.403125,2.498438,0,1.405953,2.435437,-0.472283,1.405953,2.435437,.472283,1.406405,.1056,-0.472434,1.406405,.1056,.472434,1.41006,.771675,-1.41006,1.41006,.771675,1.41006,1.414853,1.037175,-1.414853,1.414853,1.037175,1.414853,1.41624,.384375,-1.03936,1.41624,.384375,1.03936,1.4198,2.4945,0,1.4198,2.4945,0,1.42,.9,-1.42,1.42,.9,-1.42,1.42,.9,1.42,1.42,.9,1.42,1.42049,2.482687,-0.236115,1.42049,2.482687,.236115,1.421292,.127575,.477435,1.421292,.127575,-0.477435,1.42464,.15,-0.47856,1.42464,.15,-0.47856,1.42464,.15,.47856,1.42464,.15,.47856,1.42464,2.4,-0.47856,1.42464,2.4,.47856,1.426709,.084525,-0.237149,1.426709,.084525,.237149,1.430863,.260025,.74444,1.430863,.260025,-0.74444,1.437937,.177075,.483027,1.437937,.177075,-0.483027,1.439025,2.482687,0,1.4408,2.463,-0.239491,1.4408,2.463,.239491,1.443756,1.7748,-1.059553,1.443756,1.7748,1.059553,1.445325,.084525,0,1.445325,.084525,0,1.4596,2.463,0,1.4596,2.463,0,1.461258,2.435437,-0.242892,1.461258,2.435437,.242892,1.461727,.1056,-0.24297,1.461727,.1056,.24297,1.466456,2.0856,-0.762958,1.466456,2.0856,.762958,1.474028,.2136,.49515,1.474028,.2136,-0.49515,1.476127,.4632,-1.08331,1.476127,.4632,1.08331,1.4772,.127575,.245542
,1.4772,.127575,-0.245542,1.480325,2.435437,0,1.480325,2.435437,0,1.48068,.15,-0.24612,1.48068,.15,.24612,1.48068,.15,.24612,1.48068,.15,-0.24612,1.48068,2.4,-0.24612,1.48068,2.4,.24612,1.4808,.1056,0,1.4808,.1056,0,1.491372,.3168,-0.775921,1.491372,.3168,.775921,1.49211,1.621875,-1.09504,1.49211,1.621875,1.09504,1.4945,.177075,.248417,1.4945,.177075,-0.248417,1.495635,2.242575,-0.502408,1.495635,2.242575,.502408,1.496475,.127575,0,1.496475,.127575,0,1.5,.15,0,1.5,.15,0,1.5,2.4,0,1.5,2.4,0,1.514,.177075,0,1.514,.177075,0,1.527214,.260025,-0.513016,1.527214,.260025,.513016,1.528968,1.929525,-0.795481,1.528968,1.929525,.795481,1.531158,.553725,-1.123697,1.531158,.553725,1.123697,1.53201,.2136,.254652,1.53201,.2136,-0.254652,1.534395,1.4712,-1.126072,1.534395,1.4712,1.126072,1.552,.2136,0,1.552,.2136,0,1.554467,2.242575,-0.258385,1.554467,2.242575,.258385,1.55722,.384375,-0.81018,1.55722,.384375,.81018,1.565204,2.0856,-0.525778,1.565204,2.0856,.525778,1.569396,1.323225,-1.151759,1.569396,1.323225,1.151759,1.57475,2.242575,0,1.57475,2.242575,0,1.576477,.6564,-1.156956,1.576477,.6564,1.156956,1.587289,.260025,.263841,1.587289,.260025,-0.263841,1.587475,1.7748,-0.825921,1.587475,1.7748,.825921,1.591798,.3168,-0.534711,1.591798,.3168,.534711,1.5959,1.1784,-1.17121,1.5959,1.1784,1.17121,1.60723,.771675,-1.179525,1.60723,.771675,1.179525,1.608,.260025,0,1.608,.260025,0,1.612693,1.037175,-1.183534,1.612693,1.037175,1.183534,1.61856,.9,-1.18784,1.61856,.9,-1.18784,1.61856,.9,1.18784,1.61856,.9,1.18784,1.623068,.4632,-0.844439,1.623068,.4632,.844439,1.626774,2.0856,-0.270404,1.626774,2.0856,.270404,1.631925,1.929525,-0.54819,1.631925,1.929525,.54819,1.640643,1.621875,-0.853583,1.640643,1.621875,.853583,1.648,2.0856,0,1.648,2.0856,0,1.654413,.3168,-0.274998,1.654413,.3168,.274998,1.66208,.384375,-0.55832,1.66208,.384375,.55832,1.676,.3168,0,1.676,.3168,0,1.683577,.553725,-0.87592,1.683577,.553725,.87592,1.687137,1.4712,-0.877772,1.687137,1.4712,.877772,1.694372,1.7748,-0.569167,1.694372,1.7748,.569167,1.696119,1.929525,-0.28193,1.696119,1.929525,.28193,1.7,.6,0,1.7,.6,0,1.7,.6231,.1782,1.7,.6231,-0.1782,1.7,.6858,-0.3168,1.7,.6858,.3168,1.7,.7782,.4158,1.7,.7782,-0.4158,1.7,.8904,-0.4752,1.7,.8904,.4752,1.7,1.0125,-0.495,1.7,1.0125,.495,1.7,1.1346,-0.4752,1.7,1.1346,.4752,1.7,1.2468,.4158,1.7,1.2468,-0.4158,1.7,1.3392,-0.3168,1.7,1.3392,.3168,1.7,1.4019,.1782,1.7,1.4019,-0.1782,1.7,1.425,0,1.7,1.425,0,1.71825,1.929525,0,1.71825,1.929525,0,1.725622,1.323225,-0.897795,1.725622,1.323225,.897795,1.72746,.384375,-0.28714,1.72746,.384375,.28714,1.732362,.4632,-0.581929,1.732362,.4632,.581929,1.733408,.6564,-0.901846,1.733408,.6564,.901846,1.75,.384375,0,1.75,.384375,0,1.75112,1.621875,-0.58823,1.75112,1.621875,.58823,1.754764,1.1784,-0.912957,1.754764,1.1784,.912957,1.761022,1.7748,-0.292719,1.761022,1.7748,.292719,1.767222,.771675,-0.919439,1.767222,.771675,.919439,1.773229,1.037175,-0.922564,1.773229,1.037175,.922564,1.77968,.9,-0.92592,1.77968,.9,-0.92592,1.77968,.9,.92592,1.77968,.9,.92592,1.784,1.7748,0,1.784,1.7748,0,1.796946,.553725,-0.603624,1.796946,.553725,.603624,1.800507,.4632,-0.299282,1.800507,.4632,.299282,1.800745,1.4712,-0.6049,1.800745,1.4712,.6049,1.820003,1.621875,-0.302523,1.820003,1.621875,.302522,1.824,.4632,0,1.824,.4632,0,1.841822,1.323225,-0.618698,1.841822,1.323225,.618698,1.84375,1.621875,0,1.84375,1.621875,0,1.850132,.6564,-0.62149,1.850132,.6564,.62149,1.867631,.553725,-0.310439,1.867631,.553725,.310439,1.87158,1.4712,-0.311096,1.87158,1.4712,.311096,1.872927,1.1784,-0.629147,1.872927,1.1784,.629147,1.886223,.771675,-0.633613,1.886223,.771675,.633613,1.892,.553725,0,1.892,.553725,0,1.892634,1.037175,-0.635767,1.892634,1.037175,.635767,1.896,1.4712,0,1.896,1.4712,0,1.89952,.9,-0.63808,1.89952,.9,-0.63808,1.89952,.9,.63808,1.89952,.9,.63808,1.914272,1.323225,-0.318192,1.914272,1.323225,.318192,1.92291,.6564,-0.319628,1.92291,.6564,.319628,1.9359,1.4442,0,1.9359,1.4442,0,1.93925,1.323225,0,1.93925,1.323225,0,1.939394,1.423221,-0.1751,1.939394,1.423221,.1751,1.946601,1.1784,-0.323566,1.946601,1.1784,.323566,1.948,.6564,0,1.948,.6564,0,1.948879,1.366278,-0.31129,1.948879,1.366278,.31129,1.96042,.771675,-0.325863,1.96042,.771675,.325863,1.962857,1.282362,-0.408568,1.962857,1.282362,.408568,1.967083,1.037175,-0.32697,1.967083,1.037175,.32697,1.972,1.1784,0,1.972,1.1784,0,1.97424,.9,-0.32816,1.97424,.9,.32816,1.97424,.9,.32816,1.97983,1.180464,-0.466934,1.97983,1.180464,.466934,1.986,.771675,0,1.986,.771675,0,1.99275,1.037175,0,1.99275,1.037175,0,1.9983,1.069575,-0.48639,1.9983,1.069575,.48639,2,.9,0,2,.9,0,2.01677,.958686,-0.466934,2.01677,.958686,.466934,2.033743,.856788,-0.408568,2.033743,.856788,.408568,2.047721,.772872,.31129,2.047721,.772872,-0.31129,2.057206,.715929,.1751,2.057206,.715929,-0.1751,2.0607,.69495,0,2.0607,.69495,0,2.1112,1.4976,0,2.1112,1.4976,0,2.116979,1.47912,-0.166687,2.116979,1.47912,.166687,2.132666,1.42896,-0.296333,2.132666,1.42896,.296333,2.155782,1.35504,-0.388937,2.155782,1.35504,.388937,2.183853,1.26528,-0.444499,2.183853,1.26528,.444499,2.2144,1.1676,-0.46302,2.2144,1.1676,.46302,2.2373,1.5789,0,2.2373,1.5789,0,2.244457,1.563171,-0.154289,2.244457,1.563171,.154289,2.244947,1.06992,-0.444499,2.244947,1.06992,.444499,2.263882,1.520478,-0.274291,2.263882,1.520478,.274291,2.273018,.98016,-0.388937,2.273018,.98016,.388937,2.29251,1.457562,-0.360007,2.29251,1.457562,.360007,2.296134,.90624,-0.296333,2.296134,.90624,.296333,2.311821,.85608,-0.166687,2.311821,.85608,.166687,2.3176,.8376,0,2.3176,.8376,0,2.3256,1.6818,0,2.3256,1.6818,0,2.327271,1.381164,-0.411437,2.327271,1.381164,.411437,2.33353,1.668948,-0.139234,2.33353,1.668948,.139234,2.355053,1.634064,-0.247526,2.355053,1.634064,.247526,2.3651,1.298025,-0.42858,2.3651,1.298025,.42858,2.386771,1.582656,-0.324878,2.386771,1.582656,.324878,2.3875,1.8,0,2.3875,1.8,0,2.3959,1.790025,.12285,2.3959,1.790025,-0.12285,2.402929,1.214886,-0.411437,2.402929,1.214886,.411437,2.4187,1.76295,-0.2184,2.4187,1.76295,.2184,2.425286,1.520232,-0.37129,2.425286,1.520232,.37129,2.4344,1.9272,0,2.4344,1.9272,0,2.43769,1.138488,-0.360007,2.43769,1.138488,.360007,2.44327,1.919976,.106466,2.44327,1.919976,-0.106466,2.4523,1.72305,-0.28665,2.4523,1.72305,.28665,2.466318,1.075572,-0.274291,2.466318,1.075572,.274291,2.4672,1.4523,-0.38676,2.4672,1.4523,.38676,2.467347,1.900368,.189274,2.467347,1.900368,-0.189274,2.4777,2.0571,0,2.4777,2.0571,0,2.485743,1.032879,-0.154289,2.485743,1.032879,.154289,2.487343,2.052375,-0.091411,2.487343,2.052375,.091411,2.4929,1.01715,0,2.4929,1.01715,0,2.4931,1.6746,-0.3276,2.4931,1.6746,.3276,2.502829,1.871472,.248422,2.502829,1.871472,-0.248422,2.509114,1.384368,-0.37129,2.509114,1.384368,.37129,2.513518,2.03955,.162509,2.513518,2.03955,-0.162509,2.5288,2.1834,0,2.5375,1.621875,-0.34125,2.5375,1.621875,.34125,2.539821,2.180796,-0.079013,2.539821,2.180796,.079013,2.545914,1.836384,-0.28391,2.545914,1.836384,.28391,2.547629,1.321944,-0.324878,2.547629,1.321944,.324878,2.55209,2.02065,-0.213293,2.55209,2.02065,.213293,2.569734,2.173728,-0.140467,2.569734,2.173728,.140467,2.579347,1.270536,-0.247526,2.579347,1.270536,.247526,2.5819,1.56915,-0.3276,2.5819,1.56915,.3276,2.5928,1.7982,-0.29574,2.5928,1.7982,.29574,2.598929,1.9977,-0.243763,2.598929,1.9977,.243763,2.5991,2.2998,0,2.5991,2.2998,0,2.60087,1.235652,-0.139234,2.60087,1.235652,.139234,2.6088,1.2228,0,2.6088,1.2228,0,2.612406,2.298813,.0706,2.612406,2.298813,-0.0706,2.613818,2.163312,-0.184363,2.613818,2.163312,.184363,2.6227,1.5207,-0.28665,2.6227,1.5207,.28665,2.639686,1.760016,-0.28391,2.639686,1.760016,.28391,2.648521,2.296134,.12551,2.648521,2.296134,-0.12551,2.6499,1.972725,.25392,2.6499,1.972725,-0.25392,2.6563,1.4808,-0.2184,2.6563,1.4808,.2184,2.667347,2.150664,-0.210701,2.667347,2.150664,.210701,2.6791,1.453725,.12285,2.6791,1.453725,-0.12285,2.682771,1.724928,.248422,2.682771,1.724928,-0.248422,2.6875,1.44375,0,2.6875,1.44375,0,2.7,2.4,0,2.7,2.4,0,2.7,2.4,0,2.700871,1.94775,-0.243763,2.700871,1.94775,.243763,2.701743,2.292186,.164732,2.701743,2.292186,-0.164732,2.7168,2.4,.0675,2.7168,2.4,-0.0675,2.7168,2.4,-0.0675,2.7168,2.4,.0675,2.718253,1.696032,.189274,2.718253,1.696032,-0.189274,2.7256,2.1369,-0.21948,2.7256,2.1369,.21948,2.7298,2.42025,0,2.74233,1.676424,.106466,2.74233,1.676424,-0.106466,2.747407,2.420406,-0.066744,2.747407,2.420406,.066744,2.74771,1.9248,-0.213293,2.74771,1.9248,.213293,2.7512,1.6692,0,2.7512,1.6692,0,2.7584,2.436,0,2.7624,2.4,.12,2.7624,2.4,-0.12,2.7624,2.4,-0.12,2.7624,2.4,.12,2.76637,2.287392,.188266,2.76637,2.287392,-0.188266,2.776365,2.436302,-0.064692,2.776365,2.436302,.064692,2.783853,2.123136,-0.210701,2.783853,2.123136,.210701,2.7846,2.44725,0,2.7846,2.44725,0,2.786282,1.9059,.162509,2.786282,1.9059,-0.162509,2.795198,2.420829,-0.118656,2.795198,2.420829,.118656,2.8,2.4,0,2.802528,2.44768,-0.061668,2.802528,2.44768,.061668,2.8072,2.454,0,2.8112,2.4,-0.0405,2.8112,2.4,.0405,2.812457,1.893075,.091411,2.812457,1.893075,-0.091411,2.8221,1.88835,0,2.8221,1.88835,0,2.8242,2.42025,0,2.8242,2.42025,0,2.82475,2.454529,-0.057996,2.82475,2.454529,.057996,2.825,2.45625,0,2.825,2.45625,0,2.825126,2.437123,-0.115008,2.825126,2.437123,.115008,2.8296,2.4,.1575,2.8296,2.4,-0.1575,2.8296,2.4,-0.1575,2.8296,2.4,.1575,2.836672,2.420519,-0.041256,2.836672,2.420519,.041256,2.8367,2.282175,.19611,2.8367,2.282175,-0.19611,2.8368,2.454,0,2.8368,2.454,0,2.837382,2.110488,-0.184363,2.837382,2.110488,.184363,2.8376,2.436,0,2.8376,2.436,0,2.8414,2.44725,0,2.8414,2.44725,0,2.8416,2.4,-0.072,2.8416,2.4,.072,2.841887,2.456841,-0.054,2.841887,2.456841,.054,2.851189,2.448847,-0.109632,2.851189,2.448847,.109632,2.851331,2.436454,-0.043308,2.851331,2.436454,.043308,2.852794,2.454605,-0.050004,2.852794,2.454605,.050004,2.856323,2.447812,-0.046332,2.856323,2.447812,.046332,2.865626,2.421453,-0.155736,2.865626,2.421453,.155736,2.870524,2.42125,-0.073344,2.870524,2.42125,.073344,2.872387,2.455966,-0.103104,2.872387,2.455966,.103104,2.881466,2.100072,-0.140467,2.881466,2.100072,.140467,2.8864,2.4,-0.0945,2.8864,2.4,.0945,2.887725,2.458444,-0.096,2.887725,2.458444,.096,2.888602,2.437685,-0.076992,2.888602,2.437685,.076992,2.896205,2.456246,.088896,2.896205,2.456246,-0.088896,2.896829,2.449338,-0.082368,2.896829,2.449338,.082368,2.896986,2.438333,-0.150948,2.896986,2.438333,.150948,2.90703,2.276958,.188266,2.90703,2.276958,-0.188266,2.9112,2.4,-0.18,2.9112,2.4,-0.18,2.9112,2.4,.18,2.911379,2.093004,-0.079013,2.911379,2.093004,.079013,2.920412,2.422328,-0.096264,2.920412,2.422328,.096264,2.9224,2.0904,0,2.922899,2.450567,-0.143892,2.922899,2.450567,.143892,2.9408,2.4,-0.108,2.9408,2.4,.108,2.942589,2.458082,-0.135324,2.942589,2.458082,.135324,2.943526,2.439499,-0.101052,2.943526,2.439499,.101052,2.951146,2.42221,-0.177984,2.951146,2.42221,.177984,2.955275,2.460806,-0.126,2.955275,2.460806,.126,2.956523,2.451588,-0.108108,2.956523,2.451588,.108108,2.960179,2.458666,-0.116676,2.960179,2.458666,.116676,2.971657,2.272164,.164732,2.971657,2.272164,-0.164732,2.98099,2.423636,.110016,2.98099,2.423636,-0.110016,2.984243,2.439802,-0.172512,2.984243,2.439802,.172512,3,2.4,-0.1875,3,2.4,-0.1875,3,2.4,-0.1125,3,2.4,.1125,3,2.4,.1875,3.009977,2.452655,-0.164448,3.009977,2.452655,.164448,3.010221,2.441702,-0.115488,3.010221,2.441702,.115488,3.024879,2.268216,.12551,3.024879,2.268216,-0.12551,3.027834,2.460653,-0.154656,3.027834,2.460653,.154656,3.029007,2.454319,-0.123552,3.029007,2.454319,.123552,3.0373,2.463675,-0.144,3.0373,2.463675,.144,3.037862,2.461603,.133344,3.037862,2.461603,-0.133344,3.044212,2.423034,-0.1854,3.044212,2.423034,.1854,3.046912,2.425059,.1146,3.046912,2.425059,-0.1146,3.0592,2.4,-0.108,3.0592,2.4,.108,3.060994,2.265537,.0706,3.060994,2.265537,-0.0706,3.0743,2.26455,0,3.0743,2.26455,0,3.0792,2.4414,-0.1797,3.0792,2.4414,.1797,3.0828,2.4441,-0.1203,3.0828,2.4441,.1203,3.0888,2.4,-0.18,3.0888,2.4,-0.18,3.0888,2.4,.18,3.104737,2.454928,-0.1713,3.104738,2.454928,.1713,3.107887,2.457291,-0.1287,3.107887,2.457291,.1287,3.112835,2.426483,.110016,3.112835,2.426483,-0.110016,3.1136,2.4,-0.0945,3.1136,2.4,.0945,3.1206,2.46345,.1611,3.1206,2.46345,-0.1611,3.1224,2.4648,.1389,3.1224,2.4648,-0.1389,3.126562,2.466797,-0.15,3.126562,2.466797,.15,3.137279,2.423859,-0.177984,3.137279,2.423859,.177984,3.155379,2.446498,-0.115488,3.155379,2.446498,.115488,3.1584,2.4,-0.072,3.1584,2.4,.072,3.1704,2.4,-0.1575,3.1704,2.4,.1575,3.1704,2.4,-0.1575,3.173413,2.427791,-0.096264,3.173413,2.427791,.096264,3.174157,2.442998,-0.172512,3.174157,2.442998,.172512,3.186768,2.460263,-0.123552,3.186768,2.460263,.123552,3.1888,2.4,-0.0405,3.1888,2.4,.0405,3.199498,2.457201,-0.164448,3.199498,2.457201,.164448,3.2,2.4,0,3.206938,2.467997,.133344,3.206938,2.467997,-0.133344,3.213366,2.466247,-0.154656,3.213366,2.466247,.154656,3.215825,2.469919,-0.144,3.215825,2.469919,.144,3.222074,2.448701,-0.101052,3.222074,2.448701,.101052,3.222799,2.424616,-0.155736,3.222799,2.424616,.155736,3.223301,2.428868,-0.073344,3.223301,2.428868,.073344,3.2376,2.4,-0.12,3.2376,2.4,.12,3.2376,2.4,-0.12,3.257153,2.429599,-0.041256,3.257153,2.429599,.041256,3.259252,2.462994,-0.108108,3.259252,2.462994,.108108,3.261414,2.444467,-0.150948,3.261414,2.444467,.150948,3.269625,2.429869,0,3.269625,2.429869,0,3.276998,2.450515,-0.076992,3.276998,2.450515,.076992,3.2832,2.4,-0.0675,3.2832,2.4,.0675,3.2832,2.4,-0.0675,3.284621,2.470934,-0.116676,3.284621,2.470934,.116676,3.286576,2.459289,-0.143892,3.286576,2.459289,.143892,3.293227,2.42524,-0.118656,3.293227,2.42524,.118656,3.29785,2.472787,-0.126,3.29785,2.472788,.126,3.298611,2.468818,-0.135324,3.298611,2.468818,.135324,3.3,2.4,0,3.3,2.4,0,3.314269,2.451746,-0.043308,3.314269,2.451746,.043308,3.318946,2.465243,-0.082368,3.318946,2.465243,.082368,3.328,2.4522,0,3.328,2.4522,0,3.333274,2.445677,-0.115008,3.333274,2.445677,.115008,3.341018,2.425663,-0.066744,3.341018,2.425663,.066744,3.348595,2.473354,.088896,3.348595,2.473354,-0.088896,3.358286,2.461009,-0.109632,3.358286,2.461009,.109632,3.358625,2.425819,0,3.359452,2.466769,-0.046332,3.359452,2.466769,.046332,3.3654,2.47515,-0.096,3.3654,2.47515,.096,3.368813,2.470934,-0.103104,3.368813,2.470934,.103104,3.374375,2.467331,0,3.374375,2.467331,0,3.382035,2.446498,-0.064692,3.382035,2.446498,.064692,3.392006,2.474995,-0.050004,3.392006,2.474995,.050004,3.4,2.4468,0,3.406947,2.462176,-0.061668,3.406947,2.462176,.061668,3.408,2.4756,0,3.408,2.4756,0,3.411237,2.476753,-0.054,3.411237,2.476753,.054,3.41645,2.472371,-0.057996,3.41645,2.472371,.057996,3.424875,2.462606,0,3.428125,2.477344,0,3.428125,2.477344,0,3.434,2.4729,0],3]})}